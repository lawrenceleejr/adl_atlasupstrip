-- VHDL Entity hsio.hsio_top.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library hsio;
use hsio.pkg_hsio_globals.all;

entity hsio_top is
   generic( 
      SIM_MODE : integer := 0
   );
   port( 
      -- CLOCKS
      clk_xtal_125_mi   : in     std_logic;                       --CRYSTAL_CLK_M
      clk_xtal_125_pi   : in     std_logic;                       --CRYSTAL_CLK_P
      -- ETHERNET INTERFACE
      eth_col_i         : in     std_logic;                       --ETH_COL
      eth_coma_o        : out    std_logic;                       --ETH_COMA
      eth_crs_i         : in     std_logic;                       --ETH_CRS
      eth_gtxclk_txc_o  : out    std_logic;                       --ETH_GTX_CLK
      eth_int_ni        : in     std_logic;                       --ETH_INT_N
      eth_mdc_o         : out    std_logic;                       --ETH_MDC
      eth_md_io         : inout  std_logic;                       --ETH_MDIO
      eth_reset_no      : out    std_logic;                       --ETH_RESET_N
      eth_rx_clk_rxc_i  : in     std_logic;                       --ETH_RX_CLK
      eth_rx_dv_ctl_i   : in     std_logic;                       --ETH_RX_DV
      eth_rx_er_i       : in     std_logic;                       --ETH_RX_ER
      eth_rxd_i         : in     std_logic_vector (7 downto 0);   --ETH_RXD_7
      eth_tx_clk_o      : out    std_logic;                       --ETH_TX_CLK
      eth_tx_en_ctl_o   : out    std_logic;                       --ETH_TX_EN
      eth_tx_er_o       : out    std_logic;                       --ETH_TX_ER
      eth_txd_o         : out    std_logic_vector (7 downto 0);   --ETH_TXD_7
      rst_poweron_ni    : in     std_logic;                       --PORESET_N
      -- USB INTERFACE
      usb_d_io          : inout  std_logic_vector (7 downto 0);   --USB_D7
      usb_rd_o          : out    std_logic;                       --USB_RD_N
      usb_rxf_i         : in     std_logic;                       --USB_RXF_N
      usb_txe_i         : in     std_logic;                       --USB_TXE_N
      usb_wr_o          : out    std_logic;                       --USB_WR
      sf_scl_o          : out    std_logic_vector (3 downto 0);   --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_io         : inout  std_logic_vector (3 downto 0);   --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      sf_rxm            : in     std_logic_vector (3 downto 0);   --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      sf_rxp            : in     std_logic_vector (3 downto 0);   --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_dis_o       : out    std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      sf_txm            : out    std_logic_vector (3 downto 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      sf_txp            : out    std_logic_vector (3 downto 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      eth_tx_clk_i      : in     std_logic;                       --ETH_TX_CLK
      sw_hex_ni         : in     std_logic_vector (3 downto 0);
      idc_p5_io         : out    std_logic_vector (31 downto 0);  --IDC_P5
      ibemon_convst_no  : out    std_logic_vector (2 downto 0);
      ibemon_convstt_no : inout  std_logic_vector (2 downto 0);
      -- DISPLAY
      disp_clk_o        : out    std_logic;                       --DISP_CLK
      disp_dat_o        : out    std_logic;                       --DISP_DAT
      disp_load_no      : out    std_logic_vector (1 downto 0);   --DISP_LOAD1_N
      disp_rst_no       : out    std_logic;                       --DISP_RST_N
      sma_io            : inout  std_logic_vector (8 downto 1);   --IDC_P5
      led_status_o      : out    std_logic;                       --LED_FPGA_STATUS
      -- IDC CONNECTORS (P2-5)
      idc_p2_io         : inout  std_logic_vector (31 downto 0);  --IDC_P2
      idc_p3_io         : inout  std_logic_vector (31 downto 0);  --IDC_P3
      idc_p4_io         : inout  std_logic_vector (31 downto 0);  --IDC_P4
      clk_mgt0a_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt0a_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_pi      : in     std_logic;                       --MGTCLK0A_M
      ibe_osc0_pi       : in     std_logic;                       --CRYSTAL_CLK_P
      -- CLOCKS
      ibe_osc0_mi       : in     std_logic;                       --CRYSTAL_CLK_M
      clk_mgt0b_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt0b_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_mi      : in     std_logic;                       --MGTCLK0A_M
      -- ZONE3 (ATCA) CONNECTOR
      sf_los_i          : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_rx_ratesel_o   : out    std_logic_vector (1 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_mod_abs_i      : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_fault_i     : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_ratesel_o   : out    std_logic_vector (1 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      ibe_spita_com_po  : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibe_spita_do_pi   : in     std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibe_spita_clk_mo  : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_spita_do_mi   : in     std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_spita_clk_po  : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_spita_com_mo  : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      DDR_DQ            : inout  std_logic_vector (15 downto 0);
      DDR_LDQS          : inout  std_logic;
      DDR_UDQS          : inout  std_logic;
      DDR_BA            : out    std_logic_vector (1 downto 0);
      DDR_ADDR          : out    std_logic_vector (12 downto 0);
      DDR_CK            : out    std_logic;
      DDR_CLK_n         : out    std_logic;
      DDR_CS_n          : out    std_logic;
      DDR_CE            : out    std_logic;
      DDR_RAS_n         : out    std_logic;
      DDR_CAS_n         : out    std_logic;
      DDR_WE_n          : out    std_logic;
      DDR_LDM           : out    std_logic;
      DDR_UDM           : out    std_logic;
      DDR_CLKE          : out    std_logic;
      ibepp0_clk_po     : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibe_do_pi         : inout  std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibe_cmdt_po       : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_do_mi         : inout  std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp1_bc_po      : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp1_bc_mo      : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibe_l1r_po        : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp1_lone_mo    : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_bcot_mo       : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibe_bco_po        : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp0_clk_mo     : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibe_dot_mi        : inout  std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp0_hrst_po    : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp0_hrst_mo    : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibepp0_bc_po      : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp1_hrst_po    : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp1_com_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp1_com_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_bco_mo        : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibe_bcot_po       : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp0_lone_po    : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp1_lone_po    : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp1_data0_pi   : in     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibe_noiset_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp0_bc_mo      : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibepp1_clk_po     : out    std_logic;                       -- BC (J32.3/J33.7) SW_CLK (J26.E4)
      ibepp1_data0_mi   : in     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibepp1_data1_pi   : in     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp1_clk_mo     : out    std_logic;                       -- BCB (J32.4/J33.8) SW_CLKB (J26.F4)
      ibepp1_data1_mi   : in     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      ibepp1_hrst_mo    : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibe_noise_mo      : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_noise_po      : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp0_com_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp0_lone_mo    : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_noiset_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp0_data1_pi   : in     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp0_data1_mi   : in     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      ibe_cmd_mo        : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_l1rt_mo       : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_dot_pi        : inout  std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp0_com_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp0_data0_pi   : in     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibepp0_data0_mi   : in     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibe_cmd_po        : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_cmdt_mo       : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_l1r_mo        : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_l1rt_po       : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibemon_sdat_io    : inout  std_logic_vector (2 downto 0);
      ibemon_sclt_o     : out    std_logic_vector (2 downto 0);
      ibemon_scl_o      : out    std_logic_vector (2 downto 0);
      ibemon_sda_io     : inout  std_logic_vector (2 downto 0);
      ibewire_sda_io    : inout  std_logic;
      ibewire_sclt_o    : out    std_logic;
      ibewire_scl_o     : out    std_logic;
      ibewire_sdat_io   : inout  std_logic
   );

-- Declarations

end hsio_top ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- hsio.hsio_top.struct
--
-- Created by Matt Warren 2014
--

--  hds interface_end
-- 
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
library UNISIM;
use UNISIM.Vcomponents.all;
library utils;
use utils.pkg_types.all;
library hsio;
use hsio.pkg_core_globals.all;


architecture struct of hsio_top is

   -- Architecture declarations

   -- Internal signal declarations
   signal sf_sda_in          : std_logic_vector(3 downto 0);             --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
   signal clk125             : std_logic;
   signal LO                 : std_logic;
   signal refclk0a           : std_logic;
   signal refclk0b           : std_logic;
   signal refclk1b           : std_logic;
   signal refclk1a           : std_logic;
   signal clk80              : std_ulogic;
   signal ibe_clk200         : std_logic;
   signal stat_word_cu       : std_logic_vector(63 downto 0);
   signal stat_word_usb      : std_logic_vector(63 downto 0);
   signal macaddress         : std_logic_vector(47 downto 0);
   signal tx_fifo_rst        : std_logic;
   signal rx_fifo_rst        : std_logic;
   signal clk40_ext_sel      : std_logic;
   signal net_usb_ready      : std_logic;
   signal sf_sda_out         : std_logic_vector(3 downto 0);             --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   signal sf_sda_t           : std_logic_vector(3 downto 0);             --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   signal marv_md_out        : std_logic;                                -- ETH_MDIO
   signal marv_md_t          : std_logic;                                -- ETH_MDIO
   signal clks_top_ready     : std_logic;
   signal clks_top_not_ready : std_logic;
   signal ibst_spi_clk       : std_logic;
   signal ibst_spi_com       : std_logic;
   signal rst156             : std_logic;
   signal clk156             : std_logic;
   signal clk40              : std_logic;
   signal ibst_spi_do        : std_ulogic;
   signal rx_ok              : std_logic;
   signal sf_mac_stat        : slv64_array(1 downto 0);
   signal sf_stat_word       : slv64_array(1 downto 0);
   signal sf_syncacq         : std_logic_vector(1 downto 0);
   signal tx_ok              : std_logic;
   signal sda_t              : std_logic_vector(15 downto 0);
   signal sck                : std_logic_vector(15 downto 0);
   signal sck_t              : std_logic_vector(15 downto 0);
   signal sda_tx             : std_logic_vector(15 downto 0);
   -- rx ll fifo interface
   signal rx_lls             : t_llsrc;
   signal tx_lld             : std_logic;
   signal tx_lls             : t_llsrc;
   signal rx_lld             : std_logic;
   signal rawsigs            : std_logic_vector(15 downto 0);
   -- registers
   signal reg                : t_reg_bus;
   signal com_abc            : std_logic;
   signal strobe40           : std_logic;
   signal HI                 : std_logic;
   signal rst125             : std_logic;
   signal outsigs            : std_logic_vector(15 downto 0);
   signal dbg_outsigs        : std_logic_vector(15 downto 0);
   signal clk160             : std_logic;
   signal clk_ext_on         : std_logic;
   signal clk_p2_pll         : std_logic;
   signal ZERO2              : std_logic_vector(1 downto 0);
   signal ZERO4              : std_logic_vector(3 downto 0);
   signal ZERO8              : std_logic_vector(7 downto 0);
   signal ZERO13             : std_logic_vector(12 downto 0);
   signal ZERO16             : std_logic_vector(15 downto 0);
   signal strm               : std_logic_vector(135 downto 0);
   signal rx_strm            : std_logic_vector(135 downto 0);
   --idelay_ce_o   : out    std_logic_vector (71 downto 0);
--idelay_inc_o  : out    std_logic;
--idelay_zero_o : out    std_logic_vector (71 downto 0);
   signal idelay_ctl         : t_idelay_ctl;
   signal link_idly          : std_logic_vector(67 downto 0);
   signal rx_link_idly       : std_logic_vector(67 downto 0);
   signal rst_top            : std_logic;
   signal hs_dxin            : std_logic_vector(3 downto 0);
   signal por_sw_n           : std_ulogic;
   signal rst_drv            : std_logic;
   signal rst                : std_logic;
   signal sda_rx             : std_logic_vector(15 downto 0);
   signal dbg_count          : std_logic_vector(7 downto 0);
   signal clocky_leds        : std_logic_vector(7 downto 0);
   signal lemo_clk           : std_logic;
   signal stat_clks_top      : std_logic_vector(7 downto 0);
   signal tog_pll            : std_logic_vector(MAX_TICTOG downto 0);
   signal strobe40_n         : std_logic;
   signal tlu_tclk           : std_logic;
   signal tlu_busy           : std_logic;
   signal tlu_rst            : std_logic;
   signal tlu_trig           : std_logic;
   signal db_wr              : std_logic_vector(31 downto 0);
   signal stat_clks_main     : std_logic_vector(3 downto 0);
   signal clk160ps           : std_logic;
   signal clks_main_ready    : std_logic;


attribute KEEP : string;
attribute KEEP of lemo_clk : signal is "true";
attribute KEEP of clk_p2_pll : signal is "true";

   -- Component Declarations
   component a13_drv_hsio_top
   port (
      clk160         : in     std_logic ;
      clk40          : in     std_logic ;
      clk80          : in     std_ulogic ;
      outsigs        : in     std_logic_vector (15 downto 0);
      rawsigs        : in     std_logic_vector (15 downto 0);
      -- registers
      reg            : in     t_reg_bus ;
      rst            : in     std_logic ;
      rst_poweron_ni : in     std_logic ;                   --PORESET_N
      a13_datl_o     : out    std_logic ;
      a13_datr_o     : out    std_logic ;
      ddr_l_o        : out    std_logic_vector (1 downto 0);
      ddr_r_o        : out    std_logic_vector (1 downto 0)
   );
   end component;
   component clocks_main
   generic (
      SIM_MODE : integer := 0
   );
   port (
      clk                    : in     std_logic ;
      clk125                 : in     std_logic ;
      clk40                  : in     std_logic ;
      clk_bco_dutycycle_we_i : in     std_logic ;
      clk_twin_phase_we_i    : in     std_logic ;
      clks_top_ready_i       : in     std_logic ;
      -- registers
      reg                    : in     t_reg_bus ;
      rst                    : in     std_logic ;
      rst125                 : in     std_logic ;
      clk160ps               : out    std_logic ;
      clks_main_ready_o      : out    std_logic ;
      stat_o                 : out    std_logic_vector (3 downto 0)
   );
   end component;
   component clocks_top
   generic (
      SIM_MODE : integer := 0
   );
   port (
      clk125           : in     std_logic ;
      clk156           : in     std_logic ;
      clk40_ext0_i     : in     std_logic ;
      clk40_ext1_i     : in     std_logic ;
      net_usb_ready    : in     std_logic ;
      por_sw_ni        : in     std_ulogic ;
      -- registers
      reg              : in     t_reg_bus ;
      rst_local_i      : in     std_ulogic ;
      clk160_o         : out    std_logic ;
      clk40_o          : out    std_logic ;
      clk80_o          : out    std_logic ;
      clk_ext_on_o     : out    std_logic ;
      clks_top_ready_o : out    std_logic ;
      rst125           : out    std_logic ;
      rst156_o         : out    std_logic ;
      rst_o            : out    std_logic ;
      stat_o           : out    std_logic_vector (7 downto 0);
      strobe40_o       : out    std_logic 
   );
   end component;
   component dio_ibeos_drv
   generic (
      LINK_ID_MIN : integer := 0
   );
   port (
      clk            : in     std_logic ;
      coml0_i        : in     std_logic ;
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_i   : in     t_idelay_ctl ;
      l1r3_i         : in     std_logic ;
      noise_i        : in     std_logic ;
      rawsigs_i      : in     std_logic_vector (15 downto 0);
      -- registers
      reg            : in     t_reg_bus ;
      rst            : in     std_logic ;
      rst_drv_i      : in     std_logic ;
      strobe40_i     : in     std_logic ;
      bco_no         : out    std_logic ;                     -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      bco_po         : out    std_logic ;                     -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      coml0_no       : out    std_logic ;                     -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      coml0_po       : out    std_logic ;                     -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      --dbg_sig_o  : out    std_logic;
      dbg_coml0_o    : out    std_logic ;
      --dbg_sig_o  : out    std_logic;
      dbg_l1r3_o     : out    std_logic ;
      --dbg_sig_o  : out    std_logic;
      dbg_spare_o    : out    std_logic ;
      l1r3_no        : out    std_logic ;                     -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      l1r3_po        : out    std_logic ;                     -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      rx_link_idly_o : out    std_logic_vector (23 downto 0);
      rx_strm_o      : out    std_logic_vector (47 downto 0);
      spare_no       : out    std_logic ;                     -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      spare_po       : out    std_logic ;                     -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      dat_nio        : inout  std_logic_vector (23 downto 0); -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      dat_pio        : inout  std_logic_vector (23 downto 0)  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
   );
   end component;
   component dio_ibeos_idc
   generic (
      LINK_ID_MIN : integer := 0
   );
   port (
      clk                : in     std_logic ;
      com_i              : in     std_logic ;
      dat0_ni            : in     std_logic ;                  -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      dat0_pi            : in     std_logic ;                  -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      dat1_ni            : in     std_logic ;                  -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      dat1_pi            : in     std_logic ;                  -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_i       : in     t_idelay_ctl ;
      l1r_i              : in     std_logic ;
      rawcom_en_com_i    : in     std_logic ;
      rawcom_en_l1r_i    : in     std_logic ;
      rawcom_en_rst_i    : in     std_logic ;
      rawcom_i           : in     std_logic ;
      -- registers
      reg                : in     t_reg_bus ;
      reset_i            : in     std_logic ;
      rst                : in     std_logic ;
      strobe40_i         : in     std_logic ;
      bco_no             : out    std_logic ;                  -- CLKB (J33.4) CLKLB (J26.D4)
      bco_po             : out    std_logic ;                  -- CLK (J33.3) CLKL (J26.C4)
      com_no             : out    std_logic ;                  -- CLKB (J33.4) CLKLB (J26.D4)
      com_po             : out    std_logic ;                  -- CLK (J33.3) CLKL (J26.C4)
      dbg_com_o          : out    std_logic ;
      dbg_l1r_o          : out    std_logic ;
      dbg_reset_o        : out    std_logic ;
      dclk_no            : out    std_logic ;                  -- CLKB (J33.4) CLKLB (J26.D4)
      dclk_po            : out    std_logic ;                  -- CLK (J33.3) CLKL (J26.C4)
      l1r_no             : out    std_logic ;                  -- CLKB (J33.4) CLKLB (J26.D4)
      l1r_po             : out    std_logic ;                  -- CLK (J33.3) CLKL (J26.C4)
      reset_no           : out    std_logic ;                  -- CLKB (J33.4) CLKLB (J26.D4)
      reset_po           : out    std_logic ;                  -- CLK (J33.3) CLKL (J26.C4)
      rx_link_idelayed_o : out    std_logic_vector (1 downto 0);
      rx_strm_o          : out    std_logic_vector (3 downto 0)
   );
   end component;
   component hsio_proc_wrapper
   generic (
      SIM_MODE : integer := 0
   );
   port (
      clk_sys_clk_pin     : in     std_logic;
      gpio_hex_input      : in     std_logic_vector (3 downto 0);
      rst_sys_rst_pin     : in     std_logic;
      DDR_ADDR            : out    std_logic_vector (12 downto 0);
      DDR_BA              : out    std_logic_vector (1 downto 0);
      DDR_CAS_n           : out    std_logic;
      DDR_CE              : out    std_logic;
      DDR_CK              : out    std_logic;
      DDR_CLKN            : out    std_logic;
      DDR_CS_n            : out    std_logic;
      DDR_LDM             : out    std_logic;
      DDR_RAS_n           : out    std_logic;
      DDR_UDM             : out    std_logic;
      DDR_WE_n            : out    std_logic;
      clock_LOCKED        : out    std_logic;
      mpmc_Idelayctrl_Rdy : out    std_logic;
      mpmc_InitDone       : out    std_logic;
      DDR_DQ              : inout  std_logic_vector (15 downto 0);
      DDR_LDQS            : inout  std_logic;
      DDR_UDQS            : inout  std_logic
   );
   end component;
   component main_top
   generic (
      SIM_MODE    : integer                       := 0;
      TOP_ID      : integer                       := 16#0C02#;
      ISHSIO      : integer                       := 1;
      TRIG_TLU_EN : integer                       := 1;
      TRIG_TDC_EN : integer                       := 1;
      BUILD_NO    : integer                       := 1;
      RO_MOD_PRES : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_RAW  : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_HST  : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_TYPE : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_IDBG : std_logic_vector(35 downto 0) := x"000000000"
   );
   port (
      idc_p3_io        : inout  std_logic_vector (31 downto 0); --IDC_P3
      sim_dat_lvds_o   : out    std_logic_vector (31 downto 0);
      idc_p4_io        : inout  std_logic_vector (31 downto 0); --IDC_P4
      idc_p5_io        : out    std_logic_vector (31 downto 0); --IDC_P5
      led_status_o     : out    std_logic ;                     --LED_FPGA_STATUS
      -- DISPLAY
      disp_clk_o       : out    std_logic ;                     --DISP_CLK
      disp_dat_o       : out    std_logic ;                     --DISP_DAT
      disp_rst_no      : out    std_logic ;                     --DISP_RST_N
      disp_load_no     : out    std_logic_vector (1 downto 0);  --DISP_LOAD1_N
      tx_fifo_rst_o    : out    std_logic ;
      rx_fifo_rst_o    : out    std_logic ;
      sma_io           : inout  std_logic_vector (8 downto 1);  --IDC_P5
      sw_hex_ni        : in     std_logic_vector (3 downto 0);
      clk              : in     std_logic ;
      clk40            : in     std_logic ;
      spiser_clk_o     : out    std_logic ;
      -- payload output
      spiser_com_o     : out    std_logic ;
      sf_stat_word_i   : in     slv64_array (1 downto 0);
      tx_ok_i          : in     std_logic ;
      -- Client Receiver Interface - EMAC0
      rx_ok_i          : in     std_logic ;
      sf_mac_stat_i    : in     slv64_array (1 downto 0);
      sf_syncacq_i     : in     std_logic_vector (1 downto 0);
      stat_word_cu     : in     std_logic_vector (63 downto 0);
      stat_word_usb    : in     std_logic_vector (63 downto 0);
      ti2c_cvst_no     : out    std_logic_vector (2 downto 0);
      ti2c_cvstt_no    : out    std_logic_vector (2 downto 0);
      tx_lls_o         : out    t_llsrc ;
      sck_o            : out    slv16 ;
      sck_to           : out    slv16 ;
      sda_o            : out    slv16 ;
      sda_to           : out    slv16 ;
      sda_i            : in     slv16 ;
      rst_in           : in     std_logic ;
      tx_lld_i         : in     std_logic ;
      rx_lld_o         : out    std_logic ;
      -- rx ll fifo interface
      rx_lls_i         : in     t_llsrc ;
      rawsigs_o        : out    std_logic_vector (15 downto 0);
      -- registers
      reg              : out    t_reg_bus ;
      strobe40_i       : in     std_logic ;
      outsigs_o        : out    std_logic_vector (15 downto 0);
      dbg_outsigs_i    : in     std_logic_vector (15 downto 0);
      clk_ext_on_i     : in     std_logic ;
      strm_i           : in     std_logic_vector (135 downto 0);
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_o     : out    t_idelay_ctl ;
      link_idly_i      : in     std_logic_vector (67 downto 0);
      rst_drv_o        : out    std_logic ;
      dbg_count_o      : out    std_logic_vector (7 downto 0);
      clocky_leds_o    : out    std_logic_vector (7 downto 0);
      lemo_clk_o       : out    std_logic ;
      clk_p2_pll_i     : in     std_logic ;
      stat_clks_top_i  : in     std_logic_vector (7 downto 0);
      tlu_busy         : out    std_logic ;
      tlu_tclk         : out    std_logic ;
      tlu_trig         : in     std_logic ;
      db_wr            : out    std_logic_vector (31 downto 0);
      stat_clks_main_i : in     std_logic_vector (3 downto 0);
      clk160ps         : in     std_logic ;
      clk160           : in     std_logic 
   );
   end component;
   component net_usb_top
   generic (
      MAC0_SF_MAP : integer := 0;
      MAC1_SF_MAP : integer := 1
   );
   port (
      clk             : in     std_logic ;
      clk125          : in     std_logic ;
      clk_25_50       : in     std_logic ;
      clk_idelay      : in     std_logic ;
      gmii_col_i      : in     std_logic ;                    -- ETH_COL
      gmii_crs_i      : in     std_logic ;                    -- ETH_CRS
      gmii_rx_clk_i   : in     std_logic ;
      gmii_rx_dv_i    : in     std_logic ;                    -- ETH_DV
      gmii_rx_er_i    : in     std_logic ;                    -- ETH_ER
      gmii_rxd_i      : in     std_logic_vector (7 downto 0); -- ETH_RXD
      init_i          : in     std_logic ;
      macaddress_i    : in     std_logic_vector (47 downto 0);
      marv_int_ni     : in     std_logic ;                    -- ETH_CRS
      marv_md_i       : in     std_logic ;                    -- ETH_MDIO
      mii_tx_clk_i    : in     std_logic ;
      refclk1         : in     std_logic ;
      rst_in          : in     std_logic ;
      rx_fifo_rst_i   : in     std_logic ;
      rx_lld_i        : in     std_logic ;
      sf_absent_i     : in     std_logic_vector (3 downto 0);
      sf_rxm          : in     std_logic_vector (3 downto 0); --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      sf_rxp          : in     std_logic_vector (3 downto 0); --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      sf_sda_i        : in     std_logic_vector (3 downto 0); --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      sf_txfault_i    : in     std_logic_vector (3 downto 0);
      sfp_los_i       : in     std_logic_vector (3 downto 0);
      tx_fifo_rst_i   : in     std_logic ;
      tx_lls_i        : in     t_llsrc ;
      usb_clk         : in     std_logic ;
      usb_rst         : in     std_logic ;
      usb_rxf_i       : in     std_logic ;                    --USB_RXF_N
      usb_txe_i       : in     std_logic ;                    --USB_TXE_N
      dbg_bus_o       : out    std_logic_vector (31 downto 0);
      gmii_gtx_clk_o  : out    std_logic ;                    -- ETH_GTX_CLK
      gmii_tx_en_o    : out    std_logic ;                    -- ETH_EN
      gmii_tx_er_o    : out    std_logic ;                    -- ETH_ER
      -- GMII Interface - EMAC0
      gmii_txd_o      : out    std_logic_vector (7 downto 0); -- ETH_TXD
      init_done_o     : out    std_logic ;
      marv_coma_o     : out    std_logic ;                    -- ETH_GTX_CLK
      marv_md_o       : out    std_logic ;                    -- ETH_MDIO
      marv_md_to      : out    std_logic ;                    -- ETH_MDIO
      -- MDIO Interface - EMAC0
      marv_mdc_o      : out    std_logic ;                    -- ETH_MDC
      marv_reset_no   : out    std_logic ;                    -- ETH_GTX_CLK
      rx_lls_o        : out    t_llsrc ;
      rx_ok_o         : out    std_logic ;
      sf_mac_stat_o   : out    slv64_array (1 downto 0);
      sf_ratesel_o    : out    std_logic_vector (3 downto 0);
      sf_scl_o        : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_o        : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_to       : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_stat_word_o  : out    slv64_array (1 downto 0);
      sf_syncacq_o    : out    std_logic_vector (1 downto 0);
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_dis_o     : out    std_logic_vector (3 downto 0); --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      sf_txm          : out    std_logic_vector (3 downto 0); --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      sf_txp          : out    std_logic_vector (3 downto 0); --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      stat_word_cu_o  : out    std_logic_vector (63 downto 0);
      stat_word_usb_o : out    std_logic_vector (63 downto 0);
      tx_lld_o        : out    std_logic ;
      tx_ok_o         : out    std_logic ;
      usb_rd_o        : out    std_logic ;                    --USB_RD_N
      usb_wr_o        : out    std_logic ;                    --USB_WR
      -- USB INTERFACE
      usb_d_io        : inout  std_logic_vector (7 downto 0)  --USB_D7
   );
   end component;
   component BUFG
   port (
      I : in     std_ulogic;
      O : out    std_ulogic
   );
   end component;
   component GT11CLK_MGT
   generic (
      SYNCLK1OUTEN : string := "ENABLE";
      SYNCLK2OUTEN : string := "DISABLE"
   );
   port (
      MGTCLKN    : in     std_ulogic;
      MGTCLKP    : in     std_ulogic;
      SYNCLK1OUT : out    std_ulogic;
      SYNCLK2OUT : out    std_ulogic
   );
   end component;
   component IBUFDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      DQS_BIAS         : string  := "FALSE";
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IFD_DELAY_VALUE  : string  := "AUTO";
      IOSTANDARD       : string  := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      IB : in     std_ulogic;
      O  : out    std_ulogic
   );
   end component;
   component IBUFGDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IOSTANDARD       : string  := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      IB : in     std_ulogic;
      O  : out    std_ulogic
   );
   end component;
   component OBUFDS
   generic (
      CAPACITANCE : string := "DONT_CARE";
      IOSTANDARD  : string := "DEFAULT";
      SLEW        : string := "SLOW"
   );
   port (
      I  : in     std_ulogic;
      O  : out    std_ulogic;
      OB : out    std_ulogic
   );
   end component;
   component ODDR
   generic (
      DDR_CLK_EDGE : string := "OPPOSITE_EDGE";
      INIT         : bit    := '0';
      SRTYPE       : string := "SYNC"
   );
   port (
      C  : in     std_ulogic;
      CE : in     std_ulogic;
      D1 : in     std_ulogic;
      D2 : in     std_ulogic;
      R  : in     std_ulogic;
      S  : in     std_ulogic;
      Q  : out    std_ulogic
   );
   end component;
   component PULLUP
   port (
      O : out    std_ulogic  := 'H'
   );
   end component;
   component onewire_tri
   port (
      data_i : in     std_logic;
      tren_i : in     std_logic;
      data_o : out    std_logic;
      pin_io : inout  std_logic
   );
   end component;
   component twowire_tri
   port (
      sck_i   : in     std_logic;
      sck_ti  : in     std_logic;
      sda_i   : in     std_logic;
      sda_ti  : in     std_logic;
      sck_pin : out    std_logic;
      sda_o   : out    std_logic;
      sda_pin : inout  std_logic
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1
   idc_p2_io(16) <= clocky_leds(1);
   idc_p2_io(17) <= clocky_leds(0);
   idc_p2_io(18) <= clocky_leds(3);
   idc_p2_io(19) <= clocky_leds(2);
   idc_p2_io(20) <= clocky_leds(5);
   idc_p2_io(21) <= clocky_leds(4);
   idc_p2_io(22) <= clocky_leds(7);
   idc_p2_io(23) <= clocky_leds(6);

   -- HDL Embedded Text Block 2 eb2
   -- eb1 1
   -- One of the ratesels conflicts with old SFP
   -- need to confirm SFP+ before driving
   -- (but sigs optional anyway)
   sf_tx_ratesel_o <= (others => 'Z');
   sf_rx_ratesel_o <= (others => 'Z');
   

   -- HDL Embedded Text Block 3 eb3
   -- eb3 3
   HI <= '1';
   LO <= '0';
   ZERO2 <=  "00";
   ZERO4 <=  "0000";
   ZERO8 <=  "00000000";
   ZERO13 <= "0000000000000";
   ZERO16 <= "0000000000000000";

   -- HDL Embedded Text Block 5 eb5
   macaddress <= x"e0ddccbbaa00";
   --mode_copper <= '1' when (sw_hex_ni(1 downto 0) = "10") else '0';
   --mode_usb <= '1' when (sw_hex_ni(1 downto 0) = "01") else '0';
   clk40_ext_sel <= '1' when (sw_hex_ni(2) = '0') else '0';

   -- HDL Embedded Text Block 6 eb6
   -- eb6 6 -- set non-build streams to zero
   gen_strms_filter  : for m in 0 to 33 generate
   
     gen_if_present : if (C_MOD_PRES(m) = '1') generate
       strm(m*4+0) <= rx_strm(m*4+0);
       strm(m*4+1) <= rx_strm(m*4+1);
       strm(m*4+2) <= rx_strm(m*4+2);
       strm(m*4+3) <= rx_strm(m*4+3);
       link_idly(m*2+0) <= rx_link_idly(m*2+0);
       link_idly(m*2+1) <= rx_link_idly(m*2+1);
     end generate;
   
     gen_if_not_present : if (C_MOD_PRES(m) = '0') generate
       strm(m*4+0) <= '0';
       strm(m*4+1) <= '0';
       strm(m*4+2) <= '0';
       strm(m*4+3) <= '0';
       link_idly(m*2+0) <= '0';
       link_idly(m*2+1) <= '0';
      end generate;
   
   end generate;

   -- HDL Embedded Text Block 9 eb9
   -- eb6 6 -- seperate downstream resets
   rst <= rst_top when rising_edge(clk80);


   -- ModuleWare code(v1.12) for instance 'U_0' of 'buff'
   idc_p2_io(7 downto 0) <= dbg_count;

   -- ModuleWare code(v1.12) for instance 'U_2' of 'buff'
   idc_p2_io(11) <= LO;

   -- ModuleWare code(v1.12) for instance 'U_3' of 'buff'
   idc_p2_io(10) <= LO;

   -- ModuleWare code(v1.12) for instance 'U_1' of 'inv'
   clks_top_not_ready <= not(clks_top_ready);

   -- ModuleWare code(v1.12) for instance 'U_4' of 'inv'
   strobe40_n <= not(strobe40);

   -- ModuleWare code(v1.12) for instance 'Umd_tribuf1' of 'tribuf'
   prcumd_tribuf1combo: process (marv_md_out, marv_md_t)
   begin
      if (marv_md_t = '0' or marv_md_t = 'L') then
         eth_md_io <= 'Z';
      elsif (marv_md_t = '1' or marv_md_t = 'H') then
         eth_md_io <= marv_md_out;
      else
         eth_md_io <= 'X';
      end if;
   end process prcumd_tribuf1combo;

   -- Instance port mappings.
   Uclocksmain : clocks_main
      generic map (
         SIM_MODE => SIM_MODE
      )
      port map (
         clk                    => clk80,
         clk125                 => clk125,
         clk40                  => clk40,
         clk_bco_dutycycle_we_i => db_wr(R_BCO_DC),
         clk_twin_phase_we_i    => db_wr(R_TWIN_DELAY),
         clks_top_ready_i       => clks_top_ready,
         reg                    => reg,
         rst                    => rst,
         rst125                 => rst125,
         clk160ps               => clk160ps,
         clks_main_ready_o      => clks_main_ready,
         stat_o                 => stat_clks_main
      );
   Uclockstop : clocks_top
      generic map (
         SIM_MODE => SIM_MODE
      )
      port map (
         clk125           => clk125,
         clk156           => clk156,
         clk40_ext0_i     => lemo_clk,
         clk40_ext1_i     => clk_p2_pll,
         net_usb_ready    => net_usb_ready,
         por_sw_ni        => rst_poweron_ni,
         reg              => reg,
         rst_local_i      => LO,
         clk160_o         => clk160,
         clk40_o          => clk40,
         clk80_o          => clk80,
         clk_ext_on_o     => clk_ext_on,
         clks_top_ready_o => clks_top_ready,
         rst125           => rst125,
         rst156_o         => rst156,
         rst_o            => rst_top,
         stat_o           => stat_clks_top,
         strobe40_o       => strobe40
      );
   Udiostbd : dio_ibeos_drv
      generic map (
         LINK_ID_MIN => 32
      )
      port map (
         clk            => clk80,
         coml0_i        => outsigs(OS_STB_COM),
         idelay_ctl_i   => idelay_ctl,
         l1r3_i         => outsigs(OS_STB_L1R),
         noise_i        => outsigs(OS_STB_NOS),
         rawsigs_i      => rawsigs,
         reg            => reg,
         rst            => rst,
         rst_drv_i      => rst_drv,
         strobe40_i     => strobe40,
         bco_no         => ibe_bco_mo,
         bco_po         => ibe_bco_po,
         coml0_no       => ibe_cmd_mo,
         coml0_po       => ibe_cmd_po,
         dbg_coml0_o    => dbg_outsigs(OS_STB_COM),
         dbg_l1r3_o     => dbg_outsigs(OS_STB_L1R),
         dbg_spare_o    => dbg_outsigs(OS_STB_NOS),
         l1r3_no        => ibe_l1r_mo,
         l1r3_po        => ibe_l1r_po,
         rx_link_idly_o => rx_link_idly(55 downto 32),
         rx_strm_o      => rx_strm(111 downto 64),
         spare_no       => ibe_noise_mo,
         spare_po       => ibe_noise_po,
         dat_nio        => ibe_do_mi,
         dat_pio        => ibe_do_pi
      );
   Udiosttd : dio_ibeos_drv
      generic map (
         LINK_ID_MIN => 0
      )
      port map (
         clk            => clk80,
         coml0_i        => outsigs(OS_STT_COM),
         idelay_ctl_i   => idelay_ctl,
         l1r3_i         => outsigs(OS_STT_L1R),
         noise_i        => outsigs(OS_STT_NOS),
         rawsigs_i      => rawsigs,
         reg            => reg,
         rst            => rst,
         rst_drv_i      => rst_drv,
         strobe40_i     => strobe40,
         bco_no         => ibe_bcot_mo,
         bco_po         => ibe_bcot_po,
         coml0_no       => ibe_cmdt_mo,
         coml0_po       => ibe_cmdt_po,
         dbg_coml0_o    => dbg_outsigs(OS_STT_COM),
         dbg_l1r3_o     => dbg_outsigs(OS_STT_L1R),
         dbg_spare_o    => dbg_outsigs(OS_STT_NOS),
         l1r3_no        => ibe_l1rt_mo,
         l1r3_po        => ibe_l1rt_po,
         rx_link_idly_o => rx_link_idly(23 downto 0),
         rx_strm_o      => rx_strm(47 downto 0),
         spare_no       => ibe_noiset_mo,
         spare_po       => ibe_noiset_po,
         dat_nio        => ibe_dot_mi,
         dat_pio        => ibe_dot_pi
      );
   Udioidc0 : dio_ibeos_idc
      generic map (
         LINK_ID_MIN => 64
      )
      port map (
         clk                => clk80,
         com_i              => outsigs(OS_ID0_COM),
         dat0_ni            => ibepp0_data0_mi,
         dat0_pi            => ibepp0_data0_pi,
         dat1_ni            => ibepp0_data1_mi,
         dat1_pi            => ibepp0_data1_pi,
         idelay_ctl_i       => idelay_ctl,
         l1r_i              => outsigs(OS_ID0_L1R),
         rawcom_en_com_i    => reg(R_COM_ENA)(B_J37_COM_EN),
         rawcom_en_l1r_i    => reg(R_COM_ENA)(B_COM_J37_L1),
         rawcom_en_rst_i    => reg(R_COM_ENA)(B_COM_J37_RST),
         rawcom_i           => LO,
         reg                => reg,
         reset_i            => outsigs(OS_ID0_RST),
         rst                => rst,
         strobe40_i         => strobe40,
         bco_no             => ibepp0_clk_mo,
         bco_po             => ibepp0_clk_po,
         com_no             => ibepp0_com_mo,
         com_po             => ibepp0_com_po,
         dbg_com_o          => dbg_outsigs(OS_ID0_COM),
         dbg_l1r_o          => dbg_outsigs(OS_ID0_L1R),
         dbg_reset_o        => dbg_outsigs(OS_ID0_RST),
         dclk_no            => ibepp0_bc_mo,
         dclk_po            => ibepp0_bc_po,
         l1r_no             => ibepp0_lone_mo,
         l1r_po             => ibepp0_lone_po,
         reset_no           => ibepp0_hrst_mo,
         reset_po           => ibepp0_hrst_po,
         rx_link_idelayed_o => rx_link_idly(65 downto 64),
         rx_strm_o          => rx_strm(131 downto 128)
      );
   Udioidc1 : dio_ibeos_idc
      generic map (
         LINK_ID_MIN => 66
      )
      port map (
         clk                => clk80,
         com_i              => outsigs(OS_ID1_COM),
         dat0_ni            => ibepp1_data0_mi,
         dat0_pi            => ibepp1_data0_pi,
         dat1_ni            => ibepp1_data1_mi,
         dat1_pi            => ibepp1_data1_pi,
         idelay_ctl_i       => idelay_ctl,
         l1r_i              => outsigs(OS_ID0_L1R),
         rawcom_en_com_i    => reg(R_COM_ENA)(B_J38_COM_EN),
         rawcom_en_l1r_i    => reg(R_COM_ENA)(B_COM_J38_L1),
         rawcom_en_rst_i    => reg(R_COM_ENA)(B_COM_J38_RST),
         rawcom_i           => LO,
         reg                => reg,
         reset_i            => outsigs(OS_ID1_RST),
         rst                => rst,
         strobe40_i         => strobe40,
         bco_no             => ibepp1_clk_mo,
         bco_po             => ibepp1_clk_po,
         com_no             => ibepp1_com_mo,
         com_po             => ibepp1_com_po,
         dbg_com_o          => dbg_outsigs(OS_ID1_COM),
         dbg_l1r_o          => dbg_outsigs(OS_ID1_L1R),
         dbg_reset_o        => dbg_outsigs(OS_ID1_RST),
         dclk_no            => ibepp1_bc_mo,
         dclk_po            => ibepp1_bc_po,
         l1r_no             => ibepp1_lone_mo,
         l1r_po             => ibepp1_lone_po,
         reset_no           => ibepp1_hrst_mo,
         reset_po           => ibepp1_hrst_po,
         rx_link_idelayed_o => rx_link_idly(67 downto 66),
         rx_strm_o          => rx_strm(135 downto 132)
      );
   Uhsioprocwrap : hsio_proc_wrapper
      generic map (
         SIM_MODE => SIM_MODE
      )
      port map (
         clk_sys_clk_pin     => clk125,
         rst_sys_rst_pin     => rst_poweron_ni,
         gpio_hex_input      => sw_hex_ni,
         DDR_DQ              => DDR_DQ,
         DDR_LDQS            => DDR_LDQS,
         DDR_UDQS            => DDR_UDQS,
         DDR_BA              => DDR_BA,
         DDR_ADDR            => DDR_ADDR,
         DDR_CK              => DDR_CK,
         DDR_CLKN            => DDR_CLK_n,
         DDR_CS_n            => DDR_CS_n,
         DDR_CE              => DDR_CE,
         DDR_RAS_n           => DDR_RAS_n,
         DDR_CAS_n           => DDR_CAS_n,
         DDR_WE_n            => DDR_WE_n,
         DDR_LDM             => DDR_LDM,
         DDR_UDM             => DDR_UDM,
         mpmc_Idelayctrl_Rdy => open,
         mpmc_InitDone       => open,
         clock_LOCKED        => DDR_CLKE
      );
   Umain : main_top
      generic map (
         SIM_MODE => SIM_MODE,
         TOP_ID   => 16#0C02#,
         ISHSIO   => 1
      )
      port map (
         idc_p3_io        => idc_p3_io,
         sim_dat_lvds_o   => open,
         idc_p4_io        => idc_p4_io,
         idc_p5_io        => idc_p5_io,
         led_status_o     => led_status_o,
         disp_clk_o       => disp_clk_o,
         disp_dat_o       => disp_dat_o,
         disp_rst_no      => disp_rst_no,
         disp_load_no     => disp_load_no,
         tx_fifo_rst_o    => tx_fifo_rst,
         rx_fifo_rst_o    => rx_fifo_rst,
         sma_io           => sma_io,
         sw_hex_ni        => sw_hex_ni,
         clk              => clk80,
         clk40            => clk40,
         spiser_clk_o     => ibst_spi_clk,
         spiser_com_o     => ibst_spi_com,
         sf_stat_word_i   => sf_stat_word,
         tx_ok_i          => tx_ok,
         rx_ok_i          => rx_ok,
         sf_mac_stat_i    => sf_mac_stat,
         sf_syncacq_i     => sf_syncacq,
         stat_word_cu     => stat_word_cu,
         stat_word_usb    => stat_word_usb,
         ti2c_cvst_no     => ibemon_convst_no,
         ti2c_cvstt_no    => open,
         tx_lls_o         => tx_lls,
         sck_o            => sck,
         sck_to           => sck_t,
         sda_o            => sda_tx,
         sda_to           => sda_t,
         sda_i            => sda_rx,
         rst_in           => rst_top,
         tx_lld_i         => tx_lld,
         rx_lld_o         => rx_lld,
         rx_lls_i         => rx_lls,
         rawsigs_o        => rawsigs,
         reg              => reg,
         strobe40_i       => strobe40,
         outsigs_o        => outsigs,
         dbg_outsigs_i    => dbg_outsigs,
         clk_ext_on_i     => clk_ext_on,
         strm_i           => strm,
         idelay_ctl_o     => idelay_ctl,
         link_idly_i      => link_idly,
         rst_drv_o        => rst_drv,
         dbg_count_o      => dbg_count,
         clocky_leds_o    => clocky_leds,
         lemo_clk_o       => lemo_clk,
         clk_p2_pll_i     => clk_p2_pll,
         stat_clks_top_i  => stat_clks_top,
         tlu_busy         => tlu_busy,
         tlu_tclk         => tlu_tclk,
         tlu_trig         => tlu_trig,
         db_wr            => db_wr,
         stat_clks_main_i => stat_clks_main,
         clk160ps         => clk160ps,
         clk160           => clk160
      );
   Unet_usb_top : net_usb_top
      generic map (
         MAC0_SF_MAP => 0,
         MAC1_SF_MAP => 1
      )
      port map (
         clk             => clk80,
         clk125          => clk125,
         clk_25_50       => clk40,
         clk_idelay      => clk156,
         gmii_col_i      => eth_col_i,
         gmii_crs_i      => eth_crs_i,
         gmii_rx_clk_i   => eth_rx_clk_rxc_i,
         gmii_rx_dv_i    => eth_rx_dv_ctl_i,
         gmii_rx_er_i    => eth_rx_er_i,
         gmii_rxd_i      => eth_rxd_i,
         init_i          => clks_top_not_ready,
         macaddress_i    => macaddress,
         marv_int_ni     => eth_int_ni,
         marv_md_i       => eth_md_io,
         mii_tx_clk_i    => eth_tx_clk_i,
         refclk1         => refclk1a,
         rst_in          => rst_top,
         rx_fifo_rst_i   => rx_fifo_rst,
         rx_lld_i        => rx_lld,
         sf_absent_i     => sf_mod_abs_i,
         sf_rxm          => sf_rxm,
         sf_rxp          => sf_rxp,
         sf_sda_i        => sf_sda_in,
         sf_txfault_i    => sf_tx_fault_i,
         sfp_los_i       => sf_los_i,
         tx_fifo_rst_i   => tx_fifo_rst,
         tx_lls_i        => tx_lls,
         usb_clk         => clk80,
         usb_rst         => rst_top,
         usb_rxf_i       => usb_rxf_i,
         usb_txe_i       => usb_txe_i,
         dbg_bus_o       => open,
         gmii_gtx_clk_o  => eth_gtxclk_txc_o,
         gmii_tx_en_o    => eth_tx_en_ctl_o,
         gmii_tx_er_o    => eth_tx_er_o,
         gmii_txd_o      => eth_txd_o,
         init_done_o     => net_usb_ready,
         marv_coma_o     => eth_coma_o,
         marv_md_o       => marv_md_out,
         marv_md_to      => marv_md_t,
         marv_mdc_o      => eth_mdc_o,
         marv_reset_no   => eth_reset_no,
         rx_lls_o        => rx_lls,
         rx_ok_o         => rx_ok,
         sf_mac_stat_o   => sf_mac_stat,
         sf_ratesel_o    => open,
         sf_scl_o        => sf_scl_o,
         sf_sda_o        => sf_sda_out,
         sf_sda_to       => sf_sda_t,
         sf_stat_word_o  => sf_stat_word,
         sf_syncacq_o    => sf_syncacq,
         sf_tx_dis_o     => sf_tx_dis_o,
         sf_txm          => sf_txm,
         sf_txp          => sf_txp,
         stat_word_cu_o  => stat_word_cu,
         stat_word_usb_o => stat_word_usb,
         tx_lld_o        => tx_lld,
         tx_ok_o         => tx_ok,
         usb_rd_o        => usb_rd_o,
         usb_wr_o        => usb_wr_o,
         usb_d_io        => usb_d_io
      );
   Ubufg2 : BUFG
      port map (
         O => clk156,
         I => refclk0b
      );
   Ugt11clk_mgt0a : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk0a,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt0a_mi,
         MGTCLKP    => clk_mgt0a_pi
      );
   Ugt11clk_mgt0b : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk0b,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt0b_mi,
         MGTCLKP    => clk_mgt0b_pi
      );
   Ugt11clk_mgt1a : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk1a,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt1a_mi,
         MGTCLKP    => clk_mgt1a_pi
      );
   Ugt11clk_mgt1b : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk1b,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt1b_mi,
         MGTCLKP    => clk_mgt1b_pi
      );
   Uibd5 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibst_spi_do,
         I  => ibe_spita_do_pi,
         IB => ibe_spita_do_mi
      );
   Uibds0 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         DQS_BIAS         => "FALSE",
         IBUF_DELAY_VALUE => "0",
         IBUF_LOW_PWR     => TRUE,
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => tlu_rst,
         I  => idc_p2_io(26),
         IB => idc_p2_io(27)
      );
   Uibds1 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         DQS_BIAS         => "FALSE",
         IBUF_DELAY_VALUE => "0",
         IBUF_LOW_PWR     => TRUE,
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => tlu_trig,
         I  => idc_p2_io(28),
         IB => idc_p2_io(29)
      );
   Uibufgds0 : IBUFGDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => clk125,
         I  => clk_xtal_125_pi,
         IB => clk_xtal_125_mi
      );
   Uibufgds1 : IBUFGDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => ibe_clk200,
         I  => ibe_osc0_pi,
         IB => ibe_osc0_mi
      );
   Uibufgds2 : IBUFGDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => clk_p2_pll,
         I  => idc_p2_io(30),
         IB => idc_p2_io(31)
      );
   Uob15 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_spita_clk_po,
         OB => ibe_spita_clk_mo,
         I  => ibst_spi_clk
      );
   Uob16 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_spita_com_po,
         OB => ibe_spita_com_mo,
         I  => ibst_spi_com
      );
   Uobds0 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "DEFAULT",
         SLEW        => "SLOW"
      )
      port map (
         O  => idc_p2_io(24),
         OB => idc_p2_io(25),
         I  => tlu_tclk
      );
   Uobds1 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "DEFAULT",
         SLEW        => "SLOW"
      )
      port map (
         O  => idc_p2_io(14),
         OB => idc_p2_io(15),
         I  => tlu_busy
      );
   Uoddrbco : ODDR
      generic map (
         DDR_CLK_EDGE => "SAME_EDGE",
         INIT         => '0',
         SRTYPE       => "SYNC"
      )
      port map (
         Q  => idc_p2_io(13),
         C  => clk80,
         CE => HI,
         D1 => strobe40,
         D2 => strobe40_n,
         R  => rst,
         S  => LO
      );
   Upullup6 : PULLUP
      port map (
         O => ibewire_sclt_o
      );
   Upullup7 : PULLUP
      port map (
         O => ibewire_sdat_io
      );
   Upullup10 : PULLUP
      port map (
         O => ibewire_sda_io
      );
   Upullup11 : PULLUP
      port map (
         O => ibewire_scl_o
      );
   Upullup12 : PULLUP
      port map (
         O => ibemon_convstt_no(0)
      );
   Upullup13 : PULLUP
      port map (
         O => ibemon_convstt_no(1)
      );
   Upullup14 : PULLUP
      port map (
         O => idc_p2_io(8)
      );
   Upullup15 : PULLUP
      port map (
         O => idc_p2_io(9)
      );
   Utwowiretri3 : twowire_tri
      port map (
         sck_i   => sck(3),
         sck_ti  => sck_t(3),
         sck_pin => ibewire_sclt_o,
         sda_i   => sda_tx(3),
         sda_o   => sda_rx(3),
         sda_ti  => sda_t(3),
         sda_pin => ibewire_sdat_io
      );
   Utwowiretri4 : twowire_tri
      port map (
         sck_i   => sck(7),
         sck_ti  => sck_t(7),
         sck_pin => ibewire_scl_o,
         sda_i   => sda_tx(7),
         sda_o   => sda_rx(7),
         sda_ti  => sda_t(7),
         sda_pin => ibewire_sda_io
      );
   Utwowiretri5 : twowire_tri
      port map (
         sck_i   => sck(10),
         sck_ti  => sck_t(10),
         sck_pin => ibemon_convstt_no(0),
         sda_i   => sda_tx(10),
         sda_o   => sda_rx(10),
         sda_ti  => sda_t(10),
         sda_pin => ibemon_convstt_no(1)
      );
   Utwowiretri6 : twowire_tri
      port map (
         sck_i   => sck(12),
         sck_ti  => sck_t(12),
         sck_pin => idc_p2_io(9),
         sda_i   => sda_tx(12),
         sda_o   => sda_rx(12),
         sda_ti  => sda_t(12),
         sda_pin => idc_p2_io(8)
      );

   g2: FOR i IN 0 TO 3 GENERATE
      Usftri : onewire_tri
         port map (
            data_i => sf_sda_out(i),
            data_o => sf_sda_in(i),
            tren_i => sf_sda_t(i),
            pin_io => sf_sda_io(i)
         );
   end generate g2;

   g3: FOR t IN 0 TO 2 GENERATE
      Upullup5 : PULLUP
         port map (
            O => ibemon_sclt_o(t)
         );
      Utwowiretri0 : twowire_tri
         port map (
            sck_i   => sck(t),
            sck_ti  => sck_t(t),
            sck_pin => ibemon_sclt_o(t),
            sda_i   => sda_tx(t),
            sda_o   => sda_rx(t),
            sda_ti  => sda_t(t),
            sda_pin => ibemon_sdat_io(t)
         );
      Upullup4 : PULLUP
         port map (
            O => ibemon_sdat_io(t)
         );
   end generate g3;

   g6: FOR b IN 0 TO 2 GENERATE
      Upullup1 : PULLUP
         port map (
            O => ibemon_scl_o(b)
         );
      Utwowiretri1 : twowire_tri
         port map (
            sck_i   => sck(b+4),
            sck_ti  => sck_t(b+4),
            sck_pin => ibemon_scl_o(b),
            sda_i   => sda_tx(b+4),
            sda_o   => sda_rx(b+4),
            sda_ti  => sda_t(b+4),
            sda_pin => ibemon_sda_io(b)
         );
      Upullup0 : PULLUP
         port map (
            O => ibemon_sda_io(b)
         );
   end generate g6;

   g4: IF (C_INCLUDE_HSIOA13 = '1') GENERATE
      Ua13drv : a13_drv_hsio_top
         port map (
            clk160         => clk160,
            clk40          => clk40,
            clk80          => clk80,
            outsigs        => outsigs,
            rawsigs        => rawsigs,
            reg            => reg,
            rst            => rst,
            rst_poweron_ni => por_sw_n,
            a13_datl_o     => hs_dxin(0),
            a13_datr_o     => hs_dxin(2),
            ddr_l_o        => rx_strm(125 downto 124),
            ddr_r_o        => rx_strm(127 downto 126)
         );
   end generate g4;

end struct;
