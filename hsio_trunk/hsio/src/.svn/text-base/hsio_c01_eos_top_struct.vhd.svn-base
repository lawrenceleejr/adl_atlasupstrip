-- VHDL Entity hsio.hsio_c01_eos_top.symbol
--
-- Created:
--          by - warren.warren (mbb)
--          at - 17:31:39 03/18/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

ENTITY hsio_c01_eos_top IS
   GENERIC( 
      SIM_MODE : integer := 0
   );
   PORT( 
      -- CLOCKS
      clk_xtal_125_mi   : IN     std_logic;                       --CRYSTAL_CLK_M
      clk_xtal_125_pi   : IN     std_logic;                       --CRYSTAL_CLK_P
      -- ETHERNET INTERFACE
      eth_col_i         : IN     std_logic;                       --ETH_COL
      eth_coma_o        : OUT    std_logic;                       --ETH_COMA
      eth_crs_i         : IN     std_logic;                       --ETH_CRS
      eth_gtxclk_txc_o  : OUT    std_logic;                       --ETH_GTX_CLK
      eth_int_ni        : IN     std_logic;                       --ETH_INT_N
      eth_mdc_o         : OUT    std_logic;                       --ETH_MDC
      eth_md_io         : INOUT  std_logic;                       --ETH_MDIO
      eth_reset_no      : OUT    std_logic;                       --ETH_RESET_N
      eth_rx_clk_rxc_i  : IN     std_logic;                       --ETH_RX_CLK
      eth_rx_dv_ctl_i   : IN     std_logic;                       --ETH_RX_DV
      eth_rx_er_i       : IN     std_logic;                       --ETH_RX_ER
      eth_rxd_i         : IN     std_logic_vector (7 DOWNTO 0);   --ETH_RXD_7
      eth_tx_clk_o      : OUT    std_logic;                       --ETH_TX_CLK
      eth_tx_en_ctl_o   : OUT    std_logic;                       --ETH_TX_EN
      eth_tx_er_o       : OUT    std_logic;                       --ETH_TX_ER
      eth_txd_o         : OUT    std_logic_vector (7 DOWNTO 0);   --ETH_TXD_7
      rst_poweron_ni    : IN     std_logic;                       --PORESET_N
      -- USB INTERFACE
      usb_d_io          : INOUT  std_logic_vector (7 DOWNTO 0);   --USB_D7
      usb_rd_o          : OUT    std_logic;                       --USB_RD_N
      usb_rxf_i         : IN     std_logic;                       --USB_RXF_N
      usb_txe_i         : IN     std_logic;                       --USB_TXE_N
      usb_wr_o          : OUT    std_logic;                       --USB_WR
      sf_scl_o          : OUT    std_logic_vector (3 DOWNTO 0);   --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_io         : INOUT  std_logic_vector (3 DOWNTO 0);   --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      sf_rxm            : IN     std_logic_vector (3 DOWNTO 0);   --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      sf_rxp            : IN     std_logic_vector (3 DOWNTO 0);   --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_dis_o       : OUT    std_logic_vector (3 DOWNTO 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      sf_txm            : OUT    std_logic_vector (3 DOWNTO 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      sf_txp            : OUT    std_logic_vector (3 DOWNTO 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      eth_tx_clk_i      : IN     std_logic;                       --ETH_TX_CLK
      sw_hex_ni         : IN     std_logic_vector (3 DOWNTO 0);
      idc_p5_io         : INOUT  std_logic_vector (31 DOWNTO 0);  --IDC_P5
      ibepp1_data1_mi   : IN     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      ibepp1_bc_po      : OUT    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp1_bc_mo      : OUT    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibepp1_clk_po     : OUT    std_logic;                       -- BC (J32.3/J33.7) SW_CLK (J26.E4)
      ibepp1_clk_mo     : OUT    std_logic;                       -- BCB (J32.4/J33.8) SW_CLKB (J26.F4)
      ibepp1_hrst_mo    : OUT    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibepp1_hrst_po    : OUT    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp1_com_po     : OUT    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp1_com_mo     : OUT    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp1_lone_mo    : OUT    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibepp1_lone_po    : OUT    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp1_data0_pi   : IN     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibepp1_data0_mi   : IN     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibepp1_data1_pi   : IN     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibemon_sclt_o     : OUT    std_logic_vector (2 DOWNTO 0);
      ibemon_sdat_io    : INOUT  std_logic_vector (2 DOWNTO 0);
      ibemon_convstt_no : OUT    std_logic_vector (2 DOWNTO 0);
      ibe_bcot_po       : OUT    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibe_l1rt_po       : OUT    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibe_dot_mi        : IN     std_logic_vector (23 DOWNTO 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibe_cmdt_mo       : OUT    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_l1rt_mo       : OUT    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_dot_pi        : IN     std_logic_vector (23 DOWNTO 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibe_cmdt_po       : OUT    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_bcot_mo       : OUT    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      -- DISPLAY
      disp_clk_o        : OUT    std_logic;                       --DISP_CLK
      disp_dat_o        : OUT    std_logic;                       --DISP_DAT
      disp_load_no      : OUT    std_logic_vector (1 DOWNTO 0);   --DISP_LOAD1_N
      disp_rst_no       : OUT    std_logic;                       --DISP_RST_N
      ibepp0_bc_po      : OUT    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp0_bc_mo      : OUT    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibepp0_clk_po     : OUT    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp0_clk_mo     : OUT    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      sma_io            : INOUT  std_logic_vector (8 DOWNTO 1);   --IDC_P5
      led_status_o      : OUT    std_logic;                       --LED_FPGA_STATUS
      ibepp0_hrst_mo    : OUT    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibepp0_hrst_po    : OUT    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp0_com_po     : OUT    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp0_com_mo     : OUT    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp0_lone_mo    : OUT    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibepp0_lone_po    : OUT    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp0_data0_pi   : IN     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibepp0_data0_mi   : IN     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibepp0_data1_pi   : IN     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp0_data1_mi   : IN     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      -- IDC CONNECTORS (P2-5)
      idc_p2_io         : INOUT  std_logic_vector (31 DOWNTO 0);  --IDC_P2
      idc_p3_io         : INOUT  std_logic_vector (31 DOWNTO 0);  --IDC_P3
      idc_p4_io         : INOUT  std_logic_vector (31 DOWNTO 0);  --IDC_P4
      clk_mgt0a_mi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt0a_pi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_mi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_pi      : IN     std_logic;                       --MGTCLK0A_M
      ibe_noiset_mo     : OUT    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_noiset_po     : OUT    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_osc0_pi       : IN     std_logic;                       --CRYSTAL_CLK_P
      -- CLOCKS
      ibe_osc0_mi       : IN     std_logic;                       --CRYSTAL_CLK_M
      clk_mgt0b_mi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt0b_pi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_pi      : IN     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_mi      : IN     std_logic;                       --MGTCLK0A_M
      -- ZONE3 (ATCA) CONNECTOR
      sf_los_i          : IN     std_logic_vector (1 DOWNTO 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_rx_ratesel_o   : OUT    std_logic_vector (1 DOWNTO 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_mod_abs_i      : IN     std_logic_vector (1 DOWNTO 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_fault_i     : IN     std_logic_vector (1 DOWNTO 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_ratesel_o   : OUT    std_logic_vector (1 DOWNTO 0)    --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
   );

-- Declarations

END hsio_c01_eos_top ;

--
-- VHDL Architecture hsio.hsio_c01_eos_top.struct
--
-- Created:
--          by - warren.warren (mbb)
--          at - 17:31:41 03/18/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
--  hds interface_end
-- 
-- Change Log:
-- 11/06/10 11:00 - Rebuild of good firmware (aka 0xedball50) from 08/06/10
--                - includes fixes from 09/06
--                - dclk enable replaced by bco invert option, better defaults
-- 11/06/10 (12:00) - removed duty cycle correction from BCO DCM
-- 07/07/10 (10:00) - re-added duty cycle correction, added second datagen
-- 13/07/10 (10:00) - reduced histo-fifo to 1 register, corrected 2nd histo packet size problem
-- 15/07/10 (10:00) - New EOS IB version
-- 20/07/10 (10:00) - 8 streams enabled
-- 21/07/10 (10:00) - Timing IGnores on IDC debug signals
-- 26/07/10 (16:00) - Rebuild with all mods and in SVN
-- 04/08/10 (21:00) - 64 chan + readback
-- 05/08/10 (10:00) - readback improved
-- 04/08/10 (11:00) - readback removed - won't fit ...
-- 04/08/10 (12:00) - readback re-added, changed muxes on dclk/bco ...
-- 09/08/10 (9:40) - i2c readback added - untested
-- 09/08/10 (14:00) - stave 0-3 added (as 4-7) with own enables etc.
-- 09/08/10 (16:00) - moved stave to 0-3, reduced debug lines
-- 10/08/10 (7:00) - removed i2c - sanity check
-- 10/08/10 (7:00) - insane!
-- 10/08/10 (7:00) - now using stave T for top signals
-- 10/09/10 (1400) - last recompile worked. add(ing/ed) new reset idea.
-- 10/09/10 (1500) - working version.
-- 10/09/10 (1700) - trial with changed oc len.
-- 11/09/10 (1000) - removed oc len change, added pullups for i2c sda lines
-- 11/09/10 (1200) - 16 streams - 4 stave hyb, 4 pp hyb
-- 19/09/10 (1700) - 16 streams - fixed reset
-- 23/09/10 (2000) - re-added ti2c, high hopes
-- 24/09/10 (1500) - fixed possible deltaeof overflow. priorised ack stream.
-- 25/09/10 (1000) - added bco duty cycle control, 8 steams, 0 histos
-- 06/09/10 (1000) - first build with new fifo no-overflow, error packets etc
-- 06/09/10 (0001) idelay fixes
-- 07/09/10 (0002) empty pkt handling fix
-- 07/09/10 (0003) re-worked flow control (!) 
-- 12/09/10 (3000) re-worked flow control even more - looks good in sim
-- 13/09/10 (3001) same with 16st/0his
-- 13/09/10 (3002) fixed pin swaps
-- 13/09/10 (3003) enabled ALL stave streams, doh!
-- 14/09/10 (3004) ti2c wordstart now on debug output
-- 15/09/10 (3005) 24 channel ti2c
-- 15/09/10 (3006) histo quick fix (or not)
-- 15/09/10 (3007) ti2c quick fix (or not) with debug
-- 15/09/10 (3008) ti2c rework and more debug
-- 15/09/10 (3009) added led flash on ti2c_req, parser fix
-- 15/09/10 (300a) fixed ti2c state machine
-- 15/09/10 (300b) unbuilt version with ti2c mods etc. for svn
-- 24/09/10 (3200) 32 stream build
-- 03/10/10 (300c) +37.5 MHz clkfx version, use ext_clk_en (hexsw=5) to select
-- 05/10/10 (300d) rebuild of above, because there may be confusion
-- 01/11/10 (300e) improved order of temp readout packet - may take longer, though.
-- 02/11/10 (300f) reworked capture and histo chomp fix. UNTESTED
-- 15/11/10 (2010) new ver numbering 2 in 2010 = C02 with EOS
-- 19/11/10 (2011) header/trailer fix, histo fix++ + all the fixes from the non-eos ...
-- 19/11/10 (2012) remapped PPs to hyb-str 0-3
-- 19/11/10 (2013) added switch to PP option
-- 21/11/10 (2014) using hsio sff(instead of ib), debugs disableable, ibe_oscs inputs. crude noise out en...
-- 22/11/10 (2015) capture mode fix, reworked eof det AGAIN
-- 22/11/10 (2016) debug en fix
-- 23/11/10 (2017) reworked resets and fifos
-- 23/11/10 (2018) rebuild with 16 streams
-- 23/11/10 (2019) reset bug fix
-- 23/11/10 (201a) reset bug fix again
-- 24/11/10 (201b) Added reset counters for debug
-- 25/11/10 (201c) re-worked resets AGAIN
-- 25/11/10 (201e) re-worked resets AGAIN
-- 23/11/10 (201f) 16 stream build
-- 28/11/10 (2020) clocks sig rename, slight re-org of clk40
-- 29/11/10 (2023) reverted to FIFO16 in ro_unit_fifo
-- 30/11/10 (2024) resets AGAIN + eofin wrong clock fix
-- 26/01/11 (2027) start of 2011 hsiobuild
-- 26/01/11 (2028) changed IDELAYCTL clk to 160MHz
-- 27/01/11 (2029) added better debug, and some streams
-- 27/01/11 (2030) back to 200Mhz - sanity check
-- 27/01/11 (2031) back to 180Mhz idelay
-- 31/01/11 (2032) Added clk_idelay debug output
-- 14/02/11 (2033) First of the unified clocks ...
-- 15/2/11 (2034) added sfp+ from branch
-- 22/2/11 (2035) rebuild with bco_dc improved
-- 2/3/11 (2036) reworked ro fifos for single clock
-- 17/3/11 (2037) 200ms reset, reworked clks
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
library UNISIM;
use UNISIM.Vcomponents.all;
use hsio.pkg_hsio_globals.all;


ARCHITECTURE struct OF hsio_c01_eos_top IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL sf_sda_in          : std_logic_vector(3 DOWNTO 0);       --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
   SIGNAL clk125             : std_logic;
   SIGNAL hi                 : std_logic;
   SIGNAL lo                 : std_logic;
   SIGNAL refclk0a           : std_logic;
   SIGNAL refclk0b           : std_logic;
   SIGNAL refclk1b           : std_logic;
   SIGNAL refclk1a           : std_logic;
   SIGNAL rx_sof             : std_logic;
   SIGNAL rx_eof             : std_logic;
   SIGNAL rx_src_rdy         : std_logic;
   SIGNAL rx_dst_rdy         : std_logic;
   SIGNAL rx_data            : std_logic_vector(15 DOWNTO 0);
   SIGNAL rst                : std_logic;
   SIGNAL clk                : std_ulogic;
   SIGNAL stat_word_sfa      : std_logic_vector(63 DOWNTO 0);
   SIGNAL stat_word_sfb      : std_logic_vector( 63 DOWNTO 0 );
   SIGNAL led_linkupa        : std_logic;
   SIGNAL led_linkupb        : std_logic;
   SIGNAL ibe_clk200         : std_logic;
   SIGNAL mode_copper        : std_logic;
   SIGNAL mode_usb           : std_logic;
   SIGNAL stat_word_cu       : std_logic_vector(63 DOWNTO 0);
   SIGNAL stat_word_usb      : std_logic_vector(63 DOWNTO 0);
   SIGNAL macaddress         : std_logic_vector(47 DOWNTO 0);
   SIGNAL tx_data            : std_logic_vector(15 DOWNTO 0);
   SIGNAL tx_dst_rdy         : std_logic;
   SIGNAL tx_eof             : std_logic;
   SIGNAL tx_fifo_rst        : std_logic;
   SIGNAL tx_sof             : std_logic;
   SIGNAL tx_src_rdy         : std_logic;
   SIGNAL rx_fifo_rst        : std_logic;
   SIGNAL clk40_ext          : std_logic;
   SIGNAL clk40_ext_sel      : std_logic;
   SIGNAL net_usb_ready      : std_logic;
   SIGNAL sf_sda_out         : std_logic_vector(3 DOWNTO 0);       --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   SIGNAL sf_sda_t           : std_logic_vector(3 DOWNTO 0);       --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   SIGNAL marv_md_out        : std_logic;                          -- ETH_MDIO
   SIGNAL marv_md_t          : std_logic;                          -- ETH_MDIO
   SIGNAL clks_top_ready     : std_logic;
   SIGNAL clks_top_not_ready : std_logic;
   SIGNAL clks_main_ready    : std_logic;
   SIGNAL ib_testlemo_i      : std_logic_vector(1 DOWNTO 0);
   SIGNAL ibag_reset         : std_logic;
   SIGNAL pp_hyb_data        : std_logic_vector(3 DOWNTO 0);
   SIGNAL st_hyb_data        : std_logic_vector(23 DOWNTO 0);
   SIGNAL ibst_com           : std_logic;
   SIGNAL ibst_bco           : std_logic;
   SIGNAL ibst_l1            : std_logic;
   SIGNAL ibag_com           : std_logic;
   SIGNAL ibag_dclk          : std_logic;
   SIGNAL ibag_bco           : std_logic;
   SIGNAL ibag_l1            : std_logic;
   SIGNAL ibpp_dclk          : std_logic;
   SIGNAL ibpp_com           : std_logic;
   SIGNAL ibpp_l1r           : std_logic;
   SIGNAL ibpp_bco           : std_logic;
   SIGNAL ibpp_reset         : std_logic;
   SIGNAL ibst_noise         : std_ulogic;
   SIGNAL clk_idelay         : std_logic;
   SIGNAL clk156             : std_logic;
   SIGNAL clk40              : std_logic;


attribute KEEP : string;
--attribute KEEP of clk : signal is "true";
--attribute KEEP of clk180 : signal is "true";
--attribute KEEP of clk_idelay : signal is "true";

   -- Component Declarations
   COMPONENT clocks_top
   GENERIC (
      SIM_MODE : integer := 0
   );
   PORT (
      clk125           : IN     std_logic ;
      clk156           : IN     std_logic ;
      clks_main_ready  : IN     std_logic ;
      ibe_clk200       : IN     std_ulogic ;
      ibe_clk_sel      : IN     std_logic ;
      net_usb_ready    : IN     std_logic ;
      por_sw_ni        : IN     std_ulogic ;
      rst_local_i      : IN     std_ulogic ;
      clk40            : OUT    std_logic ;
      clk80            : OUT    std_logic ;
      clk_idelay       : OUT    std_logic ;
      clks_top_ready_o : OUT    std_logic ;
      oa_ready         : OUT    std_logic ;
      rst              : OUT    std_logic ;
      rst125           : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT main_top
   GENERIC (
      SIM_MODE   : integer := 0;
      BUILD_NO   : integer := 16#b#;
      STREAMS_EN : integer := 16;
      HISTOS_EN  : integer := 16;
      TIMESTAMP  : integer := 16
   );
   PORT (
      -- IDC CONNECTORS (P2-5)
      idc_p2_io         : INOUT  std_logic_vector (31 DOWNTO 0); --IDC_P2
      idc_p3_io         : INOUT  std_logic_vector (31 DOWNTO 0); --IDC_P3
      idc_p4_io         : INOUT  std_logic_vector (31 DOWNTO 0); --IDC_P4
      idc_p5_io         : INOUT  std_logic_vector (31 DOWNTO 0); --IDC_P5
      led_status_o      : OUT    std_logic ;                     --LED_FPGA_STATUS
      -- DISPLAY
      disp_clk_o        : OUT    std_logic ;                     --DISP_CLK
      disp_dat_o        : OUT    std_logic ;                     --DISP_DAT
      disp_rst_no       : OUT    std_logic ;                     --DISP_RST_N
      disp_load_no      : OUT    std_logic_vector (1 DOWNTO 0);  --DISP_LOAD1_N
      tx_fifo_rst_o     : OUT    std_logic ;
      rx_fifo_rst_o     : OUT    std_logic ;
      stat_word_sfa     : IN     std_logic_vector (63 DOWNTO 0);
      stat_word_sfb     : IN     std_logic_vector ( 63 DOWNTO 0 );
      led_linkupa       : IN     std_logic ;
      led_linkupb       : IN     std_logic ;
      stat_word_cu      : IN     std_logic_vector (63 DOWNTO 0);
      stat_word_usb     : IN     std_logic_vector (63 DOWNTO 0);
      ibpp_reset_o      : OUT    std_logic ;
      ibpp_com_o        : OUT    std_logic ;
      ibpp_dclk_o       : OUT    std_logic ;
      ibpp_bco_o        : OUT    std_logic ;
      ibpp_l1_o         : OUT    std_logic ;
      tx_eof_o          : OUT    std_logic ;
      tx_src_rdy_o      : OUT    std_logic ;
      tx_dst_rdy_i      : IN     std_logic ;
      tx_data_o         : OUT    std_logic_vector (15 DOWNTO 0);
      tx_sof_o          : OUT    std_logic ;
      rx_src_rdy_i      : IN     std_logic ;
      rx_data_i         : IN     std_logic_vector (15 DOWNTO 0);
      rx_dst_rdy_o      : OUT    std_logic ;
      rx_sof_i          : IN     std_logic ;
      rx_eof_i          : IN     std_logic ;
      sma_io            : INOUT  std_logic_vector (8 DOWNTO 1);  --IDC_P5
      sw_hex_ni         : IN     std_logic_vector (3 DOWNTO 0);
      pp_hyb_data_i     : IN     std_logic_vector (3 DOWNTO 0);
      st_hyb_data_i     : IN     std_logic_vector (23 DOWNTO 0);
      ibag_reset_o      : OUT    std_logic ;
      ibag_com_o        : OUT    std_logic ;
      ibag_dclk_o       : OUT    std_logic ;
      ibag_bco_o        : OUT    std_logic ;
      ibag_l1_o         : OUT    std_logic ;
      ti2c_sclt_o       : OUT    std_logic_vector (2 DOWNTO 0);
      ti2c_sdat_io      : INOUT  std_logic_vector (2 DOWNTO 0);
      ti2c_cvstt_no     : OUT    std_logic_vector (2 DOWNTO 0);
      clk_startup       : IN     std_logic ;
      clks_top_ready_i  : IN     std_logic ;
      ibst_noise_o      : OUT    std_logic ;
      clks_main_ready_o : OUT    std_logic ;
      clk               : IN     std_logic ;
      clk_idelay        : IN     std_logic ;
      rst               : IN     std_logic ;
      clk40             : IN     std_logic ;
      ibst_com_o        : OUT    std_logic ;
      ibst_bco_o        : OUT    std_logic ;
      ibst_l1r_o        : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT net_usb_top
   PORT (
      clk             : IN     std_logic ;
      clk125          : IN     std_logic ;
      clk_25_50       : IN     std_logic ;
      clk_idelay      : IN     std_logic ;
      gmii_col_i      : IN     std_logic ;                     -- ETH_COL
      gmii_crs_i      : IN     std_logic ;                     -- ETH_CRS
      gmii_rx_clk_i   : IN     std_logic ;
      gmii_rx_dv_i    : IN     std_logic ;                     -- ETH_DV
      gmii_rx_er_i    : IN     std_logic ;                     -- ETH_ER
      gmii_rxd_i      : IN     std_logic_vector (7 DOWNTO 0);  -- ETH_RXD
      ibfi_moddef2_i  : IN     std_logic_vector (1 DOWNTO 0);  --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      ibfi_rxm        : IN     std_logic_vector (1 DOWNTO 0);  --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      ibfi_rxp        : IN     std_logic_vector (1 DOWNTO 0);  --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      init_i          : IN     std_logic ;
      macaddress_i    : IN     std_logic_vector (47 DOWNTO 0);
      marv_int_ni     : IN     std_logic ;                     -- ETH_CRS
      marv_md_i       : IN     std_logic ;                     -- ETH_MDIO
      mii_tx_clk_i    : IN     std_logic ;
      mode_copper_i   : IN     std_logic ;
      mode_usb_i      : IN     std_logic ;
      refclk1         : IN     std_logic ;
      rst             : IN     std_logic ;
      rx_dst_rdy_i    : IN     std_logic ;
      rx_fifo_rst_i   : IN     std_logic ;
      tx_data_i       : IN     std_logic_vector (15 DOWNTO 0);
      tx_eof_i        : IN     std_logic ;
      tx_fifo_rst_i   : IN     std_logic ;
      tx_sof_i        : IN     std_logic ;
      tx_src_rdy_i    : IN     std_logic ;
      usb_clk         : IN     std_logic ;
      usb_rst         : IN     std_logic ;
      usb_rxf_i       : IN     std_logic ;                     --USB_RXF_N
      usb_txe_i       : IN     std_logic ;                     --USB_TXE_N
      dbg_bus_o       : OUT    std_logic_vector (31 DOWNTO 0);
      dbg_state_o     : OUT    slv4 ;
      gmii_gtx_clk_o  : OUT    std_logic ;                     -- ETH_GTX_CLK
      gmii_tx_en_o    : OUT    std_logic ;                     -- ETH_EN
      gmii_tx_er_o    : OUT    std_logic ;                     -- ETH_ER
      -- GMII Interface - EMAC0
      gmii_txd_o      : OUT    std_logic_vector (7 DOWNTO 0);  -- ETH_TXD
      ibfi_moddef1_o  : OUT    std_logic_vector (1 DOWNTO 0);  --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      ibfi_moddef2_o  : OUT    std_logic_vector (1 DOWNTO 0);  --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      ibfi_moddef2_to : OUT    std_logic_vector (1 DOWNTO 0);  --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      -- ZONE3 (ATCA) CONNECTOR
      ibfi_tx_dis_o   : OUT    std_logic_vector (1 DOWNTO 0);  --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      ibfi_txm        : OUT    std_logic_vector (1 DOWNTO 0);  --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      ibfi_txp        : OUT    std_logic_vector (1 DOWNTO 0);  --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      init_done_o     : OUT    std_logic ;
      led_linkup_o    : OUT    std_logic ;
      led_linkupb_o   : OUT    std_logic ;
      marv_coma_o     : OUT    std_logic ;                     -- ETH_GTX_CLK
      marv_md_o       : OUT    std_logic ;                     -- ETH_MDIO
      marv_md_to      : OUT    std_logic ;                     -- ETH_MDIO
      -- MDIO Interface - EMAC0
      marv_mdc_o      : OUT    std_logic ;                     -- ETH_MDC
      marv_reset_no   : OUT    std_logic ;                     -- ETH_GTX_CLK
      rx_data_o       : OUT    std_logic_vector (15 DOWNTO 0);
      rx_eof_o        : OUT    std_logic ;
      rx_sof_o        : OUT    std_logic ;
      rx_src_rdy_o    : OUT    std_logic ;
      stat_word_cu_o  : OUT    std_logic_vector (63 DOWNTO 0);
      stat_word_sfa_o : OUT    std_logic_vector (63 DOWNTO 0);
      stat_word_sfb_o : OUT    std_logic_vector ( 63 DOWNTO 0 );
      stat_word_usb_o : OUT    std_logic_vector (63 DOWNTO 0);
      tx_dst_rdy_o    : OUT    std_logic ;
      usb_rd_o        : OUT    std_logic ;                     --USB_RD_N
      usb_wr_o        : OUT    std_logic ;                     --USB_WR
      -- USB INTERFACE
      usb_d_io        : INOUT  std_logic_vector (7 DOWNTO 0)   --USB_D7
   );
   END COMPONENT;
   COMPONENT BUFG
   PORT (
      I : IN     std_ulogic;
      O : OUT    std_ulogic
   );
   END COMPONENT;
   COMPONENT GT11CLK_MGT
   GENERIC (
      SYNCLK1OUTEN : string := "ENABLE";
      SYNCLK2OUTEN : string := "DISABLE"
   );
   PORT (
      MGTCLKN    : IN     std_ulogic;
      MGTCLKP    : IN     std_ulogic;
      SYNCLK1OUT : OUT    std_ulogic;
      SYNCLK2OUT : OUT    std_ulogic
   );
   END COMPONENT;
   COMPONENT IBUFDS
   GENERIC (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      IBUF_DELAY_VALUE : string  := "0";
      IFD_DELAY_VALUE  : string  := "AUTO";
      IOSTANDARD       : string  := "DEFAULT"
   );
   PORT (
      I  : IN     std_ulogic;
      IB : IN     std_ulogic;
      O  : OUT    std_ulogic
   );
   END COMPONENT;
   COMPONENT IBUFGDS
   GENERIC (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      IBUF_DELAY_VALUE : string  := "0";
      IOSTANDARD       : string  := "DEFAULT"
   );
   PORT (
      I  : IN     std_ulogic;
      IB : IN     std_ulogic;
      O  : OUT    std_ulogic
   );
   END COMPONENT;
   COMPONENT OBUFDS
   GENERIC (
      CAPACITANCE : string := "DONT_CARE";
      IOSTANDARD  : string := "DEFAULT"
   );
   PORT (
      I  : IN     std_ulogic;
      O  : OUT    std_ulogic;
      OB : OUT    std_ulogic
   );
   END COMPONENT;
   COMPONENT m_power
   PORT (
      hi : OUT    std_logic ;
      lo : OUT    std_logic 
   );
   END COMPONENT;


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb2
   -- eb1 1
   -- One of the ratesels conflicts with old SFP
   -- need to confirm SFP+ before driving
   -- (but sigs optional anyway)
   sf_tx_ratesel_o <= (others => 'Z');
   sf_rx_ratesel_o <= (others => 'Z');
   

   -- HDL Embedded Text Block 5 eb5
   macaddress <= x"e0ddccbbaa00";
   mode_copper <= '1' when (sw_hex_ni(1 downto 0) = "10") else '0';
   mode_usb <= '1' when (sw_hex_ni(1 downto 0) = "01") else '0';
   clk40_ext_sel <= '1' when (sw_hex_ni(2) = '0') else '0';


   -- ModuleWare code(v1.9) for instance 'U_1' of 'inv'
   clks_top_not_ready <= NOT(clks_top_ready);

   -- ModuleWare code(v1.9) for instance 'Umd_tribuf1' of 'tribuf'
   umd_tribuf1combo_proc: PROCESS (marv_md_out, marv_md_t)
   BEGIN
      IF (marv_md_t = '0') THEN
         eth_md_io <= 'Z';
      ELSIF (marv_md_t = '1') THEN
         eth_md_io <= marv_md_out;
      ELSE
         eth_md_io <= 'X';
      END IF;
   END PROCESS umd_tribuf1combo_proc;

   -- Instance port mappings.
   Uclockstop : clocks_top
      GENERIC MAP (
         SIM_MODE => SIM_MODE
      )
      PORT MAP (
         clk125           => clk125,
         clk156           => clk156,
         clks_main_ready  => clks_main_ready,
         ibe_clk200       => ibe_clk200,
         ibe_clk_sel      => clk40_ext_sel,
         net_usb_ready    => net_usb_ready,
         por_sw_ni        => rst_poweron_ni,
         rst_local_i      => lo,
         clk40            => clk40,
         clk80            => clk,
         clk_idelay       => clk_idelay,
         clks_top_ready_o => clks_top_ready,
         oa_ready         => OPEN,
         rst              => rst,
         rst125           => OPEN
      );
   Umain : main_top
      GENERIC MAP (
         SIM_MODE   => SIM_MODE,
         BUILD_NO   => 16#203a#,
         STREAMS_EN => 16,
         HISTOS_EN  => 0,
         TIMESTAMP  => 99
      )
      PORT MAP (
         idc_p2_io         => idc_p2_io,
         idc_p3_io         => idc_p3_io,
         idc_p4_io         => idc_p4_io,
         idc_p5_io         => idc_p5_io,
         led_status_o      => led_status_o,
         disp_clk_o        => disp_clk_o,
         disp_dat_o        => disp_dat_o,
         disp_rst_no       => disp_rst_no,
         disp_load_no      => disp_load_no,
         tx_fifo_rst_o     => tx_fifo_rst,
         rx_fifo_rst_o     => rx_fifo_rst,
         stat_word_sfa     => stat_word_sfa,
         stat_word_sfb     => stat_word_sfb,
         led_linkupa       => led_linkupa,
         led_linkupb       => led_linkupb,
         stat_word_cu      => stat_word_cu,
         stat_word_usb     => stat_word_usb,
         ibpp_reset_o      => ibpp_reset,
         ibpp_com_o        => ibpp_com,
         ibpp_dclk_o       => ibpp_dclk,
         ibpp_bco_o        => ibpp_bco,
         ibpp_l1_o         => ibpp_l1r,
         tx_eof_o          => tx_eof,
         tx_src_rdy_o      => tx_src_rdy,
         tx_dst_rdy_i      => tx_dst_rdy,
         tx_data_o         => tx_data,
         tx_sof_o          => tx_sof,
         rx_src_rdy_i      => rx_src_rdy,
         rx_data_i         => rx_data,
         rx_dst_rdy_o      => rx_dst_rdy,
         rx_sof_i          => rx_sof,
         rx_eof_i          => rx_eof,
         sma_io            => sma_io,
         sw_hex_ni         => sw_hex_ni,
         pp_hyb_data_i     => pp_hyb_data,
         st_hyb_data_i     => st_hyb_data,
         ibag_reset_o      => ibag_reset,
         ibag_com_o        => ibag_com,
         ibag_dclk_o       => ibag_dclk,
         ibag_bco_o        => ibag_bco,
         ibag_l1_o         => ibag_l1,
         ti2c_sclt_o       => ibemon_sclt_o,
         ti2c_sdat_io      => ibemon_sdat_io,
         ti2c_cvstt_no     => ibemon_convstt_no,
         clk_startup       => clk125,
         clks_top_ready_i  => clks_top_ready,
         ibst_noise_o      => ibst_noise,
         clks_main_ready_o => clks_main_ready,
         clk               => clk,
         clk_idelay        => clk_idelay,
         rst               => rst,
         clk40             => clk40,
         ibst_com_o        => ibst_com,
         ibst_bco_o        => ibst_bco,
         ibst_l1r_o        => ibst_l1
      );
   Unet_usb_top : net_usb_top
      PORT MAP (
         clk             => clk,
         clk125          => clk125,
         clk_25_50       => clk40,
         clk_idelay      => clk_idelay,
         gmii_col_i      => eth_col_i,
         gmii_crs_i      => eth_crs_i,
         gmii_rx_clk_i   => eth_rx_clk_rxc_i,
         gmii_rx_dv_i    => eth_rx_dv_ctl_i,
         gmii_rx_er_i    => eth_rx_er_i,
         gmii_rxd_i      => eth_rxd_i,
         ibfi_moddef2_i  => sf_sda_in(1 DOWNTO 0),
         ibfi_rxm        => sf_rxm(1 DOWNTO 0),
         ibfi_rxp        => sf_rxp(1 DOWNTO 0),
         init_i          => clks_top_not_ready,
         macaddress_i    => macaddress,
         marv_int_ni     => eth_int_ni,
         marv_md_i       => eth_md_io,
         mii_tx_clk_i    => eth_tx_clk_i,
         mode_copper_i   => mode_copper,
         mode_usb_i      => mode_usb,
         refclk1         => refclk1a,
         rst             => rst,
         rx_dst_rdy_i    => rx_dst_rdy,
         rx_fifo_rst_i   => rx_fifo_rst,
         tx_data_i       => tx_data,
         tx_eof_i        => tx_eof,
         tx_fifo_rst_i   => tx_fifo_rst,
         tx_sof_i        => tx_sof,
         tx_src_rdy_i    => tx_src_rdy,
         usb_clk         => clk,
         usb_rst         => rst,
         usb_rxf_i       => usb_rxf_i,
         usb_txe_i       => usb_txe_i,
         dbg_bus_o       => OPEN,
         dbg_state_o     => OPEN,
         gmii_gtx_clk_o  => eth_gtxclk_txc_o,
         gmii_tx_en_o    => eth_tx_en_ctl_o,
         gmii_tx_er_o    => eth_tx_er_o,
         gmii_txd_o      => eth_txd_o,
         ibfi_moddef1_o  => sf_scl_o(1 DOWNTO 0),
         ibfi_moddef2_o  => sf_sda_out(1 DOWNTO 0),
         ibfi_moddef2_to => sf_sda_t(1 DOWNTO 0),
         ibfi_tx_dis_o   => sf_tx_dis_o(1 DOWNTO 0),
         ibfi_txm        => sf_txm(1 DOWNTO 0),
         ibfi_txp        => sf_txp(1 DOWNTO 0),
         init_done_o     => net_usb_ready,
         led_linkup_o    => led_linkupa,
         led_linkupb_o   => led_linkupb,
         marv_coma_o     => eth_coma_o,
         marv_md_o       => marv_md_out,
         marv_md_to      => marv_md_t,
         marv_mdc_o      => eth_mdc_o,
         marv_reset_no   => eth_reset_no,
         rx_data_o       => rx_data,
         rx_eof_o        => rx_eof,
         rx_sof_o        => rx_sof,
         rx_src_rdy_o    => rx_src_rdy,
         stat_word_cu_o  => stat_word_cu,
         stat_word_sfa_o => stat_word_sfa,
         stat_word_sfb_o => stat_word_sfb,
         stat_word_usb_o => stat_word_usb,
         tx_dst_rdy_o    => tx_dst_rdy,
         usb_rd_o        => usb_rd_o,
         usb_wr_o        => usb_wr_o,
         usb_d_io        => usb_d_io
      );
   Ubufg2 : BUFG
      PORT MAP (
         O => clk156,
         I => refclk0b
      );
   Ubufg_clkext : BUFG
      PORT MAP (
         O => clk40_ext,
         I => ib_testlemo_i(0)
      );
   Ugt11clk_mgt1 : GT11CLK_MGT
      GENERIC MAP (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      PORT MAP (
         SYNCLK1OUT => refclk0a,
         SYNCLK2OUT => OPEN,
         MGTCLKN    => clk_mgt0a_mi,
         MGTCLKP    => clk_mgt0a_pi
      );
   Ugt11clk_mgt2 : GT11CLK_MGT
      GENERIC MAP (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      PORT MAP (
         SYNCLK1OUT => refclk1a,
         SYNCLK2OUT => OPEN,
         MGTCLKN    => clk_mgt1a_mi,
         MGTCLKP    => clk_mgt1a_pi
      );
   Ugt11clk_mgt3 : GT11CLK_MGT
      GENERIC MAP (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      PORT MAP (
         SYNCLK1OUT => refclk0b,
         SYNCLK2OUT => OPEN,
         MGTCLKN    => clk_mgt0b_mi,
         MGTCLKP    => clk_mgt0b_pi
      );
   Ugt11clk_mgt4 : GT11CLK_MGT
      GENERIC MAP (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      PORT MAP (
         SYNCLK1OUT => refclk1b,
         SYNCLK2OUT => OPEN,
         MGTCLKN    => clk_mgt1b_mi,
         MGTCLKP    => clk_mgt1b_pi
      );
   Uibd0 : IBUFDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      PORT MAP (
         O  => pp_hyb_data(0),
         I  => ibepp0_data0_pi,
         IB => ibepp0_data0_mi
      );
   Uibd1 : IBUFDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      PORT MAP (
         O  => pp_hyb_data(1),
         I  => ibepp0_data1_pi,
         IB => ibepp0_data1_mi
      );
   Uibd2 : IBUFDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      PORT MAP (
         O  => pp_hyb_data(2),
         I  => ibepp1_data0_pi,
         IB => ibepp1_data0_mi
      );
   Uibd3 : IBUFDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      PORT MAP (
         O  => pp_hyb_data(3),
         I  => ibepp1_data1_pi,
         IB => ibepp1_data1_mi
      );
   Uibufgds : IBUFGDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      PORT MAP (
         O  => clk125,
         I  => clk_xtal_125_pi,
         IB => clk_xtal_125_mi
      );
   Uibufgds1 : IBUFGDS
      GENERIC MAP (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      PORT MAP (
         O  => ibe_clk200,
         I  => ibe_osc0_pi,
         IB => ibe_osc0_mi
      );
   Uob0 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp0_hrst_po,
         OB => ibepp0_hrst_mo,
         I  => ibpp_reset
      );
   Uob1 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp0_com_po,
         OB => ibepp0_com_mo,
         I  => ibpp_com
      );
   Uob2 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp0_lone_po,
         OB => ibepp0_lone_mo,
         I  => ibpp_l1r
      );
   Uob3 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp0_bc_po,
         OB => ibepp0_bc_mo,
         I  => ibpp_dclk
      );
   Uob4 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp0_clk_po,
         OB => ibepp0_clk_mo,
         I  => ibpp_bco
      );
   Uob5 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp1_hrst_po,
         OB => ibepp1_hrst_mo,
         I  => ibag_reset
      );
   Uob6 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp1_com_po,
         OB => ibepp1_com_mo,
         I  => ibag_com
      );
   Uob7 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp1_lone_po,
         OB => ibepp1_lone_mo,
         I  => ibag_l1
      );
   Uob8 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp1_clk_po,
         OB => ibepp1_clk_mo,
         I  => ibag_bco
      );
   Uob9 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibepp1_bc_po,
         OB => ibepp1_bc_mo,
         I  => ibag_dclk
      );
   Uob10 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibe_l1rt_po,
         OB => ibe_l1rt_mo,
         I  => ibst_l1
      );
   Uob11 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibe_bcot_po,
         OB => ibe_bcot_mo,
         I  => ibst_bco
      );
   Uob12 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibe_cmdt_po,
         OB => ibe_cmdt_mo,
         I  => ibst_com
      );
   Uob13 : OBUFDS
      GENERIC MAP (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      PORT MAP (
         O  => ibe_noiset_po,
         OB => ibe_noiset_mo,
         I  => ibst_noise
      );
   Um_power : m_power
      PORT MAP (
         hi => hi,
         lo => lo
      );

   g2: FOR i IN 0 TO 3 GENERATE

      -- ModuleWare code(v1.9) for instance 'Umd_tribuf2' of 'tribuf'
      umd_tribuf2combo_proc: PROCESS (sf_sda_out, sf_sda_t(i))
      BEGIN
         IF (sf_sda_t(i) = '0') THEN
            sf_sda_io(i) <= 'Z';
         ELSIF (sf_sda_t(i) = '1') THEN
            sf_sda_io(i) <= sf_sda_out(i);
         ELSE
            sf_sda_io(i) <= 'X';
         END IF;
      END PROCESS umd_tribuf2combo_proc;

      -- ModuleWare code(v1.9) for instance 'U_3' of 'buff'
      sf_sda_in(i) <= sf_sda_io(i);
   END GENERATE g2;

   g3: FOR i IN 0 TO 15 GENERATE
      Uibd4 : IBUFDS
         GENERIC MAP (
            CAPACITANCE      => "DONT_CARE",
            DIFF_TERM        => TRUE,
            IBUF_DELAY_VALUE => "0",
            IFD_DELAY_VALUE  => "AUTO",
            IOSTANDARD       => "LVDS_25"
         )
         PORT MAP (
            O  => st_hyb_data(i),
            I  => ibe_dot_pi(i),
            IB => ibe_dot_mi(i)
         );
   END GENERATE g3;

END struct;
