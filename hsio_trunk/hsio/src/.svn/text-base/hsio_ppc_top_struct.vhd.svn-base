-- VHDL Entity hsio.hsio_top.symbol
--
-- Created:
--          by - Matt Warren
--          at - 16:56:57 07/25/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity hsio_ppc_top is
   generic( 
      SIM_MODE : integer := 0
   );
   port( 
      -- CLOCKS
      clk_xtal_125_mi   : in     std_logic;                       --CRYSTAL_CLK_M
      clk_xtal_125_pi   : in     std_logic;                       --CRYSTAL_CLK_P
      -- ETHERNET INTERFACE
      eth_col_i         : in     std_logic;                       --ETH_COL
      eth_coma_o        : out    std_logic;                       --ETH_COMA
      eth_crs_i         : in     std_logic;                       --ETH_CRS
      eth_gtxclk_txc_o  : out    std_logic;                       --ETH_GTX_CLK
      eth_int_ni        : in     std_logic;                       --ETH_INT_N
      eth_mdc_o         : out    std_logic;                       --ETH_MDC
      eth_md_io         : inout  std_logic;                       --ETH_MDIO
      eth_reset_no      : out    std_logic;                       --ETH_RESET_N
      eth_rx_clk_rxc_i  : in     std_logic;                       --ETH_RX_CLK
      eth_rx_dv_ctl_i   : in     std_logic;                       --ETH_RX_DV
      eth_rx_er_i       : in     std_logic;                       --ETH_RX_ER
      eth_rxd_i         : in     std_logic_vector (7 downto 0);   --ETH_RXD_7
      eth_tx_clk_o      : out    std_logic;                       --ETH_TX_CLK
      eth_tx_en_ctl_o   : out    std_logic;                       --ETH_TX_EN
      eth_tx_er_o       : out    std_logic;                       --ETH_TX_ER
      eth_txd_o         : out    std_logic_vector (7 downto 0);   --ETH_TXD_7
      rst_poweron_ni    : in     std_logic;                       --PORESET_N
      -- USB INTERFACE
      usb_d_io          : inout  std_logic_vector (7 downto 0);   --USB_D7
      usb_rd_o          : out    std_logic;                       --USB_RD_N
      usb_rxf_i         : in     std_logic;                       --USB_RXF_N
      usb_txe_i         : in     std_logic;                       --USB_TXE_N
      usb_wr_o          : out    std_logic;                       --USB_WR

      -- DDR memory
      DDR_DQ          : inout std_logic_vector(15 downto 0);
      DDR_LDQS        : inout std_logic;
      DDR_UDQS        : inout std_logic;
      DDR_BA          : out   std_logic_vector(1 downto 0);
      DDR_ADDR        : out   std_logic_vector(12 downto 0);
      DDR_CK          : out   std_logic;
      DDR_CLK_n       : out   std_logic;
      DDR_CS_n        : out   std_logic;
      DDR_CE          : out   std_logic;
      DDR_RAS_n       : out   std_logic;
      DDR_CAS_n       : out   std_logic;
      DDR_WE_n        : out   std_logic;
      DDR_LDM         : out   std_logic;
      DDR_UDM         : out   std_logic;
      DDR_CLKE        : out   std_logic;

      sf_scl_o          : out    std_logic_vector (3 downto 0);   --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_io         : inout  std_logic_vector (3 downto 0);   --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      sf_rxm            : in     std_logic_vector (3 downto 0);   --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      sf_rxp            : in     std_logic_vector (3 downto 0);   --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_dis_o       : out    std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      sf_txm            : out    std_logic_vector (3 downto 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      sf_txp            : out    std_logic_vector (3 downto 0);   --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      eth_tx_clk_i      : in     std_logic;                       --ETH_TX_CLK
      sw_hex_ni         : in     std_logic_vector (3 downto 0);
      idc_p5_io         : inout  std_logic_vector (31 downto 0);  --IDC_P5
      ibepp1_data1_mi   : in     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      ibepp1_bc_po      : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp1_bc_mo      : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibepp1_clk_po     : out    std_logic;                       -- BC (J32.3/J33.7) SW_CLK (J26.E4)
      ibepp1_clk_mo     : out    std_logic;                       -- BCB (J32.4/J33.8) SW_CLKB (J26.F4)
      ibepp1_hrst_mo    : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibepp1_hrst_po    : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp1_com_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp1_com_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp1_lone_mo    : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibepp1_lone_po    : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp1_data0_pi   : in     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibepp1_data0_mi   : in     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibepp1_data1_pi   : in     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibemon_sclt_o     : out    std_logic_vector (2 downto 0);
      ibemon_sdat_io    : inout  std_logic_vector (2 downto 0);
      ibemon_convstt_no : out    std_logic_vector (2 downto 0);
      ibe_bcot_po       : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibe_l1rt_po       : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibe_dot_mi        : in     std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibe_cmdt_mo       : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_l1rt_mo       : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_dot_pi        : in     std_logic_vector (23 downto 0);  -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibe_cmdt_po       : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_bcot_mo       : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      -- DISPLAY
      disp_clk_o        : out    std_logic;                       --DISP_CLK
      disp_dat_o        : out    std_logic;                       --DISP_DAT
      disp_load_no      : out    std_logic_vector (1 downto 0);   --DISP_LOAD1_N
      disp_rst_no       : out    std_logic;                       --DISP_RST_N
      ibepp0_bc_po      : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp0_bc_mo      : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      ibepp0_clk_po     : out    std_logic;                       -- CLK (J33.3) CLKL (J26.C4)
      ibepp0_clk_mo     : out    std_logic;                       -- CLKB (J33.4) CLKLB (J26.D4)
      sma_io            : inout  std_logic_vector (8 downto 1);   --IDC_P5
      led_status_o      : out    std_logic;                       --LED_FPGA_STATUS
      ibepp0_hrst_mo    : out    std_logic;                       -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
      ibepp0_hrst_po    : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibepp0_com_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibepp0_com_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibepp0_lone_mo    : out    std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibepp0_lone_po    : out    std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibepp0_data0_pi   : in     std_logic;                       -- ID0_0 (J32.13/J33.9) ID0_0_BUF (J26.G3)
      ibepp0_data0_mi   : in     std_logic;                       -- ID0_0B (J32.14/J33.10) ID0_0B_BUF (J26.H3)
      ibepp0_data1_pi   : in     std_logic;                       -- ID0_1 (J33.11) ID0_1_BUF (J26.A4)
      ibepp0_data1_mi   : in     std_logic;                       -- ID0_1B (J33.12) ID0_1B_BUF (J26.B4)
      -- IDC CONNECTORS (P2-5)
      idc_p2_io         : inout  std_logic_vector (31 downto 0);  --IDC_P2
      idc_p3_io         : inout  std_logic_vector (31 downto 0);  --IDC_P3
      idc_p4_io         : inout  std_logic_vector (31 downto 0);  --IDC_P4
      clk_mgt0a_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt0a_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1a_pi      : in     std_logic;                       --MGTCLK0A_M
      ibe_noiset_mo     : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_noiset_po     : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_osc0_pi       : in     std_logic;                       --CRYSTAL_CLK_P
      -- CLOCKS
      ibe_osc0_mi       : in     std_logic;                       --CRYSTAL_CLK_M
      clk_mgt0b_mi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt0b_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_pi      : in     std_logic;                       --MGTCLK0A_M
      clk_mgt1b_mi      : in     std_logic;                       --MGTCLK0A_M
      -- ZONE3 (ATCA) CONNECTOR
      sf_los_i          : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_rx_ratesel_o   : out    std_logic_vector (1 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_mod_abs_i      : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_fault_i     : in     std_logic_vector (3 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_ratesel_o   : out    std_logic_vector (1 downto 0);   --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      ibe_spita_com_po  : out    std_logic;                       -- HARDRESET (J32.5/J33.13) HRST (J26.A3)
      ibe_spita_do_pi   : in     std_logic;                       -- LONE (J32.9/J33.5) LONE_IN (J26.E3)
      ibe_spita_clk_mo  : out    std_logic;                       -- COMMANB (J32.6/J33.2) COM_INB (J26.D3)
      ibe_spita_do_mi   : in     std_logic;                       -- LONEB (J32.10/J33.6) LONE_INB (J26.F3)
      ibe_spita_clk_po  : out    std_logic;                       -- COMMAND (J32.5/J33.1) COM_IN (J26.C3)
      ibe_spita_com_mo  : out    std_logic                        -- HARDRESETB (J32.6/J33.14) HRSTB (J26.B3)
   );

-- Declarations

end hsio_ppc_top ;

--
-- VHDL Architecture hsio.hsio_top.struct
--
-- Created:
--          by - Matt Warren
--          at - 16:56:57 07/25/11
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2010.2a (Build 7)
--
--  hds interface_end
-- 
-- Change Log:
-- 11/06/10 11:00 - Rebuild of good firmware (aka 0xedball50) from 08/06/10
--                - includes fixes from 09/06
--                - dclk enable replaced by bco invert option, better defaults
-- 11/06/10 (12:00) - removed duty cycle correction from BCO DCM
-- 07/07/10 (10:00) - re-added duty cycle correction, added second datagen
-- 13/07/10 (10:00) - reduced histo-fifo to 1 register, corrected 2nd histo packet size problem
-- 15/07/10 (10:00) - New EOS IB version
-- 20/07/10 (10:00) - 8 streams enabled
-- 21/07/10 (10:00) - Timing IGnores on IDC debug signals
-- 26/07/10 (16:00) - Rebuild with all mods and in SVN
-- 04/08/10 (21:00) - 64 chan + readback
-- 05/08/10 (10:00) - readback improved
-- 04/08/10 (11:00) - readback removed - won't fit ...
-- 04/08/10 (12:00) - readback re-added, changed muxes on dclk/bco ...
-- 09/08/10 (9:40) - i2c readback added - untested
-- 09/08/10 (14:00) - stave 0-3 added (as 4-7) with own enables etc.
-- 09/08/10 (16:00) - moved stave to 0-3, reduced debug lines
-- 10/08/10 (7:00) - removed i2c - sanity check
-- 10/08/10 (7:00) - insane!
-- 10/08/10 (7:00) - now using stave T for top signals
-- 10/09/10 (1400) - last recompile worked. add(ing/ed) new reset idea.
-- 10/09/10 (1500) - working version.
-- 10/09/10 (1700) - trial with changed oc len.
-- 11/09/10 (1000) - removed oc len change, added pullups for i2c sda lines
-- 11/09/10 (1200) - 16 streams - 4 stave hyb, 4 pp hyb
-- 19/09/10 (1700) - 16 streams - fixed reset
-- 23/09/10 (2000) - re-added ti2c, high hopes
-- 24/09/10 (1500) - fixed possible deltaeof overflow. priorised ack stream.
-- 25/09/10 (1000) - added bco duty cycle control, 8 steams, 0 histos
-- 06/09/10 (1000) - first build with new fifo no-overflow, error packets etc
-- 06/09/10 (0001) idelay fixes
-- 07/09/10 (0002) empty pkt handling fix
-- 07/09/10 (0003) re-worked flow control (!) 
-- 12/09/10 (3000) re-worked flow control even more - looks good in sim
-- 13/09/10 (3001) same with 16st/0his
-- 13/09/10 (3002) fixed pin swaps
-- 13/09/10 (3003) enabled ALL stave streams, doh!
-- 14/09/10 (3004) ti2c wordstart now on debug output
-- 15/09/10 (3005) 24 channel ti2c
-- 15/09/10 (3006) histo quick fix (or not)
-- 15/09/10 (3007) ti2c quick fix (or not) with debug
-- 15/09/10 (3008) ti2c rework and more debug
-- 15/09/10 (3009) added led flash on ti2c_req, parser fix
-- 15/09/10 (300a) fixed ti2c state machine
-- 15/09/10 (300b) unbuilt version with ti2c mods etc. for svn
-- 24/09/10 (3200) 32 stream build
-- 03/10/10 (300c) +37.5 MHz clkfx version, use ext_clk_en (hexsw=5) to select
-- 05/10/10 (300d) rebuild of above, because there may be confusion
-- 01/11/10 (300e) improved order of temp readout packet - may take longer, though.
-- 02/11/10 (300f) reworked capture and histo chomp fix. UNTESTED
-- 15/11/10 (2010) new ver numbering 2 in 2010 = C02 with EOS
-- 19/11/10 (2011) header/trailer fix, histo fix++ + all the fixes from the non-eos ...
-- 19/11/10 (2012) remapped PPs to hyb-str 0-3
-- 19/11/10 (2013) added switch to PP option
-- 21/11/10 (2014) using hsio sff(instead of ib), debugs disableable, ibe_oscs inputs. crude noise out en...
-- 22/11/10 (2015) capture mode fix, reworked eof det AGAIN
-- 22/11/10 (2016) debug en fix
-- 23/11/10 (2017) reworked resets and fifos
-- 23/11/10 (2018) rebuild with 16 streams
-- 23/11/10 (2019) reset bug fix
-- 23/11/10 (201a) reset bug fix again
-- 24/11/10 (201b) Added reset counters for debug
-- 25/11/10 (201c) re-worked resets AGAIN
-- 25/11/10 (201e) re-worked resets AGAIN
-- 23/11/10 (201f) 16 stream build
-- 28/11/10 (2020) clocks sig rename, slight re-org of clk40
-- 29/11/10 (2023) reverted to FIFO16 in ro_unit_fifo
-- 30/11/10 (2024) resets AGAIN + eofin wrong clock fix
-- 26/01/11 (2027) start of 2011 hsiobuild
-- 26/01/11 (2028) changed IDELAYCTL clk to 160MHz
-- 27/01/11 (2029) added better debug, and some streams
-- 27/01/11 (2030) back to 200Mhz - sanity check
-- 27/01/11 (2031) back to 180Mhz idelay
-- 31/01/11 (2032) Added clk_idelay debug output
-- 14/02/11 (2033) First of the unified clocks ...
-- 15/2/11 (2034) added sfp+ from branch
-- 22/2/11 (2035) rebuild with bco_dc improved
-- 2/3/11 (2036) reworked ro fifos for single clock
-- 12/5/11 (2037) start of new opcode schema + confable sf map
-- 17/5/11 (2038) timeouts on unrecog opcodes
-- 19/5/11 (2039) added sf/rj45 network autoswitch
-- 23/5/11 (203a) register readout testing
-- 25/5/11 (203b) added status and temp readback
-- 25/5/11 (203c) updated ocb handling
-- 6/6/11 (203d) echo and spi opcodes added, improved but not brilliant deser erroring
-- 7/6/11 (203e) fixed minor bug in 0x101, 0x105 init state oc_valid handling
-- 8/6/11 (2040) smarter spiser
-- 8/6/11 (2041) even smarter spiser (no half clk), small echo fix
-- 14/6/11 (2046) fixed reset bug
-- 17/6/11 (204b) fixed bco duty cycle, moded temp readback to send early net-ack.
-- 24/6/11 (2055) second sfp+ working, added 'leds' onto display
-- 27/6/11 (2056) stream swap fix
-- 28/6/11 (2057) simplified clk_main timings, extra TIGs on clk_ready sigs, copper rx_clk
-- 30/6/11 (2058) moved ack fifo blocks into ocbs
-- 4/7/11 (2059) tidying, moved ibpps around, no new features
-- 6/7/11 (205a) fixed ibpp sigs being mapped to nowhere bug
-- 8/7/11 (205b) added crc
-- 12/7/11 (205c) modified crc to be at end of data and count type too
-- 14/7/11 (205d) fixed ocb_streams oc_dtack bug, removed all checksum
-- 15/7/11 (205e) new schema 32 stream build (!!)
-- 15/7/11 (205f) 4 streams defaulted to enabled, capture mode
-- 18/7/11 (2060) fixed streams_cmd bug
-- 18/7/11 (2061) fixed ANOTHER ibpp mapping bug, defaulted stream regs to 0
-- 19/7/11 (2062) fixed EVEN ANOTHER ibpp mapping bug
-- 19/7/11 (2064) rebuilt twice after some Xilinx Impact CRC errors
-- 21/7/11 (2065) rebuilt AGAIN due to file corruption
-- 22/7/11 (2066) Integrated Errdems 16b Network interface, with pre-ll mux on the sfps
-- 25/7/11 (2067) reworked rx_pktfmt16, added debug for rx_data
-- 25/7/11 (2068) ISE13.2!!
-- 
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;
library UNISIM;
use UNISIM.Vcomponents.all;
library utils;
use utils.pkg_types.all;
use hsio.pkg_hsio_globals.all;


architecture struct of hsio_ppc_top is

   -- Architecture declarations

   -- Internal signal declarations
   signal sf_sda_in          : std_logic_vector(3 downto 0);     --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
   signal clk125             : std_logic;
   signal hi                 : std_logic;
   signal lo                 : std_logic;
   signal refclk0a           : std_logic;
   signal refclk0b           : std_logic;
   signal refclk1b           : std_logic;
   signal refclk1a           : std_logic;
   signal rx_sof             : std_logic;
   signal rx_eof             : std_logic;
   signal rx_src_rdy         : std_logic;
   signal rx_dst_rdy         : std_logic;
   signal rx_data            : std_logic_vector(15 downto 0);
   signal rst                : std_logic;
   signal clk                : std_ulogic;
   signal ibe_clk200         : std_logic;
   signal stat_word_cu       : std_logic_vector(63 downto 0);
   signal stat_word_usb      : std_logic_vector(63 downto 0);
   signal macaddress         : std_logic_vector(47 downto 0);
   signal tx_data            : std_logic_vector(15 downto 0);
   signal tx_dst_rdy         : std_logic;
   signal tx_eof             : std_logic;
   signal tx_fifo_rst        : std_logic;
   signal tx_sof             : std_logic;
   signal tx_src_rdy         : std_logic;
   signal rx_fifo_rst        : std_logic;
   signal clk40_ext          : std_logic;
   signal clk40_ext_sel      : std_logic;
   signal net_usb_ready      : std_logic;
   signal sf_sda_out         : std_logic_vector(3 downto 0);     --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   signal sf_sda_t           : std_logic_vector(3 downto 0);     --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
   signal marv_md_out        : std_logic;                        -- ETH_MDIO
   signal marv_md_t          : std_logic;                        -- ETH_MDIO
   signal clks_top_ready     : std_logic;
   signal clks_top_not_ready : std_logic;
   signal ib_testlemo_i      : std_logic_vector(1 downto 0);
   signal ibst_data          : std_logic_vector(23 downto 0);
   signal ibst_spi_clk       : std_logic;
   signal ibst_com           : std_logic;
   signal ibst_spi_com       : std_logic;
   signal ibst_bco           : std_logic;
   signal ibst_l1            : std_logic;
   signal ibst_noise         : std_ulogic;
   signal clk_idelay         : std_logic;
   signal clk156             : std_logic;
   signal clk40              : std_logic;
   signal ibst_spi_do        : std_ulogic;
   signal rx_ok              : std_logic;
   signal sf_mac_stat        : slv64_array(1 downto 0);
   signal sf_stat_word       : slv64_array(1 downto 0);
   signal sf_syncacq         : std_logic_vector(1 downto 0);
   signal tx_ok              : std_logic;
   signal ibpp1              : std_logic_vector(7 downto 0);
   signal ibpp0              : std_logic_vector(7 downto 0);


attribute KEEP : string;
attribute KEEP of clk : signal is "true";

   component hsio_proc_wrapper is
   port (
      clk_sys_clk_pin : IN std_logic;
	  rst_sys_rst_pin : IN std_logic;

      gpio_hex_input :  IN std_logic_vector(3 downto 0);
      DDR_DQ :    INOUT std_logic_vector(15 downto 0);
      DDR_LDQS :  INOUT std_logic;
      DDR_UDQS :  INOUT std_logic;
      DDR_BA :    OUT std_logic_vector(1 downto 0);
      DDR_ADDR :  OUT std_logic_vector(12 downto 0);
      DDR_CK :    OUT std_logic;
      DDR_CLKN :  OUT std_logic;
      DDR_CS_n :  OUT std_logic;
      DDR_CE :    OUT std_logic;
      DDR_RAS_n : OUT std_logic;
      DDR_CAS_n : OUT std_logic;
      DDR_WE_n :  OUT std_logic;
      DDR_LDM :   OUT std_logic;
      DDR_UDM :   OUT std_logic;

      mpmc_Idelayctrl_Rdy : OUT std_logic;
      mpmc_InitDone : OUT std_logic;

      clock_LOCKED : OUT std_logic
   );
   end component;

   -- Component Declarations
   component clocks_top
   generic (
      SIM_MODE : integer := 0
   );
   port (
      clk125           : in     std_logic ;
      clk156           : in     std_logic ;
      net_usb_ready    : in     std_logic ;
      por_sw_ni        : in     std_ulogic ;
      rst_local_i      : in     std_ulogic ;
      clk40            : out    std_logic ;
      clk80            : out    std_logic ;
      clk_idelay       : out    std_logic ;
      clks_top_ready_o : out    std_logic ;
      rst              : out    std_logic ;
      rst125           : out    std_logic 
   );
   end component;
   component main_top
   generic (
      SIM_MODE   : integer := 0;
      BUILD_NO   : integer := 16#b#;
      STREAMS_EN : integer := 16;
      HISTOS_EN  : integer := 16;
      TIMESTAMP  : integer := 16
   );
   port (
      idc_p3_io        : inout  std_logic_vector (31 downto 0); --IDC_P3
      -- IDC CONNECTORS (P2-5)
      idc_p2_io        : inout  std_logic_vector (31 downto 0); --IDC_P2
      idc_p4_io        : inout  std_logic_vector (31 downto 0); --IDC_P4
      idc_p5_io        : inout  std_logic_vector (31 downto 0); --IDC_P5
      led_status_o     : out    std_logic ;                     --LED_FPGA_STATUS
      -- DISPLAY
      disp_clk_o       : out    std_logic ;                     --DISP_CLK
      disp_dat_o       : out    std_logic ;                     --DISP_DAT
      disp_rst_no      : out    std_logic ;                     --DISP_RST_N
      disp_load_no     : out    std_logic_vector (1 downto 0);  --DISP_LOAD1_N
      tx_fifo_rst_o    : out    std_logic ;
      rx_fifo_rst_o    : out    std_logic ;
      tx_eof_o         : out    std_logic ;
      tx_src_rdy_o     : out    std_logic ;
      tx_dst_rdy_i     : in     std_logic ;
      tx_data_o        : out    std_logic_vector (15 downto 0);
      tx_sof_o         : out    std_logic ;
      rx_src_rdy_i     : in     std_logic ;
      rx_data_i        : in     std_logic_vector (15 downto 0);
      rx_dst_rdy_o     : out    std_logic ;
      rx_sof_i         : in     std_logic ;
      rx_eof_i         : in     std_logic ;
      sma_io           : inout  std_logic_vector (8 downto 1);  --IDC_P5
      sw_hex_ni        : in     std_logic_vector (3 downto 0);
      ibst_data_i      : in     std_logic_vector (23 downto 0);
      ti2c_sclt_o      : out    std_logic_vector (2 downto 0);
      ti2c_sdat_io     : inout  std_logic_vector (2 downto 0);
      ti2c_cvstt_no    : out    std_logic_vector (2 downto 0);
      clk_startup      : in     std_logic ;
      clks_top_ready_i : in     std_logic ;
      clk              : in     std_logic ;
      clk_idelay       : in     std_logic ;
      rst              : in     std_logic ;
      clk40            : in     std_logic ;
      spiser_clk_o     : out    std_logic ;
      -- payload output
      spiser_com_o     : out    std_logic ;
      sf_stat_word_i   : in     slv64_array (1 downto 0);
      tx_ok_i          : in     std_logic ;
      -- Client Receiver Interface - EMAC0
      rx_ok_i          : in     std_logic ;
      sf_mac_stat_i    : in     slv64_array (1 downto 0);
      sf_syncacq_i     : in     std_logic_vector (1 downto 0);
      stat_word_cu     : in     std_logic_vector (63 downto 0);
      stat_word_usb    : in     std_logic_vector (63 downto 0);
      ibst_noise_o     : out    std_logic ;
      ibst_com_o       : out    std_logic ;
      ibst_bco_o       : out    std_logic ;
      ibst_l1r_o       : out    std_logic ;
      ibpp1_io         : inout  std_logic_vector (7 downto 0);
      ibpp0_io         : inout  std_logic_vector (7 downto 0)
   );
   end component;
   component net_usb_top
   generic (
      MAC0_SF_MAP : integer := 0;
      MAC1_SF_MAP : integer := 1
   );
   port (
      clk             : in     std_logic ;
      clk125          : in     std_logic ;
      clk_25_50       : in     std_logic ;
      clk_idelay      : in     std_logic ;
      gmii_col_i      : in     std_logic ;                    -- ETH_COL
      gmii_crs_i      : in     std_logic ;                    -- ETH_CRS
      gmii_rx_clk_i   : in     std_logic ;
      gmii_rx_dv_i    : in     std_logic ;                    -- ETH_DV
      gmii_rx_er_i    : in     std_logic ;                    -- ETH_ER
      gmii_rxd_i      : in     std_logic_vector (7 downto 0); -- ETH_RXD
      init_i          : in     std_logic ;
      macaddress_i    : in     std_logic_vector (47 downto 0);
      marv_int_ni     : in     std_logic ;                    -- ETH_CRS
      marv_md_i       : in     std_logic ;                    -- ETH_MDIO
      mii_tx_clk_i    : in     std_logic ;
      refclk1         : in     std_logic ;
      rst             : in     std_logic ;
      rx_dst_rdy_i    : in     std_logic ;
      rx_fifo_rst_i   : in     std_logic ;
      sf_absent_i     : in     std_logic_vector (3 downto 0);
      sf_rxm          : in     std_logic_vector (3 downto 0); --LANE_7_RX_M  IB09 net: IB09 Net: CE1_LANE6_RX_M (RD-)
      sf_rxp          : in     std_logic_vector (3 downto 0); --LANE_7_RX_P  IB09 net: IB09 Net: CE1_LANE6_RX_P (RD+)
      sf_sda_i        : in     std_logic_vector (3 downto 0); --GPIO_19  IB09 net: IB09 Net: CD_FO_SDAT1 (SDA)
      sf_txfault_i    : in     std_logic_vector (3 downto 0);
      sfp_los_i       : in     std_logic_vector (3 downto 0);
      tx_data_i       : in     std_logic_vector (15 downto 0);
      tx_eof_i        : in     std_logic ;
      tx_fifo_rst_i   : in     std_logic ;
      tx_sof_i        : in     std_logic ;
      tx_src_rdy_i    : in     std_logic ;
      usb_clk         : in     std_logic ;
      usb_rst         : in     std_logic ;
      usb_rxf_i       : in     std_logic ;                    --USB_RXF_N
      usb_txe_i       : in     std_logic ;                    --USB_TXE_N
      dbg_bus_o       : out    std_logic_vector (31 downto 0);
      gmii_gtx_clk_o  : out    std_logic ;                    -- ETH_GTX_CLK
      gmii_tx_en_o    : out    std_logic ;                    -- ETH_EN
      gmii_tx_er_o    : out    std_logic ;                    -- ETH_ER
      -- GMII Interface - EMAC0
      gmii_txd_o      : out    std_logic_vector (7 downto 0); -- ETH_TXD
      init_done_o     : out    std_logic ;
      marv_coma_o     : out    std_logic ;                    -- ETH_GTX_CLK
      marv_md_o       : out    std_logic ;                    -- ETH_MDIO
      marv_md_to      : out    std_logic ;                    -- ETH_MDIO
      -- MDIO Interface - EMAC0
      marv_mdc_o      : out    std_logic ;                    -- ETH_MDC
      marv_reset_no   : out    std_logic ;                    -- ETH_GTX_CLK
      rx_data_o       : out    std_logic_vector (15 downto 0);
      rx_eof_o        : out    std_logic ;
      rx_ok_o         : out    std_logic ;
      rx_sof_o        : out    std_logic ;
      rx_src_rdy_o    : out    std_logic ;
      sf_mac_stat_o   : out    slv64_array (1 downto 0);
      sf_ratesel_o    : out    std_logic_vector (3 downto 0);
      sf_scl_o        : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_o        : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_sda_to       : out    std_logic_vector (3 downto 0); --GPIO_18  IB09 net: IB09 Net: CD_FO_SCLK1 (SCL)
      sf_stat_word_o  : out    slv64_array (1 downto 0);
      sf_syncacq_o    : out    std_logic_vector (1 downto 0);
      -- ZONE3 (ATCA) CONNECTOR
      sf_tx_dis_o     : out    std_logic_vector (3 downto 0); --GPIO_13  IB09 net: IB09 Net: CE1_FO_TX_DIS1 (TX_DISABLE)
      sf_txm          : out    std_logic_vector (3 downto 0); --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      sf_txp          : out    std_logic_vector (3 downto 0); --LANE_7_TX_M  IB09 net: IB09 Net: CE1_LANE6_TX_M (TD-)
      stat_word_cu_o  : out    std_logic_vector (63 downto 0);
      stat_word_usb_o : out    std_logic_vector (63 downto 0);
      tx_dst_rdy_o    : out    std_logic ;
      tx_ok_o         : out    std_logic ;
      usb_rd_o        : out    std_logic ;                    --USB_RD_N
      usb_wr_o        : out    std_logic ;                    --USB_WR
      -- USB INTERFACE
      usb_d_io        : inout  std_logic_vector (7 downto 0)  --USB_D7
   );
   end component;
   component BUFG
   port (
      I : in     std_ulogic;
      O : out    std_ulogic
   );
   end component;
   component GT11CLK_MGT
   generic (
      SYNCLK1OUTEN : string := "ENABLE";
      SYNCLK2OUTEN : string := "DISABLE"
   );
   port (
      MGTCLKN    : in     std_ulogic;
      MGTCLKP    : in     std_ulogic;
      SYNCLK1OUT : out    std_ulogic;
      SYNCLK2OUT : out    std_ulogic
   );
   end component;
   component IBUFDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IFD_DELAY_VALUE  : string  := "AUTO";
      IOSTANDARD       : string  := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      IB : in     std_ulogic;
      O  : out    std_ulogic
   );
   end component;
   component IBUFGDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IOSTANDARD       : string  := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      IB : in     std_ulogic;
      O  : out    std_ulogic
   );
   end component;
   component OBUFDS
   generic (
      CAPACITANCE : string := "DONT_CARE";
      IOSTANDARD  : string := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      O  : out    std_ulogic;
      OB : out    std_ulogic
   );
   end component;
   component m_power
   port (
      hi : out    std_logic ;
      lo : out    std_logic 
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb2
   -- eb1 1
   -- One of the ratesels conflicts with old SFP
   -- need to confirm SFP+ before driving
   -- (but sigs optional anyway)
   sf_tx_ratesel_o <= (others => 'Z');
   sf_rx_ratesel_o <= (others => 'Z');
   

   -- HDL Embedded Text Block 5 eb5
   macaddress <= x"e0ddccbbaa00";
   --mode_copper <= '1' when (sw_hex_ni(1 downto 0) = "10") else '0';
   --mode_usb <= '1' when (sw_hex_ni(1 downto 0) = "01") else '0';
   clk40_ext_sel <= '1' when (sw_hex_ni(2) = '0') else '0';


   -- ModuleWare code(v1.9) for instance 'U_1' of 'inv'
   clks_top_not_ready <= not(clks_top_ready);

   -- ModuleWare code(v1.9) for instance 'Umd_tribuf1' of 'tribuf'
   prcumd_tribuf1combo: process (marv_md_out, marv_md_t)
   begin
      if (marv_md_t = '0' or marv_md_t = 'L') then
         eth_md_io <= 'Z';
      elsif (marv_md_t = '1' or marv_md_t = 'H') then
         eth_md_io <= marv_md_out;
      else
         eth_md_io <= 'X';
      end if;
   end process prcumd_tribuf1combo;

   -- Instance port mappings.
   Uclockstop : clocks_top
      generic map (
         SIM_MODE => SIM_MODE
      )
      port map (
         clk125           => clk125,
         clk156           => clk156,
         net_usb_ready    => net_usb_ready,
         por_sw_ni        => rst_poweron_ni,
         rst_local_i      => lo,
         clk40            => clk40,
         clk80            => clk,
         clk_idelay       => clk_idelay,
         clks_top_ready_o => clks_top_ready,
         rst              => rst,
         rst125           => open
      );
   Umain : main_top
      generic map (
         SIM_MODE   => SIM_MODE,
         BUILD_NO   => 16#2069#,
         STREAMS_EN => 4,
         HISTOS_EN  => 0,
         TIMESTAMP  => 99
      )
      port map (
         idc_p2_io        => idc_p2_io,
         idc_p3_io        => idc_p3_io,
         idc_p4_io        => idc_p4_io,
         idc_p5_io        => idc_p5_io,
         led_status_o     => led_status_o,
         disp_clk_o       => disp_clk_o,
         disp_dat_o       => disp_dat_o,
         disp_rst_no      => disp_rst_no,
         disp_load_no     => disp_load_no,
         tx_fifo_rst_o    => tx_fifo_rst,
         rx_fifo_rst_o    => rx_fifo_rst,
         tx_eof_o         => tx_eof,
         tx_src_rdy_o     => tx_src_rdy,
         tx_dst_rdy_i     => tx_dst_rdy,
         tx_data_o        => tx_data,
         tx_sof_o         => tx_sof,
         rx_src_rdy_i     => rx_src_rdy,
         rx_data_i        => rx_data,
         rx_dst_rdy_o     => rx_dst_rdy,
         rx_sof_i         => rx_sof,
         rx_eof_i         => rx_eof,
         sma_io           => sma_io,
         sw_hex_ni        => sw_hex_ni,
         ibst_data_i      => ibst_data,
         ti2c_sclt_o      => ibemon_sclt_o,
         ti2c_sdat_io     => ibemon_sdat_io,
         ti2c_cvstt_no    => ibemon_convstt_no,
         clk_startup      => clk125,
         clks_top_ready_i => clks_top_ready,
         clk              => clk,
         clk_idelay       => clk_idelay,
         rst              => rst,
         clk40            => clk40,
         spiser_clk_o     => ibst_spi_clk,
         spiser_com_o     => ibst_spi_com,
         sf_stat_word_i   => sf_stat_word,
         tx_ok_i          => tx_ok,
         rx_ok_i          => rx_ok,
         sf_mac_stat_i    => sf_mac_stat,
         sf_syncacq_i     => sf_syncacq,
         stat_word_cu     => stat_word_cu,
         stat_word_usb    => stat_word_usb,
         ibst_noise_o     => ibst_noise,
         ibst_com_o       => ibst_com,
         ibst_bco_o       => ibst_bco,
         ibst_l1r_o       => ibst_l1,
         ibpp1_io         => ibpp1,
         ibpp0_io         => ibpp0
      );
   Unet_usb_top : net_usb_top
      generic map (
         MAC0_SF_MAP => 0,
         MAC1_SF_MAP => 1
      )
      port map (
         clk             => clk,
         clk125          => clk125,
         clk_25_50       => clk40,
         clk_idelay      => clk_idelay,
         gmii_col_i      => eth_col_i,
         gmii_crs_i      => eth_crs_i,
         gmii_rx_clk_i   => eth_rx_clk_rxc_i,
         gmii_rx_dv_i    => eth_rx_dv_ctl_i,
         gmii_rx_er_i    => eth_rx_er_i,
         gmii_rxd_i      => eth_rxd_i,
         init_i          => clks_top_not_ready,
         macaddress_i    => macaddress,
         marv_int_ni     => eth_int_ni,
         marv_md_i       => eth_md_io,
         mii_tx_clk_i    => eth_tx_clk_i,
         refclk1         => refclk1a,
         rst             => rst,
         rx_dst_rdy_i    => rx_dst_rdy,
         rx_fifo_rst_i   => rx_fifo_rst,
         sf_absent_i     => sf_mod_abs_i,
         sf_rxm          => sf_rxm,
         sf_rxp          => sf_rxp,
         sf_sda_i        => sf_sda_in,
         sf_txfault_i    => sf_tx_fault_i,
         sfp_los_i       => sf_los_i,
         tx_data_i       => tx_data,
         tx_eof_i        => tx_eof,
         tx_fifo_rst_i   => tx_fifo_rst,
         tx_sof_i        => tx_sof,
         tx_src_rdy_i    => tx_src_rdy,
         usb_clk         => clk,
         usb_rst         => rst,
         usb_rxf_i       => usb_rxf_i,
         usb_txe_i       => usb_txe_i,
         dbg_bus_o       => open,
         gmii_gtx_clk_o  => eth_gtxclk_txc_o,
         gmii_tx_en_o    => eth_tx_en_ctl_o,
         gmii_tx_er_o    => eth_tx_er_o,
         gmii_txd_o      => eth_txd_o,
         init_done_o     => net_usb_ready,
         marv_coma_o     => eth_coma_o,
         marv_md_o       => marv_md_out,
         marv_md_to      => marv_md_t,
         marv_mdc_o      => eth_mdc_o,
         marv_reset_no   => eth_reset_no,
         rx_data_o       => rx_data,
         rx_eof_o        => rx_eof,
         rx_ok_o         => rx_ok,
         rx_sof_o        => rx_sof,
         rx_src_rdy_o    => rx_src_rdy,
         sf_mac_stat_o   => sf_mac_stat,
         sf_ratesel_o    => open,
         sf_scl_o        => sf_scl_o,
         sf_sda_o        => sf_sda_out,
         sf_sda_to       => sf_sda_t,
         sf_stat_word_o  => sf_stat_word,
         sf_syncacq_o    => sf_syncacq,
         sf_tx_dis_o     => sf_tx_dis_o,
         sf_txm          => sf_txm,
         sf_txp          => sf_txp,
         stat_word_cu_o  => stat_word_cu,
         stat_word_usb_o => stat_word_usb,
         tx_dst_rdy_o    => tx_dst_rdy,
         tx_ok_o         => tx_ok,
         usb_rd_o        => usb_rd_o,
         usb_wr_o        => usb_wr_o,
         usb_d_io        => usb_d_io
      );

   Uhsio_proc_wrapper : hsio_proc_wrapper
      port map (
         rst_sys_rst_pin => rst_poweron_ni,
         clk_sys_clk_pin => clk125,

         gpio_hex_input(3 downto 0) => sw_hex_ni(3 downto 0),


         DDR_DQ => DDR_DQ,
         DDR_LDQS => DDR_LDQS,
         DDR_UDQS => DDR_UDQS,
         DDR_BA => DDR_BA,
         DDR_ADDR => DDR_ADDR,
         DDR_CK => DDR_CK,
         DDR_CLKN => DDR_CLK_n,
         DDR_CS_n => DDR_CS_n,
         DDR_CE => DDR_CE,
         DDR_RAS_n => DDR_RAS_n,
         DDR_CAS_n => DDR_CAS_n,
         DDR_WE_n => DDR_WE_n,
         DDR_LDM => DDR_LDM,
         DDR_UDM => DDR_UDM,
         clock_LOCKED => DDR_CLKE
      );

   Ubufg2 : BUFG
      port map (
         O => clk156,
         I => refclk0b
      );
   Ubufg_clkext : BUFG
      port map (
         O => clk40_ext,
         I => ib_testlemo_i(0)
      );
   Ugt11clk_mgt1 : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk0a,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt0a_mi,
         MGTCLKP    => clk_mgt0a_pi
      );
   Ugt11clk_mgt2 : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk1a,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt1a_mi,
         MGTCLKP    => clk_mgt1a_pi
      );
   Ugt11clk_mgt3 : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk0b,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt0b_mi,
         MGTCLKP    => clk_mgt0b_pi
      );
   Ugt11clk_mgt4 : GT11CLK_MGT
      generic map (
         SYNCLK1OUTEN => "ENABLE",
         SYNCLK2OUTEN => "DISABLE"
      )
      port map (
         SYNCLK1OUT => refclk1b,
         SYNCLK2OUT => open,
         MGTCLKN    => clk_mgt1b_mi,
         MGTCLKP    => clk_mgt1b_pi
      );
   Uibd0 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibpp0(PP_DATA0),
         I  => ibepp0_data0_pi,
         IB => ibepp0_data0_mi
      );
   Uibd1 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibpp0(PP_DATA1),
         I  => ibepp0_data1_pi,
         IB => ibepp0_data1_mi
      );
   Uibd2 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibpp1(PP_DATA0),
         I  => ibepp1_data0_pi,
         IB => ibepp1_data0_mi
      );
   Uibd3 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibpp1(PP_DATA1),
         I  => ibepp1_data1_pi,
         IB => ibepp1_data1_mi
      );
   Uibd5 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ibst_spi_do,
         I  => ibe_spita_do_pi,
         IB => ibe_spita_do_mi
      );
   Uibufgds : IBUFGDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => clk125,
         I  => clk_xtal_125_pi,
         IB => clk_xtal_125_mi
      );
   Uibufgds1 : IBUFGDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => FALSE,
         IBUF_DELAY_VALUE => "0",
         IOSTANDARD       => "DEFAULT"
      )
      port map (
         O  => ibe_clk200,
         I  => ibe_osc0_pi,
         IB => ibe_osc0_mi
      );
   Uob0 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp0_hrst_po,
         OB => ibepp0_hrst_mo,
         I  => ibpp0(PP_RESET)
      );
   Uob1 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp0_com_po,
         OB => ibepp0_com_mo,
         I  => ibpp0(PP_COM)
      );
   Uob2 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp0_lone_po,
         OB => ibepp0_lone_mo,
         I  => ibpp0(PP_L1)
      );
   Uob3 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp0_bc_po,
         OB => ibepp0_bc_mo,
         I  => ibpp0(PP_DCLK)
      );
   Uob4 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp0_clk_po,
         OB => ibepp0_clk_mo,
         I  => ibpp0(PP_BCO)
      );
   Uob5 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp1_hrst_po,
         OB => ibepp1_hrst_mo,
         I  => ibpp1(PP_RESET)
      );
   Uob6 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp1_com_po,
         OB => ibepp1_com_mo,
         I  => ibpp1(PP_COM)
      );
   Uob7 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp1_lone_po,
         OB => ibepp1_lone_mo,
         I  => ibpp1(PP_L1)
      );
   Uob8 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp1_clk_po,
         OB => ibepp1_clk_mo,
         I  => ibpp1(PP_BCO)
      );
   Uob9 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibepp1_bc_po,
         OB => ibepp1_bc_mo,
         I  => ibpp1(PP_DCLK)
      );
   Uob10 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_l1rt_po,
         OB => ibe_l1rt_mo,
         I  => ibst_l1
      );
   Uob11 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_bcot_po,
         OB => ibe_bcot_mo,
         I  => ibst_bco
      );
   Uob12 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_cmdt_po,
         OB => ibe_cmdt_mo,
         I  => ibst_com
      );
   Uob13 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_noiset_po,
         OB => ibe_noiset_mo,
         I  => ibst_noise
      );
   Uob15 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_spita_clk_po,
         OB => ibe_spita_clk_mo,
         I  => ibst_spi_clk
      );
   Uob16 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => ibe_spita_com_po,
         OB => ibe_spita_com_mo,
         I  => ibst_spi_com
      );
   Um_power : m_power
      port map (
         hi => hi,
         lo => lo
      );

   g2: FOR i IN 0 TO 3 GENERATE

      -- ModuleWare code(v1.9) for instance 'Umd_tribuf2' of 'tribuf'
      prcumd_tribuf2combo: process (sf_sda_out(i), sf_sda_t(i))
      begin
         if (sf_sda_t(i) = '0' or sf_sda_t(i) = 'L') then
            sf_sda_io(i) <= 'Z';
         elsif (sf_sda_t(i) = '1' or sf_sda_t(i) = 'H') then
            sf_sda_io(i) <= sf_sda_out(i);
         else
            sf_sda_io(i) <= 'X';
         end if;
      end process prcumd_tribuf2combo;

      -- ModuleWare code(v1.9) for instance 'U_3' of 'buff'
      sf_sda_in(i) <= sf_sda_io(i);
   end generate g2;

   g3: FOR i IN 0 TO 15 GENERATE
      Uibd4 : IBUFDS
         generic map (
            CAPACITANCE      => "DONT_CARE",
            DIFF_TERM        => TRUE,
            IBUF_DELAY_VALUE => "0",
            IFD_DELAY_VALUE  => "AUTO",
            IOSTANDARD       => "LVDS_25"
         )
         port map (
            O  => ibst_data(i),
            I  => ibe_dot_pi(i),
            IB => ibe_dot_mi(i)
         );
   end generate g3;

end struct;
