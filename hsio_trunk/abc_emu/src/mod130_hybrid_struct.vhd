-- VHDL Entity abc_emu.mod130_hybrid.symbol
--
-- Created:
--          by - warren.warren (mbb)
--          at - 09:56:35 06/03/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity mod130_hybrid is
   generic( 
      CHIPS_PER_CHAIN : integer := 5;
      PADID_MIN       : integer := 5
   );
   port( 
      bco_i      : in     std_logic;
      com_i      : in     std_logic;
      dat0_i     : in     std_logic;
      dat1_i     : in     std_logic;
      dat2_i     : in     std_logic;
      dat3_i     : in     std_logic;
      dclk_i     : in     std_logic;
      fastclk_i  : in     std_logic;
      l0_i       : in     std_logic;
      l1_i       : in     std_logic;
      r3s_i      : in     std_logic;
      rst_i      : in     std_logic;
      rst_por_ni : in     std_logic;
      xoff0_i    : in     std_logic;
      xoff1_i    : in     std_logic;
      xoff2_i    : in     std_logic;
      xoff3_i    : in     std_logic;
      dat0_o     : out    std_logic;
      dat1_o     : out    std_logic;
      dat2_o     : out    std_logic;
      dat3_o     : out    std_logic;
      xoff0_o    : out    std_logic;
      xoff1_o    : out    std_logic;
      xoff2_o    : out    std_logic;
      xoff3_o    : out    std_logic
   );

-- Declarations

end mod130_hybrid ;

--
-- VHDL Architecture abc_emu.mod130_hybrid.struct
--
-- Created:
--          by - warren.warren (mbb)
--          at - 08:19:05 11/02/13
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;


architecture struct of mod130_hybrid is

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   component mod130_chain
   generic (
      NCHIPS    : integer := 5;
      PADID_MIN : integer := 1
   );
   port (
      bco_i        : in     std_logic ;
      com_i        : in     std_logic ;
      dat_left_i   : in     std_logic ;
      dat_right_i  : in     std_logic ;
      dclk_i       : in     std_logic ;
      fastclk_i    : in     std_logic ;
      l0_i         : in     std_logic ;
      l1_i         : in     std_logic ;
      r3s_i        : in     std_logic ;
      rst_i        : in     std_logic ;
      rst_por_ni   : in     std_logic ;
      xoff_left_i  : in     std_logic ;
      xoff_right_i : in     std_logic ;
      dat_left_o   : out    std_logic ;
      dat_right_o  : out    std_logic ;
      xoff_left_o  : out    std_logic ;
      xoff_right_o : out    std_logic 
   );
   end component;


begin

   -- Instance port mappings.
   Uchain0 : mod130_chain
      generic map (
         NCHIPS    => CHIPS_PER_CHAIN,
         PADID_MIN => PADID_MIN
      )
      port map (
         bco_i        => bco_i,
         com_i        => com_i,
         dat_left_i   => dat0_i,
         dat_right_i  => dat1_i,
         dclk_i       => dclk_i,
         fastclk_i    => fastclk_i,
         l0_i         => l0_i,
         l1_i         => l1_i,
         r3s_i        => r3s_i,
         rst_i        => rst_i,
         rst_por_ni   => rst_por_ni,
         xoff_left_i  => xoff1_i,
         xoff_right_i => xoff0_i,
         dat_left_o   => dat1_o,
         dat_right_o  => dat0_o,
         xoff_left_o  => xoff0_o,
         xoff_right_o => xoff1_o
      );
   Uchain1 : mod130_chain
      generic map (
         NCHIPS    => CHIPS_PER_CHAIN,
         PADID_MIN => PADID_MIN+CHIPS_PER_CHAIN
      )
      port map (
         bco_i        => bco_i,
         com_i        => com_i,
         dat_left_i   => dat2_i,
         dat_right_i  => dat3_i,
         dclk_i       => dclk_i,
         fastclk_i    => fastclk_i,
         l0_i         => l0_i,
         l1_i         => l1_i,
         r3s_i        => r3s_i,
         rst_i        => rst_i,
         rst_por_ni   => rst_por_ni,
         xoff_left_i  => xoff3_i,
         xoff_right_i => xoff2_i,
         dat_left_o   => dat3_o,
         dat_right_o  => dat2_o,
         xoff_left_o  => xoff2_o,
         xoff_right_o => xoff3_o
      );

end struct;
