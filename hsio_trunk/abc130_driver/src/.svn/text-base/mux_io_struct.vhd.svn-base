-- VHDL Entity abc130_driver.mux_io.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

entity mux_io is
   generic( 
      SCDATA_INV : integer := 0;
      SCXOFF_INV : integer := 0;
      DATAONLY   : integer := 0
   );
   port( 
      data_tx_i        : in     std_logic;
      dir_data_i       : in     std_logic;
      dir_xoff_i       : in     std_logic;
      highz_data_i     : in     std_logic;
      highz_xoff_i     : in     std_logic;
      singlechip_sel_i : in     std_logic;
      xoff_tx_i        : in     std_logic;
      data_rx_o        : out    std_logic;
      xoff_rx_o        : out    std_logic;
      data_nio         : inout  std_logic;   -- DATA_R0_N___FCCLK_P
      data_pio         : inout  std_logic;   -- DATA_R0_P___FCCLK_N
      xoff_nio         : inout  std_logic;   -- XOFF_R0_N
      xoff_pio         : inout  std_logic    -- XOFF_R0_P
   );

-- Declarations

end mux_io ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- abc130_driver.mux_io.struct
--
-- Created by Matt Warren 2014
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;


architecture struct of mux_io is

   -- Architecture declarations

   -- Internal signal declarations
   signal bdpi : std_logic_vector(1 downto 0);
   signal bdpo : std_logic_vector(1 downto 0);
   signal bdpt : std_logic_vector(1 downto 0);


   -- Component Declarations
   component IOBUFDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      DQS_BIAS         : string  := "FALSE";
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IFD_DELAY_VALUE  : string  := "AUTO";
      IOSTANDARD       : string  := "DEFAULT";
      SLEW             : string  := "SLOW"
   );
   port (
      I   : in     std_ulogic;
      T   : in     std_ulogic;
      O   : out    std_ulogic;
      IO  : inout  std_ulogic;
      IOB : inout  std_ulogic
   );
   end component;
   component bidir_inv
   generic (
      P1_INV : integer := 0
   );
   port (
      highz_i : in     std_logic ;
      di      : in     std_logic ;
      do      : out    std_logic ;
      ti      : in     std_logic ;
      mo      : in     std_logic ;
      mi      : out    std_logic ;
      mt      : out    std_logic ;
      inv_i   : in     std_logic 
   );
   end component;


begin

   -- Instance port mappings.
   Uiobg8 : IOBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "BLVDS_25"
      )
      port map (
         O   => bdpo(1),
         IO  => xoff_pio,
         IOB => xoff_nio,
         I   => bdpi(1),
         T   => bdpt(1)
      );
   Uiobg9 : IOBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "BLVDS_25"
      )
      port map (
         O   => bdpo(0),
         IO  => data_pio,
         IOB => data_nio,
         I   => bdpi(0),
         T   => bdpt(0)
      );
   Ubdpmux0 : bidir_inv
      generic map (
         P1_INV => SCDATA_INV
      )
      port map (
         highz_i => highz_data_i,
         di      => data_tx_i,
         do      => data_rx_o,
         ti      => dir_data_i,
         mo      => bdpo(0),
         mi      => bdpi(0),
         mt      => bdpt(0),
         inv_i   => singlechip_sel_i
      );
   Ubdpmux1 : bidir_inv
      generic map (
         P1_INV => SCXOFF_INV
      )
      port map (
         highz_i => highz_xoff_i,
         di      => xoff_tx_i,
         do      => xoff_rx_o,
         ti      => dir_xoff_i,
         mo      => bdpo(1),
         mi      => bdpi(1),
         mt      => bdpt(1),
         inv_i   => singlechip_sel_i
      );

end struct;
