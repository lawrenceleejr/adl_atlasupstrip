-- VHDL Entity ethernet_v4.HostInterface_tb.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--



entity HostInterface_tb is
-- Declarations

end HostInterface_tb ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- ethernet_v4.HostInterface_tb.struct
--
-- Created by Matt Warren 2014
--

library ieee;
use ieee.std_logic_1164.ALL;
use ieee.std_logic_arith.ALL;
use ieee.std_logic_unsigned.ALL;


architecture struct of HostInterface_tb is

   -- Architecture declarations

   -- Internal signal declarations
   signal HOSTADDR_o     : std_logic_vector(9 downto 0);
   signal HOSTEMAC1SEL_o : std_logic;
   signal HOSTMIIMRDY_i  : std_logic;
   signal HOSTMIIMSEL_o  : std_logic;
   signal HOSTOPCODE_o   : std_logic_vector(1 downto 0);
   signal HOSTRDDATA_i   : std_logic_vector(31 downto 0);
   signal HOSTREQ_o      : std_logic;
   signal HOSTWRDATA_o   : std_logic_vector(31 downto 0);
   signal hostclk_125_i  : std_logic;
   signal odr_addr_i     : std_logic_vector(10 downto 0);
   signal odr_data0_o    : std_logic_vector(63 downto 0);
   signal odr_data1_o    : std_logic_vector(63 downto 0);
   signal odr_data_i     : std_logic_vector(31 downto 0);
   signal odr_rd0_i      : std_logic;
   signal odr_rd1_i      : std_logic;
   signal odr_wr0_i      : std_logic;
   signal odr_wr1_i      : std_logic;
   signal reset_i        : std_logic;


   -- Component Declarations
   component HostInterface_tester
   port (
      HOSTADDR_o     : in     std_logic_vector (9 downto 0);
      HOSTEMAC1SEL_o : in     std_logic;
      HOSTMIIMSEL_o  : in     std_logic;
      HOSTOPCODE_o   : in     std_logic_vector (1 downto 0);
      HOSTREQ_o      : in     std_logic;
      HOSTWRDATA_o   : in     std_logic_vector (31 downto 0);
      odr_data0_o    : in     std_logic_vector (63 downto 0);
      odr_data1_o    : in     std_logic_vector (63 downto 0);
      HOSTMIIMRDY_i  : out    std_logic;
      HOSTRDDATA_i   : out    std_logic_vector (31 downto 0);
      hostclk_125_i  : out    std_logic;
      odr_addr_i     : out    std_logic_vector (10 downto 0);
      odr_data_i     : out    std_logic_vector (31 downto 0);
      odr_rd0_i      : out    std_logic;
      odr_rd1_i      : out    std_logic;
      odr_wr0_i      : out    std_logic;
      odr_wr1_i      : out    std_logic;
      reset_i        : out    std_logic
   );
   end component;
   component host_interface
   port (
      HOSTMIIMRDY_i  : in     std_logic;
      HOSTRDDATA_i   : in     std_logic_vector (31 downto 0);
      hostclk_125_i  : in     std_logic;
      odr_addr_i     : in     std_logic_vector (10 downto 0);
      odr_data_i     : in     std_logic_vector (31 downto 0);
      odr_rd0_i      : in     std_logic;
      odr_rd1_i      : in     std_logic;
      odr_wr0_i      : in     std_logic;
      odr_wr1_i      : in     std_logic;
      reset_i        : in     std_logic;
      HOSTADDR_o     : out    std_logic_vector (9 downto 0);
      HOSTEMAC1SEL_o : out    std_logic;
      HOSTMIIMSEL_o  : out    std_logic;
      HOSTOPCODE_o   : out    std_logic_vector (1 downto 0);
      HOSTREQ_o      : out    std_logic;
      HOSTWRDATA_o   : out    std_logic_vector (31 downto 0);
      odr_data0_o    : out    std_logic_vector (63 downto 0);
      odr_data1_o    : out    std_logic_vector (63 downto 0)
   );
   end component;


begin

   -- Instance port mappings.
   Uhost_interface_tester : HostInterface_tester
      port map (
         hostclk_125_i  => hostclk_125_i,
         reset_i        => reset_i,
         HOSTADDR_o     => HOSTADDR_o,
         HOSTEMAC1SEL_o => HOSTEMAC1SEL_o,
         HOSTMIIMSEL_o  => HOSTMIIMSEL_o,
         HOSTOPCODE_o   => HOSTOPCODE_o,
         HOSTREQ_o      => HOSTREQ_o,
         HOSTWRDATA_o   => HOSTWRDATA_o,
         HOSTMIIMRDY_i  => HOSTMIIMRDY_i,
         HOSTRDDATA_i   => HOSTRDDATA_i,
         odr_addr_i     => odr_addr_i,
         odr_data_i     => odr_data_i,
         odr_rd0_i      => odr_rd0_i,
         odr_wr0_i      => odr_wr0_i,
         odr_data0_o    => odr_data0_o,
         odr_rd1_i      => odr_rd1_i,
         odr_wr1_i      => odr_wr1_i,
         odr_data1_o    => odr_data1_o
      );
   Uhost_interface : host_interface
      port map (
         odr_addr_i     => odr_addr_i,
         odr_data_i     => odr_data_i,
         odr_rd0_i      => odr_rd0_i,
         odr_wr0_i      => odr_wr0_i,
         odr_data0_o    => odr_data0_o,
         odr_rd1_i      => odr_rd1_i,
         odr_wr1_i      => odr_wr1_i,
         odr_data1_o    => odr_data1_o,
         HOSTMIIMRDY_i  => HOSTMIIMRDY_i,
         HOSTRDDATA_i   => HOSTRDDATA_i,
         HOSTADDR_o     => HOSTADDR_o,
         HOSTEMAC1SEL_o => HOSTEMAC1SEL_o,
         HOSTMIIMSEL_o  => HOSTMIIMSEL_o,
         HOSTOPCODE_o   => HOSTOPCODE_o,
         HOSTREQ_o      => HOSTREQ_o,
         HOSTWRDATA_o   => HOSTWRDATA_o,
         reset_i        => reset_i,
         hostclk_125_i  => hostclk_125_i
      );

end struct;
