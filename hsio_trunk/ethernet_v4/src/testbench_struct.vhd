-- VHDL Entity ethernet_v4.testbench.symbol
--
-- Created:
--          by - Matt Warren
--          at - 00:02:11 04/29/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2008.1b (Build 7)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity testbench is
-- Declarations

end testbench ;

--
-- VHDL Architecture ethernet_v4.testbench.struct
--
-- Created:
--          by - Matt Warren
--          at - 00:02:11 04/29/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2008.1b (Build 7)
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;


architecture struct of testbench is

   -- Architecture declarations
   -- EMAC0
   SIGNAL tx_client_clk_0 : std_logic; 
   
   SIGNAL tx_ifg_delay_0 : std_logic_vector(7 downto 0) := (others => '0'); -- IFG stretching not used in demo.
   
   SIGNAL rx_client_clk_0 : std_logic; 
   
   SIGNAL pause_val_0 : std_logic_vector(15 downto 0) := (others => '0'); 
   
   SIGNAL pause_req_0 : std_logic := '0'; 
   
   SIGNAL mdc_in_0 : std_logic := '1'; 
   -- EMAC1
   SIGNAL tx_client_clk_1 : std_logic; 
   
   SIGNAL tx_ifg_delay_1 : std_logic_vector(7 downto 0) := (others => '0'); -- IFG stretching not used in demo.
   
   SIGNAL rx_client_clk_1 : std_logic; 
   
   SIGNAL pause_val_1 : std_logic_vector(15 downto 0) := (others => '0'); 
   
   SIGNAL pause_req_1 : std_logic := '0'; 
   
   SIGNAL mdc_in_1 : std_logic := '1'; 
   
   SIGNAL clk250m : std_logic; 

   -- Internal signal declarations
   ----------------------------------------------------------------------
  -- testbench signals
  ----------------------------------------------------------------------
   signal reset                       : std_logic                     := '1';
   -- 1000BASE-X PCS/PMA Signals
   signal txp_0                       : std_logic;
   signal txn_0                       : std_logic;
   signal rxp_0                       : std_logic;
   signal rxn_0                       : std_logic;
   signal sync_acq_status_0           : std_logic;
   -- MDIO Signals
   signal mdc_0                       : std_logic;
   signal mdio_in_0                   : std_logic;
   signal mdio_out_0                  : std_logic;
   signal mdio_tri_0                  : std_logic;
   -- 1000BASE-X PCS/PMA Signals
   signal txp_1                       : std_logic;
   signal txn_1                       : std_logic;
   signal rxp_1                       : std_logic;
   signal rxn_1                       : std_logic;
   signal sync_acq_status_1           : std_logic;
   -- MDIO Signals
   signal mdc_1                       : std_logic;
   signal mdio_in_1                   : std_logic;
   signal mdio_out_1                  : std_logic;
   signal mdio_tri_1                  : std_logic;
   -- Host Signals
   signal host_opcode                 : std_logic_vector(1 downto 0)  := (others => '1');
   signal host_addr                   : std_logic_vector(9 downto 0)  := (others => '1');
   signal host_wr_data                : std_logic_vector(31 downto 0) := (others => '0');
   signal host_rd_data                : std_logic_vector(31 downto 0);
   signal host_miim_sel               : std_logic                     := '0';
   signal host_req                    : std_logic                     := '0';
   signal host_miim_rdy               : std_logic;
   signal host_emac1_sel              : std_logic                     := '0';
   -- Clock signals
   signal host_clk                    : std_logic                     := '0';
   signal gtx_clk                     : std_logic;
   signal dclk                        : std_logic;
   signal mgtclk_p                    : std_logic                     := '0';
   signal mgtclk_n                    : std_logic                     := '1';
   ------------------------------------------------------------------
    -- Test Bench Semaphores
    ------------------------------------------------------------------
   signal emac0_configuration_busy    : boolean                       := false;
   signal emac0_monitor_finished_1g   : boolean                       := false;
   signal emac0_monitor_finished_100m : boolean                       := false;
   signal emac0_monitor_finished_10m  : boolean                       := false;
   signal emac1_configuration_busy    : boolean                       := false;
   signal emac1_monitor_finished_1g   : boolean                       := false;
   signal emac1_monitor_finished_100m : boolean                       := false;
   signal emac1_monitor_finished_10m  : boolean                       := false;
   signal EMAC0CLIENTRXDVLD           : std_logic;
   --     signal EMAC0CLIENTSYNCACQSTATUS   : std_logic;
   signal EMAC1CLIENTRXDVLD           : std_logic;
   signal rxdcount_o                  : std_logic_vector(31 downto 0);
   signal tx_status_o                 : std_logic_vector(31 downto 0);
   signal rx_status_o                 : std_logic_vector(27 downto 0);
   signal rx_stats_i                  : std_logic_vector(6 downto 0);
   signal rx_stats_valid_i            : std_logic;
   signal tx_stats_i                  : std_logic;
   signal tx_stats_valid_i            : std_logic;


   -- Component Declarations
   component configuration_tb
   port (
      emac0_monitor_finished_100m : in     boolean;
      emac0_monitor_finished_10m  : in     boolean;
      emac0_monitor_finished_1g   : in     boolean;
      emac1_monitor_finished_100m : in     boolean;
      emac1_monitor_finished_10m  : in     boolean;
      emac1_monitor_finished_1g   : in     boolean;
      host_miim_rdy               : in     std_logic;
      host_rd_data                : in     std_logic_vector (31 downto 0);
      sync_acq_status_0           : in     std_logic;
      sync_acq_status_1           : in     std_logic;
      emac0_configuration_busy    : out    boolean;
      emac1_configuration_busy    : out    boolean;
      host_addr                   : out    std_logic_vector (9 downto 0);
      host_clk                    : out    std_logic;
      host_emac1_sel              : out    std_logic;
      host_miim_sel               : out    std_logic;
      host_opcode                 : out    std_logic_vector (1 downto 0);
      host_req                    : out    std_logic;
      host_wr_data                : out    std_logic_vector (31 downto 0);
      reset                       : out    std_logic
   );
   end component;
   component emac0_phy_tb
   port (
      clk125m               : in     std_logic;
      configuration_busy    : in     boolean;
      txn                   : in     std_logic;
      txp                   : in     std_logic;
      monitor_finished_100m : out    boolean;
      monitor_finished_10m  : out    boolean;
      monitor_finished_1g   : out    boolean;
      rxn                   : out    std_logic;
      rxp                   : out    std_logic
   );
   end component;
   component emac1_phy_tb
   port (
      clk125m               : in     std_logic;
      configuration_busy    : in     boolean;
      txn                   : in     std_logic;
      txp                   : in     std_logic;
      monitor_finished_100m : out    boolean;
      monitor_finished_10m  : out    boolean;
      monitor_finished_1g   : out    boolean;
      rxn                   : out    std_logic;
      rxp                   : out    std_logic
   );
   end component;
   component eth2x_example_design
   port (
      DCLK                     : in     std_logic;
      HOSTADDR                 : in     std_logic_vector (9 downto 0);
      HOSTCLK                  : in     std_logic;
      HOSTEMAC1SEL             : in     std_logic;
      HOSTMIIMSEL              : in     std_logic;
      HOSTOPCODE               : in     std_logic_vector (1 downto 0);
      HOSTREQ                  : in     std_logic;
      HOSTWRDATA               : in     std_logic_vector (31 downto 0);
      MDIO_0_I                 : in     std_logic;
      MDIO_1_I                 : in     std_logic;
      MGTCLK_N                 : in     std_logic;
      MGTCLK_P                 : in     std_logic;
      RESET                    : in     std_logic;
      RXN_0                    : in     std_logic;
      RXN_1                    : in     std_logic;
      RXP_0                    : in     std_logic;
      RXP_1                    : in     std_logic;
      EMAC0CLIENTRXDVLD        : out    std_logic;
      EMAC0CLIENTSYNCACQSTATUS : out    std_logic;
      EMAC1CLIENTRXDVLD        : out    std_logic;
      EMAC1CLIENTSYNCACQSTATUS : out    std_logic;
      HOSTMIIMRDY              : out    std_logic;
      HOSTRDDATA               : out    std_logic_vector (31 downto 0);
      MDC_0                    : out    std_logic;
      MDC_1                    : out    std_logic;
      MDIO_0_O                 : out    std_logic;
      MDIO_0_T                 : out    std_logic;
      MDIO_1_O                 : out    std_logic;
      MDIO_1_T                 : out    std_logic;
      TXN_0                    : out    std_logic;
      TXN_1                    : out    std_logic;
      TXP_0                    : out    std_logic;
      TXP_1                    : out    std_logic
   );
   end component;
   component eth_stat_decoder
   port (
      rst              : in     std_logic;
      rx_clk           : in     std_logic;
      rx_stats_i       : in     std_logic_vector (6 downto 0);
      rx_stats_valid_i : in     std_logic;
      rxdvld_i         : in     std_logic;
      tx_clk           : in     std_logic;
      tx_stats_i       : in     std_logic;
      tx_stats_valid_i : in     std_logic;
      rx_status_o      : out    std_logic_vector (27 downto 0);
      rxdcount_o       : out    std_logic_vector (31 downto 0);
      tx_status_o      : out    std_logic_vector (31 downto 0)
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   ----------------------------------------------------------------------------
       -- Flow Control is unused in this demonstration
       ----------------------------------------------------------------------------
       pause_req_0 <= '0';
   pause_val_0 <= "0000000000000000";
   pause_req_1 <= '0';
   pause_val_1 <= "0000000000000000";
   ----------------------------------------------------------------------------
       -- Simulate the MDIO_IN port floating high
       ----------------------------------------------------------------------------
       mdio_in_0 <= 'H';
   mdio_in_1 <= 'H';

   -- HDL Embedded Text Block 2 p_gtx_clk
   ----------------------------------------------------------------------------
       -- Clock drivers
       ----------------------------------------------------------------------------
   
       -- Drive GTX_CLK at 125 MHz
       p_gtx_clk : process
       begin
           gtx_clk <= '0';
           wait for 10 ns;
           loop
               wait for 4 ns;
               gtx_clk <= '1';
               wait for 4 ns;
               gtx_clk <= '0';
           end loop;
       end process p_gtx_clk;

   -- HDL Embedded Text Block 3 p_clk250m
   -- Drive MGT clock at 250 MHz
       p_clk250m : process
       begin
           clk250m <= '0';
           wait for 10 ns;
           loop
               wait for 2 ns;
               clk250m <= '1';
               wait for 2 ns;
               clk250m <= '0';
           end loop;
       end process p_clk250m;

   -- HDL Embedded Text Block 4 p_dclk
   -- Drive Calibration Block clock at 50 MHz
       p_dclk : process
       begin
           dclk <= '0';
           wait for 10 ns;
           loop
               wait for 10 ns;
               dclk <= '1';
               wait for 10 ns;
               dclk <= '0';
           end loop;
       end process p_dclk;

   -- HDL Embedded Text Block 5 eb2
   -- Drive Gigabit Transceiver differential clock with 125MHz
       mgtclk_p <= clk250m;
   mgtclk_n <= not clk250m;


   -- Instance port mappings.
   -- --------------------------------------------------------------------
   --    Instantiate the Host Configuration Stimulus
   --   --------------------------------------------------------------------
   -- 
   config_test : configuration_tb
      port map (
         emac0_configuration_busy => emac0_configuration_busy,
         emac1_configuration_busy => emac1_configuration_busy,
         host_rd_data => host_rd_data,
         sync_acq_status_0 => sync_acq_status_0,
         sync_acq_status_1 => sync_acq_status_1,
         host_miim_rdy => host_miim_rdy,
         emac0_monitor_finished_1g => emac0_monitor_finished_1g,
         emac0_monitor_finished_100m => emac0_monitor_finished_100m,
         emac0_monitor_finished_10m => emac0_monitor_finished_10m,
         host_emac1_sel => host_emac1_sel,
         host_clk => host_clk,
         host_opcode => host_opcode,
         host_req => host_req,
         host_miim_sel => host_miim_sel,
         host_addr => host_addr,
         host_wr_data => host_wr_data,
         reset => reset,
         emac1_monitor_finished_1g => emac1_monitor_finished_1g,
         emac1_monitor_finished_100m => emac1_monitor_finished_100m,
         emac1_monitor_finished_10m => emac1_monitor_finished_10m
      );
   -- --------------------------------------------------------------------
   --    Instantiate the EMAC0 PHY stimulus and monitor
   --   --------------------------------------------------------------------
   -- 
   phy0_test : emac0_phy_tb
      port map (
         clk125m => gtx_clk,
         configuration_busy => emac0_configuration_busy,
         txp => txp_0,
         txn => txn_0,
         rxp => rxp_0,
         rxn => rxn_0,
         monitor_finished_1g => emac0_monitor_finished_1g,
         monitor_finished_100m => emac0_monitor_finished_100m,
         monitor_finished_10m => emac0_monitor_finished_10m
      );
   -- --------------------------------------------------------------------
   --    Instantiate the EMAC1 PHY stimulus and monitor
   --   --------------------------------------------------------------------
   -- 
   phy1_test : emac1_phy_tb
      port map (
         clk125m => gtx_clk,
         configuration_busy => emac1_configuration_busy,
         txp => txp_1,
         txn => txn_1,
         rxn => rxn_1,
         rxp => rxp_1,
         monitor_finished_10m => emac1_monitor_finished_10m,
         monitor_finished_100m => emac1_monitor_finished_100m,
         monitor_finished_1g => emac1_monitor_finished_1g
      );
   -- --------------------------------------------------------------------
   --    Wire up Device Under Test
   --   --------------------------------------------------------------------
   -- 
   dut : eth2x_example_design
      port map (
         MDC_0 => mdc_0,
         MDIO_0_I => mdio_in_0,
         MDIO_0_O => mdio_out_0,
         MDIO_0_T => mdio_tri_0,
         MDC_1 => mdc_1,
         MDIO_1_I => mdio_in_1,
         MDIO_1_O => mdio_out_1,
         MDIO_1_T => mdio_tri_1,
         MGTCLK_P => mgtclk_p,
         MGTCLK_N => mgtclk_n,
         DCLK => dclk,
         EMAC0CLIENTSYNCACQSTATUS => sync_acq_status_0,
         TXP_0 => txp_0,
         TXN_0 => txn_0,
         RXP_0 => rxp_0,
         RXN_0 => rxn_0,
         EMAC1CLIENTSYNCACQSTATUS => sync_acq_status_1,
         TXP_1 => txp_1,
         TXN_1 => txn_1,
         RXP_1 => rxp_1,
         RXN_1 => rxn_1,
         HOSTOPCODE => host_opcode,
         HOSTREQ => host_req,
         HOSTMIIMSEL => host_miim_sel,
         HOSTADDR => host_addr,
         HOSTWRDATA => host_wr_data,
         HOSTMIIMRDY => host_miim_rdy,
         HOSTRDDATA => host_rd_data,
         HOSTEMAC1SEL => host_emac1_sel,
         HOSTCLK => host_clk,
         RESET => reset
      );
   U_0 : eth_stat_decoder
      port map (
         rx_clk           => gtx_clk,
         rst              => reset,
         tx_clk           => gtx_clk,
         tx_stats_i       => tx_stats_i,
         tx_stats_valid_i => tx_stats_valid_i,
         tx_status_o      => tx_status_o,
         rx_stats_i       => rx_stats_i,
         rx_stats_valid_i => rx_stats_valid_i,
         rx_status_o      => rx_status_o,
         rxdvld_i         => EMAC0CLIENTRXDVLD,
         rxdcount_o       => rxdcount_o
      );

end struct;
