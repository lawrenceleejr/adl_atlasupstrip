-- VHDL Entity readout130.ro13_module_tb.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.STD_LOGIC_UNSIGNED.all;


library utils;
use utils.pkg_types.all;

entity ro13_module_tb is
   generic( 
      STREAM_ID : integer   := 0;
      HST_EN    : std_logic := '0';
      RAW_EN    : std_logic := '0'
   );
-- Declarations

end ro13_module_tb ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- readout130.ro13_module_tb.struct
--
-- Created by Matt Warren 2014
--

library ieee;
use ieee.std_logic_1164.ALL;
use ieee.std_logic_arith.ALL;
use ieee.std_logic_unsigned.ALL;
library utils;
use utils.pkg_types.ALL;
library hsio;
use hsio.pkg_hsio_globals.ALL;


architecture struct of ro13_module_tb is

   -- Architecture declarations

   -- Internal signal declarations
   signal HI            : std_logic;
   signal HIHI          : std_logic_vector(1 downto 0);
   signal HILO          : std_logic_vector(1 downto 0);
   signal LO            : std_logic;
   signal LOHI          : std_logic_vector(1 downto 0);
   signal LOLO          : std_logic_vector(1 downto 0);
   signal LOLO2         : slv2_array(1 downto 0);
   signal bcid          : std_logic_vector(11 downto 0) bus;
   signal busy          : std_logic;
   signal capture_start : std_logic;
   signal clk           : std_logic;
   signal datagen_rstn  : std_logic;
   signal gen13data     : slv2_array(1 downto 0);
   signal gen13data80   : slv2_array(1 downto 0);
   signal l1id          : std_logic_vector(23 downto 0) bus;
   signal lld           : std_logic;
   signal lls           : t_llsrc;
   signal mode_abc      : std_logic;
   -- registers
   signal reg           : t_reg_bus;
   signal req_stat      : std_logic;
   signal rst           : std_logic;
   signal s40           : std_logic;
   signal ser13data     : slv2;
   signal strm_cmd      : std_logic_vector(15 downto 0);
   signal strm_reg      : std_logic_vector(15 downto 0);
   signal tick          : std_logic_vector(MAX_TICTOG downto 0);
   signal toggle        : std_logic_vector(MAX_TICTOG downto 0);
   signal trig80        : std_logic;


   -- Component Declarations
   component ro13_datagen
   generic (
      DOFFSET : std_logic_vector(15 downto 0) := x"0100"
   );
   port (
      mode_abc_i    : in     std_logic ;
      start_i       : in     std_logic ;
      abc130_data_o : out    slv2 ;
      len_i         : in     std_logic_vector (11 downto 0);
      en            : in     std_logic ;
      clk           : in     std_logic ;
      rst           : in     std_logic 
   );
   end component;
   component ro13_datagen80
   generic (
      DOFFSET : std_logic_vector(15 downto 0) := x"0100"
   );
   port (
      mode_abc_i    : in     std_logic ;
      start_i       : in     std_logic ;
      abc130_data_o : out    slv2 ;
      len_i         : in     std_logic_vector (11 downto 0);
      en            : in     std_logic ;
      clk           : in     std_logic ;
      rst           : in     std_logic 
   );
   end component;
   component ro13_link
   generic (
      STREAM_ID : integer   := 0;
      HST_EN    : std_logic := '0';
      RAW_EN    : std_logic := '0'
   );
   port (
      bcid_i          : in     std_logic_vector (11 downto 0) bus;
      capture_start_i : in     std_logic ;
      clk             : in     std_logic ;
      gen13data80_i   : in     slv2_array (1 downto 0);
      gen13data_i     : in     slv2_array (1 downto 0);
      l1id_i          : in     std_logic_vector (23 downto 0) bus;
      lld_i           : in     std_logic ;
      -- registers
      reg             : in     t_reg_bus ;
      -- stats
      req_stat_i      : in     std_logic ;
      rst             : in     std_logic ;
      s40             : in     std_logic ;
      ser13data_i     : in     slv2 ;
      sim13data_i     : in     slv2_array (1 downto 0);
      strm_cmd_i      : in     std_logic_vector (15 downto 0);
      strm_reg_i      : in     std_logic_vector (15 downto 0);
      tick            : in     std_logic_vector (MAX_TICTOG downto 0);
      trig80_i        : in     std_logic ;
      --ht_delta_max_i   : in  slv6;
      busy_o          : out    std_logic ;
      --out
      lls_o           : out    t_llsrc 
   );
   end component;
   component ro13_module_tester
   port (
      busy_i          : in     std_logic ;
      lls_i           : in     t_llsrc ;
      bcid_o          : out    std_logic_vector (11 downto 0);
      capture_start_o : out    std_logic ;
      s40_o           : out    std_logic ;
      clk_o           : out    std_logic ;
      l1id_o          : out    std_logic_vector (23 downto 0);
      lld_o           : out    std_logic ;
      reg             : out    t_reg_bus ;
      req_stat_o      : out    std_logic ;
      rst_o           : out    std_logic ;
      strm_cmd_o      : out    std_logic_vector (15 downto 0);
      strm_reg_o      : out    std_logic_vector (15 downto 0);
      ser13data_o     : out    std_logic_vector (1 downto 0);
      datagen_rstn_o  : out    std_logic ;
      mode_abc_o      : out    std_logic ;
      trig80_o        : out    std_logic 
   );
   end component;
   component m_power
   port (
      hi : out    std_logic ;
      lo : out    std_logic 
   );
   end component;
   component ticks_gen
   generic (
      SIM_MODE : integer := 0;
      CLK_MHZ  : integer := 80
   );
   port (
      clk      : in     std_logic;
      rst      : in     std_logic;
      tick_o   : out    std_logic_vector (MAX_TICTOG downto 0);
      toggle_o : out    std_logic_vector (MAX_TICTOG downto 0)
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 7 eb7
   -- eb1 1
   HIHI <= "11";
   LOLO <= "00";
   HILO <= "10";
   LOHI <= "01";
   LOLO2(0) <= "00";
   LOLO2(1) <= "00";


   -- Instance port mappings.
   Udatagen0 : ro13_datagen
      generic map (
         DOFFSET => x"0000"
      )
      port map (
         mode_abc_i    => mode_abc,
         start_i       => trig80,
         abc130_data_o => gen13data(0),
         len_i         => reg(R_LEN0)(11 downto 0),
         en            => datagen_rstn,
         clk           => clk,
         rst           => rst
      );
   Udatagen1 : ro13_datagen
      generic map (
         DOFFSET => x"0100"
      )
      port map (
         mode_abc_i    => mode_abc,
         start_i       => trig80,
         abc130_data_o => gen13data(1),
         len_i         => reg(R_LEN1)(11 downto 0),
         en            => datagen_rstn,
         clk           => clk,
         rst           => rst
      );
   Udatagen80 : ro13_datagen80
      generic map (
         DOFFSET => x"0000"
      )
      port map (
         mode_abc_i    => mode_abc,
         start_i       => trig80,
         abc130_data_o => gen13data80(0),
         len_i         => reg(R_LEN0)(11 downto 0),
         en            => datagen_rstn,
         clk           => clk,
         rst           => rst
      );
   Udatagen81 : ro13_datagen80
      generic map (
         DOFFSET => x"0100"
      )
      port map (
         mode_abc_i    => mode_abc,
         start_i       => trig80,
         abc130_data_o => gen13data80(1),
         len_i         => reg(R_LEN1)(11 downto 0),
         en            => datagen_rstn,
         clk           => clk,
         rst           => rst
      );
   Udut : ro13_link
      generic map (
         STREAM_ID => 1,
         HST_EN    => '0',
         RAW_EN    => '1'
      )
      port map (
         bcid_i          => bcid,
         capture_start_i => capture_start,
         clk             => clk,
         gen13data80_i   => gen13data80,
         gen13data_i     => gen13data,
         l1id_i          => l1id,
         lld_i           => lld,
         reg             => reg,
         req_stat_i      => req_stat,
         rst             => rst,
         s40             => s40,
         ser13data_i     => ser13data,
         sim13data_i     => LOLO2,
         strm_cmd_i      => strm_cmd,
         strm_reg_i      => strm_reg,
         tick            => tick,
         trig80_i        => trig80,
         busy_o          => busy,
         lls_o           => lls
      );
   Utst : ro13_module_tester
      port map (
         busy_i          => busy,
         lls_i           => lls,
         bcid_o          => bcid,
         capture_start_o => capture_start,
         s40_o           => s40,
         clk_o           => clk,
         l1id_o          => l1id,
         lld_o           => lld,
         reg             => reg,
         req_stat_o      => req_stat,
         rst_o           => rst,
         strm_cmd_o      => strm_cmd,
         strm_reg_o      => strm_reg,
         ser13data_o     => ser13data,
         datagen_rstn_o  => datagen_rstn,
         mode_abc_o      => mode_abc,
         trig80_o        => trig80
      );
   Umpower : m_power
      port map (
         hi => HI,
         lo => LO
      );
   Uticksgen : ticks_gen
      generic map (
         SIM_MODE => 1,
         CLK_MHZ  => 80
      )
      port map (
         tick_o   => tick,
         toggle_o => toggle,
         clk      => clk,
         rst      => rst
      );

end struct;
