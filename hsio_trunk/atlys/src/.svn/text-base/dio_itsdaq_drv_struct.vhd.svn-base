-- VHDL Entity atlys.dio_itsdaq_drv.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library utils;
use utils.pkg_types.all;

library hsio;
use hsio.pkg_core_globals.all;

entity dio_itsdaq_drv is
   generic( 
      LINK_ID_MIN : integer := 0
   );
   port( 
      clk            : in     std_logic;
      coml0_i        : in     std_logic;
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_i   : in     t_idelay_ctl;
      l1r3_i         : in     std_logic;
      noise_i        : in     std_logic;
      rawsigs_i      : in     std_logic_vector (15 downto 0);
      -- registers
      reg            : in     t_reg_bus;
      rst            : in     std_logic;
      rst_drv_i      : in     std_logic;
      strobe40_i     : in     std_logic;
      --dbg_sig_o  : out    std_logic;
      dbg_coml0_o    : out    std_logic;
      --dbg_sig_o  : out    std_logic;
      dbg_l1r3_o     : out    std_logic;
      --dbg_sig_o  : out    std_logic;
      dbg_spare_o    : out    std_logic;
      rx_link_idly_o : out    std_logic_vector (23 downto 0);
      rx_strm_o      : out    std_logic_vector (47 downto 0);
      vm_nio         : inout  std_logic_vector (20 downto 1);
      vm_pio         : inout  std_logic_vector (20 downto 1)
   );

-- Declarations

end dio_itsdaq_drv ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- atlys.dio_itsdaq_drv.struct
--
-- Created by Matt Warren 2014
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library utils;
use utils.pkg_types.all;

library atlys;
use atlys.pkg_atlys_itsdaq.all;

library hsio;
use hsio.pkg_core_globals.all;

library unisim;
use unisim.VCOMPONENTS.all;


architecture struct of dio_itsdaq_drv is

   -- Architecture declarations

   -- Internal signal declarations
   signal HI           : std_ulogic;
   signal LO           : std_logic;
   signal bco          : std_logic;
   signal bco_ddr      : std_logic;
   signal bco_ddr_n    : std_logic;
   signal bco_en       : std_logic;
   signal clkn         : std_logic;
   signal ddri         : std_logic_vector(7 downto 4);
   signal ddri_atl_tmu : std_logic;
   signal ddro         : std_logic_vector(7 downto 0);
   signal rawout_en    : std_logic;
   signal txsigs       : std_logic_vector(15 downto 0);


attribute KEEP : string;
--attribute KEEP of reg_control_i : signal is "true";
--attribute KEEP of reg_com_enable_i : signal is "true";
--attribute KEEP of dbg_sig_o : signal is "true";
--attribute KEEP of sink_sig_o : signal is "true";

   -- Component Declarations
   component iodelay2_block
   generic (
      LINK_ID : integer := 0
   );
   port (
      clk                    : in     std_logic ;
      ddrdata_i              : in     std_logic ;
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_i           : in     t_idelay_ctl ;
      loopdata0_i            : in     std_logic ;
      loopdata1_i            : in     std_logic ;
      rst                    : in     std_logic ;
      dbg_ddrdata_idelayed_o : out    std_logic ;
      stream0_o              : out    std_logic ;
      stream1_o              : out    std_logic 
   );
   end component;
   component IBUFDS
   generic (
      CAPACITANCE      : string  := "DONT_CARE";
      DIFF_TERM        : boolean := FALSE;
      DQS_BIAS         : string  := "FALSE";
      IBUF_DELAY_VALUE : string  := "0";
      IBUF_LOW_PWR     : boolean := TRUE;
      IFD_DELAY_VALUE  : string  := "AUTO";
      IOSTANDARD       : string  := "DEFAULT"
   );
   port (
      I  : in     std_ulogic;
      IB : in     std_ulogic;
      O  : out    std_ulogic
   );
   end component;
   component OBUFDS
   generic (
      CAPACITANCE : string := "DONT_CARE";
      IOSTANDARD  : string := "DEFAULT";
      SLEW        : string := "SLOW"
   );
   port (
      I  : in     std_ulogic;
      O  : out    std_ulogic;
      OB : out    std_ulogic
   );
   end component;
   component ODDR2
   generic (
      DDR_ALIGNMENT : string := "NONE";
      INIT          : bit    := '0';
      SRTYPE        : string := "SYNC"
   );
   port (
      C0 : in     std_ulogic;
      C1 : in     std_ulogic;
      CE : in     std_ulogic  := 'H';
      D0 : in     std_ulogic;
      D1 : in     std_ulogic;
      R  : in     std_ulogic  := 'L';
      S  : in     std_ulogic  := 'L';
      Q  : out    std_ulogic
   );
   end component;
   component m_power
   port (
      hi : out    std_logic ;
      lo : out    std_logic 
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   prc_modes : process (rawout_en, reg, coml0_i, l1r3_i, txsigs)
   begin
     if (rawout_en = '1') then
       txsigs <= rawsigs_i;
     else
        txsigs(OD_COML0) <= coml0_i;
        txsigs(OD_L1R3) <=  l1r3_i;
        txsigs(OD_SPARE) <= reg(R_CONTROL1)(CTL_DRV_SP0); --SCAN_EN
        txsigs(3) <=  '0'; -- n/a
        txsigs(4) <=  reg(R_CONTROL1)(CTL_DRV_DXOUT0); -- DXL
        txsigs(5) <=  reg(R_CONTROL1)(CTL_DRV_DXOUT1); -- DXR
        txsigs(6) <=  reg(R_CONTROL1)(CTL_DRV_DXOUT2); -- SDO_BC
        txsigs(7) <=  reg(R_CONTROL1)(CTL_DRV_DXOUT3); -- SDO_CLK
        txsigs(15 downto 8) <= txsigs(7 downto 0);
     end if;
   end process;

   -- HDL Embedded Text Block 2 eb2
   -- eb1 1
   bco_en <= reg(R_COM_ENA)(B_BCO_EN);
   -- for compat reasons bco is inverted
   bco_ddr <= strobe40_i when (reg(R_COM_ENA)(B_BCO_INV) = '1') else
               not strobe40_i;
   

   -- HDL Embedded Text Block 3 eb3
   rx_strm_o(0) <= '0';
   rx_strm_o(1) <= '0';
   
   
   --rx_strm_o(4) <= '0';
   --rx_strm_o(5) <= '0';
   rx_strm_o(6) <= '0';
   rx_strm_o(7) <= '0';
   
   
   rx_strm_o(10) <= '0';
   rx_strm_o(11) <= '0';
   rx_strm_o(12) <= '0';
   rx_strm_o(13) <= '0';
   
   
   rx_strm_o(16) <= '0';
   rx_strm_o(17) <= '0';
   rx_strm_o(18) <= '0';
   rx_strm_o(19) <= '0';
   
   
   rx_strm_o(22) <= '0';
   rx_strm_o(23) <= '0';

   -- HDL Embedded Text Block 4 eb4
   rx_link_idly_o(0) <= '0';
   
   --rx_link_idly_o(2) <= '0';
   rx_link_idly_o(3) <= '0';
   
   rx_link_idly_o(5) <= '0';
   rx_link_idly_o(6) <= '0';
   
   rx_link_idly_o(8) <= '0';
   rx_link_idly_o(9) <= '0';
   
   rx_link_idly_o(11) <= '0';

   -- HDL Embedded Text Block 5 eb5
   -- eb5 5 --------------------------
   
   vm_pio(vmD15) <= reg(R_DRV_CONF)( 8); -- rst_ext        -- 42 D15P, vmIO20P
   vm_nio(vmD15) <= reg(R_DRV_CONF)( 7); -- tmu_coml0_swap -- 41 D15M, vmIO20M
   vm_pio(vmD14) <= reg(R_DRV_CONF)( 6); --                -- 40 D14P, vmIO19P
   vm_nio(vmD14) <= reg(R_DRV_CONF)( 5); --                -- 39 D14M, vmIO19M
   vm_pio(vmD13) <= reg(R_DRV_CONF)( 4); --                -- 38 D13P, vmIO18P
   vm_nio(vmD13) <= reg(R_DRV_CONF)( 3); --                -- 37 D13M, vmIO18M
   vm_pio(vmD12) <= reg(R_DRV_CONF)( 2); --                -- 36 D12P, vmIO17P
   vm_nio(vmD12) <= reg(R_DRV_CONF)( 1); --                -- 35 D12M, vmIO17M
   vm_pio(vmD11) <= reg(R_DRV_CONF)( 0); --                -- 34 D11P, vmIO16P
   
   -- Unused
   --vm_nio(vmD11)
   --vm_pio(vmD8)
   --vm_nio(vmD8)
   --vm_pio(vmD5)
   --vm_nio(vmD5)

   -- HDL Embedded Text Block 6 eb6
   rawout_en <= reg(R_CONTROL1)(CTL_RAWOUT_EN);


   -- ModuleWare code(v1.12) for instance 'U_6' of 'buff'
   dbg_coml0_o <= txsigs(OD_COML0);

   -- ModuleWare code(v1.12) for instance 'U_7' of 'buff'
   dbg_l1r3_o <= txsigs(OD_L1R3);

   -- ModuleWare code(v1.12) for instance 'U_8' of 'buff'
   dbg_spare_o <= txsigs(OD_SPARE);

   -- ModuleWare code(v1.12) for instance 'U_0' of 'inv'
   bco_ddr_n <= not(bco_ddr);

   -- Instance port mappings.
   Uiodelay2blk1 : iodelay2_block
      generic map (
         LINK_ID => 1+LINK_ID_MIN
      )
      port map (
         clk                    => clk,
         ddrdata_i              => ddri(ID_DX0),
         idelay_ctl_i           => idelay_ctl_i,
         loopdata0_i            => LO,
         loopdata1_i            => LO,
         rst                    => rst,
         dbg_ddrdata_idelayed_o => rx_link_idly_o(1),
         stream0_o              => rx_strm_o(2),
         stream1_o              => rx_strm_o(3)
      );
   Uiodelay2blk2 : iodelay2_block
      generic map (
         LINK_ID => 2+LINK_ID_MIN
      )
      port map (
         clk                    => clk,
         ddrdata_i              => ddri_atl_tmu,
         idelay_ctl_i           => idelay_ctl_i,
         loopdata0_i            => LO,
         loopdata1_i            => LO,
         rst                    => rst,
         dbg_ddrdata_idelayed_o => rx_link_idly_o(2),
         stream0_o              => rx_strm_o(4),
         stream1_o              => rx_strm_o(5)
      );
   Uiodelay2blk4 : iodelay2_block
      generic map (
         LINK_ID => 4+LINK_ID_MIN
      )
      port map (
         clk                    => clk,
         ddrdata_i              => ddri(ID_DX1),
         idelay_ctl_i           => idelay_ctl_i,
         loopdata0_i            => LO,
         loopdata1_i            => LO,
         rst                    => rst,
         dbg_ddrdata_idelayed_o => rx_link_idly_o(4),
         stream0_o              => rx_strm_o(8),
         stream1_o              => rx_strm_o(9)
      );
   Uiodelay2blk7 : iodelay2_block
      generic map (
         LINK_ID => 7+LINK_ID_MIN
      )
      port map (
         clk                    => clk,
         ddrdata_i              => ddri(ID_DX2),
         idelay_ctl_i           => idelay_ctl_i,
         loopdata0_i            => LO,
         loopdata1_i            => LO,
         rst                    => rst,
         dbg_ddrdata_idelayed_o => rx_link_idly_o(7),
         stream0_o              => rx_strm_o(14),
         stream1_o              => rx_strm_o(15)
      );
   Uiodelay2blk10 : iodelay2_block
      generic map (
         LINK_ID => 10+LINK_ID_MIN
      )
      port map (
         clk                    => clk,
         ddrdata_i              => ddri(ID_DX3),
         idelay_ctl_i           => idelay_ctl_i,
         loopdata0_i            => LO,
         loopdata1_i            => LO,
         rst                    => rst,
         dbg_ddrdata_idelayed_o => rx_link_idly_o(10),
         stream0_o              => rx_strm_o(20),
         stream1_o              => rx_strm_o(21)
      );
   Uib : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ddri(ID_DX0),
         I  => vm_pio(vmD1),
         IB => vm_nio(vmD1)
      );
   Uib1 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ddri(ID_DX1),
         I  => vm_pio(vmD4),
         IB => vm_nio(vmD4)
      );
   Uib2 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ddri(ID_DX2),
         I  => vm_pio(vmD7),
         IB => vm_nio(vmD7)
      );
   Uib3 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ddri(ID_DX3),
         I  => vm_pio(vmD10),
         IB => vm_nio(vmD10)
      );
   Uib5 : IBUFDS
      generic map (
         CAPACITANCE      => "DONT_CARE",
         DIFF_TERM        => TRUE,
         IBUF_DELAY_VALUE => "0",
         IFD_DELAY_VALUE  => "AUTO",
         IOSTANDARD       => "LVDS_25"
      )
      port map (
         O  => ddri_atl_tmu,
         I  => vm_pio(vmD2),
         IB => vm_nio(vmD2)
      );
   Uob0 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmCMD),
         OB => vm_nio(vmCMD),
         I  => ddro(OD_COML0)
      );
   Uob1 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmL1R),
         OB => vm_nio(vmL1R),
         I  => ddro(OD_L1R3)
      );
   Uob2 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmDRC),
         OB => vm_nio(vmDRC),
         I  => ddro(OD_SPARE)
      );
   Uob4 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmD0),
         OB => vm_nio(vmD0),
         I  => ddro(OD_DX0)
      );
   Uob5 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmD3),
         OB => vm_nio(vmD3),
         I  => ddro(OD_DX1)
      );
   Uob6 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmD6),
         OB => vm_nio(vmD6),
         I  => ddro(OD_DX2)
      );
   Uob7 : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmD9),
         OB => vm_nio(vmD9),
         I  => ddro(OD_DX3)
      );
   Uobbco : OBUFDS
      generic map (
         CAPACITANCE => "DONT_CARE",
         IOSTANDARD  => "LVDS_25"
      )
      port map (
         O  => vm_pio(vmBCO),
         OB => vm_nio(vmBCO),
         I  => bco
      );
   Uoddrbco : ODDR2
      generic map (
         DDR_ALIGNMENT => "NONE",
         INIT          => '0',
         SRTYPE        => "SYNC"
      )
      port map (
         Q  => bco,
         C0 => clk,
         C1 => clkn,
         CE => HI,
         D0 => bco_ddr_n,
         D1 => bco_ddr,
         R  => rst,
         S  => LO
      );
   Umpower : m_power
      port map (
         hi => HI,
         lo => LO
      );

   gdo3: FOR ni2 IN 21 TO 23 GENERATE

      -- ModuleWare code(v1.12) for instance 'U_9' of 'buff'
      rx_strm_o(ni2*2) <= LO;

      -- ModuleWare code(v1.12) for instance 'U_12' of 'buff'
      rx_strm_o(ni2*2+1) <= LO;

      -- ModuleWare code(v1.12) for instance 'U_13' of 'buff'
      rx_link_idly_o(ni2) <= LO;
   end generate gdo3;

   gdo1: FOR ni IN 12 TO 19 GENERATE

      -- ModuleWare code(v1.12) for instance 'U_5' of 'buff'
      rx_strm_o(ni*2) <= LO;

      -- ModuleWare code(v1.12) for instance 'U_10' of 'buff'
      rx_link_idly_o(ni) <= LO;

      -- ModuleWare code(v1.12) for instance 'U_11' of 'buff'
      rx_strm_o(ni*2+1) <= LO;
   end generate gdo1;

   gdo2: FOR c IN 0 TO 7 GENERATE
      Uoddr1 : ODDR2
         generic map (
            DDR_ALIGNMENT => "NONE",
            INIT          => '0',
            SRTYPE        => "SYNC"
         )
         port map (
            Q  => ddro(c),
            C0 => clk,
            C1 => clkn,
            CE => HI,
            D0 => txsigs(c),
            D1 => txsigs(c+8),
            R  => rst,
            S  => LO
         );
   end generate gdo2;

end struct;
