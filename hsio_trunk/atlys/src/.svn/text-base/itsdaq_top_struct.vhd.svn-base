-- VHDL Entity atlys.itsdaq_top.symbol
--
-- Created by Matt Warren 2014
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1 (Build 6)
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library utils;
use utils.pkg_types.all;

entity itsdaq_top is
   generic( 
      SIM_MODE : integer := 0
   );
   port( 
      --#clockpinforAtlysrevCboard
      clk100_i       : in     std_logic;
      --#onBoardUSBcontroller
      usb_ast_ni     : in     std_logic;                       --#Bank=0, Pinname=IO_L35P_GCLK17, Schname=U1-FLAGA
      usb_dst_ni     : in     std_logic;                       --#Bank=0, Pinname=IO_L35N_GCLK16, Schname=U1-FLAGB
      usb_flag_i     : in     std_logic;                       --#Bank=0, Pinname=IO_L64P_SCP5, Schname=U1-FLAGC
      usb_wait_i     : in     std_logic;                       --#Bank=0, Pinname=IO_L63P_SCP7, Schname=U1-SLRD
      usb_db_io      : out    std_logic_vector (7 downto 0);   --#Bank=0, Pinname=IO_L2N, Schname=U1-FD0
      usb_clk_i      : in     std_logic;                       --#Bank=0, Pinname=IO_L37P_GCLK13, Schname=U1-IFCLK
      usb_oe_o       : out    std_logic;                       --#Bank=0, Pinname=IO_L64N_SCP4, Schname=U1-SLOE
      usb_wr_o       : out    std_logic;                       --#Bank=0, Pinname=IO_L63N_SCP6, Schname=U1-SLWR
      usb_pktend_o   : out    std_logic;                       --#Bank=0, Pinname=IO_L1N_VREF, Schname=U1-PKTEND
      usb_dir_o      : out    std_logic;                       --#Bank=0, Pinname=IO_L2P, Schname=U1-SLCS
      usb_mode_o     : out    std_logic;                       --#Bank=0, Pinname=IO_L6N, Schname=U1-INT0#
      usb_adr_o      : out    std_logic_vector (1 downto 0);   --#Bank=0, Pinname=IO_L62N_VREF, Schname=U1-FIFOAD0
      --#onBoardQuad-SPIFlash
      flash_clk_o    : out    std_logic;                       --#Bank=2, Pinname=IO_L1P_CCLK_2, Schname=SCK
      flash_cs_o     : out    std_logic;                       --#Bank=2, Pinname=IO_L65N_CSO_B_2, Schname=CS
      flash_dq_i     : in     std_logic_vector (3 downto 0);   --#Bank=2, Pinname=IO_L3N_MOSI_CSI_B_MISO0_2, Schname=SDI
      --#onBoardLeds
      led_o          : out    std_logic_vector (7 downto 0);   --#Bank=1, Pinname=IO_L52N_M1DQ15, Schname=LD0
      --#onBoardPUSHBUTTONS
      btn_i          : in     std_logic_vector (5 downto 0);   --#Bank=2, Pinname=IO_L1N_M0_CMPMISO_2, Schname=M0/RESET
      --#onBoardSWITCHES
      sw_i           : in     std_logic_vector (7 downto 0);   --#Bank=0, Pinname=IO_L37N_GCLK12, Schname=SW0
      --#DDR2
      ddr2_clk0_o    : out    std_logic;                       --#Bank=3, Pinname=IO_L46P_M3CLK, Schname=DDR-CK_P
      ddr2_clk1_o    : out    std_logic;                       --#Bank=3, Pinname=IO_L46N_M3CLKN, Schname=DDR-CK_N
      ddr2_cke_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L53P_M3CKE, Schname=DDR-CKE
      ddr2_ras_no    : out    std_logic;                       --#Bank=3, Pinname=IO_L43P_GCLK23_M3RASN, Schname=DDR-RAS
      ddr2_cas_no    : out    std_logic;                       --#Bank=3, Pinname=IO_L43N_GCLK22_IRDY2_M3CASN, Schname=DDR-CAS
      ddr2_wen_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L50P_M3WE, Schname=DDR-WE
      ddr2_rzq_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L31P, Schname=RZQ
      ddr2_zio_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L83P, Schname=ZIO
      ddr2_ba_o      : out    std_logic_vector (2 downto 0);   --#Bank=3, Pinname=IO_L48P_M3BA0, Schname=DDR-BA0
      ddr2_a_o       : out    std_logic_vector (12 downto 0);  --#Bank=3, Pinname=IO_L47P_M3A0, Schname=DDR-A0
      ddr2_dq_io     : inout  std_logic_vector (15 downto 0);  --#Bank=3, Pinname=IO_L37P_M3DQ0, Schname=DDR-DQ0
      ddr2_udqs_po   : out    std_logic;                       --#Bank=3, Pinname=IO_L34P_M3UDQS, Schname=DDR-UDQS_P
      ddr2_udqs_no   : out    std_logic;                       --#Bank=3, Pinname=IO_L34N_M3UDQSN, Schname=DDR-UDQS_N
      ddr2_ldqs_po   : out    std_logic;                       --#Bank=3, Pinname=IO_L39P_M3LDQS, Schname=DDR-LDQS_P
      ddr2_ldqs_no   : out    std_logic;                       --#Bank=3, Pinname=IO_L39N_M3LDQSN, Schname=DDR-LDQS_N
      ddr2_ldm_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L42N_GCLK24_M3LDM, Schname=DDR-LDM
      ddr2_udm_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L42P_GCLK25_TRDY2_M3UDM, Schname=DDR-UDM
      ddr2_odt_o     : out    std_logic;                       --#Bank=3, Pinname=IO_L45N_M3ODT, Schname=DDR-ODT
      --#onboardHDMIOUT
      hdmi_o_clk_po  : out    std_logic;                       --#Bank=0, Pinname=IO_L8P, Schname=TMDS-TX-CLK_P
      hdmi_o_clk_no  : out    std_logic;                       --#Bank=0, Pinname=IO_L8N_VREF, Schname=TMDS-TX-CLK_N
      hdmi_o_d_po    : out    std_logic_vector (2 downto 0);   --#Bank=0, Pinname=IO_L11P, Schname=TMDS-TX-0_P
      hdmi_o_d_no    : out    std_logic_vector (2 downto 0);   --#Bank=0, Pinname=IO_L11N, Schname=TMDS-TX-0_N
      hdmi_o_scl_io  : inout  std_logic;                       --#Bank=0, Pinname=IO_L34P_GCLK19, Schname=TMDS-TX-SCL
      hdmi_o_sda_io  : inout  std_logic;                       --#Bank=0, Pinname=IO_L34N_GCLK18, Schname=TMDS-TX-SDA
      --#onboardHDMIIN1(PMODA)
      hdmi_i1_clk_pi : in     std_logic;                       --#Bank=0, Pinname=IO_L36P_GCLK15, Schname=TMDS-RXB-CLK_P
      hdmi_i1_clk_ni : in     std_logic;                       --#Bank=0, Pinname=IO_L36N_GCLK14, Schname=TMDS-RXB-CLK_N
      hdmi_i1_d_pi   : in     std_logic_vector (2 downto 0);   --#Bank=0, Pinname=IO_L38P, Schname=TMDS-RXB-0_P
      hdmi_i1_d_ni   : in     std_logic_vector (2 downto 0);   --#Bank=0, Pinname=IO_L38N_VREF, Schname=TMDS-RXB-0_N
      hdmi_i1_scl_io : inout  std_logic;                       --#Bank=0, Pinname=IO_L50P, Schname=PMOD-SCL
      hdmi_i1_sda_io : inout  std_logic;                       --#Bank=0, Pinname=IO_L50N, Schname=PMOD-SDA
      --#onboardHDMIIN2
      hdmi_i2_clk_pi : in     std_logic;                       --#Bank=1, Pinname=IO_L43P_GCLK5_M1DQ4, Schname=TMDS-RX-CLK_P
      hdmi_i2_clk_ni : in     std_logic;                       --#Bank=1, Pinname=IO_L43N_GCLK4_M1DQ5, Schname=TMDS-RX-CLK_N
      hdmi_i2_d_pi   : in     std_logic_vector (2 downto 0);   --#Bank=1, Pinname=IO_L45P_A1_M1LDQS, Schname=TMDS-RX-0_P
      hdmi_i2_d_ni   : in     std_logic_vector (2 downto 0);   --#Bank=1, Pinname=IO_L45N_A0_M1LDQSN, Schname=TMDS-RX-0_N
      hdmi_i2_scl_io : inout  std_logic;                       --#Bank=1, Pinname=IO_L47P_FWE_B_M1DQ0, Schname=TMDS-RX-SCL
      hdmi_i2_sda_io : inout  std_logic;                       --#Bank=1, Pinname=IO_L47N_LDC_M1DQ1, Schname=TMDS-RX-SDA
      --#onboardUSBHostController
      usbhost_clk_o  : out    std_logic;                       --#Bank=1, Pinname=IO_L49P_M1DQ10, Schname=PIC32-SCK1
      usbhost_ss_o   : out    std_logic;                       --#Bank=1, Pinname=IO_L49N_M1DQ11, Schname=PIC32-SS1
      usbhost_sdi_i  : in     std_logic;                       --#Bank=1, Pinname=IO_L50P_M1UDQS, Schname=PIC32-SDI1
      usbhost_sdo_o  : out    std_logic;                       --#Bank=1, Pinname=IO_L48N_M1DQ9, Schname=PIC32-SDO1
      --#Audio
      aud_bitclk_i   : in     std_logic;                       --#Bank=1, Pinname=IO_L40N_GCLK10_M1A6, Schname=AUD-BIT-CLK
      aud_sdi_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L51N_M1DQ13, Schname=AUD-SDI
      aud_sdo_o      : out    std_logic;                       --#Bank=1, Pinname=IO_L50N_M1UDQSN, Schname=AUD-SDO
      aud_sync_o     : out    std_logic;                       --#Bank=1, Pinname=IO_L52P_M1DQ14, Schname=AUD-SYNC
      aud_rst_o      : out    std_logic;                       --#Bank=1, Pinname=IO_L51P_M1DQ12, Schname=AUD-RESET
      --#onboardVHDCI
      --#Channnel1connectstoPsignals,Channel2toNsignals
      vmod_exp_pio   : inout  std_logic_vector (20 downto 1);  --#Bank=2, Pinname=IO_L2P_CMPCLK, Schname=EXP-IO1_P
      vmod_exp_nio   : inout  std_logic_vector (20 downto 1);  --#Bank=2, Pinname=IO_L2N_CMPMOSI, Schname=EXP-IO1_N
      --#USBUARTConnector
      usbuart_rx_i   : in     std_logic;                       --#Bank=0, Pinname=IO_L66N_SCP0, Schname=USBB-RXD
      usbuart_tx_o   : out    std_logic;                       --#Bank=0, Pinname=IO_L66P_SCP1, Schname=USBB-TXD
      eth_txclk_o    : out    std_logic;                       --#Bank=1, Pinname=IO_L41N_GCLK8_M1CASN, Schname=E-TXCLK
      eth_txd_o      : out    std_logic_vector (7 downto 0);   --#Bank=1, Pinname=IO_L37N_A6_M1A1, Schname=E-TXD0
      eth_txen_o     : out    std_logic;                       --#Bank=1, Pinname=IO_L37P_A7_M1A0, Schname=E-TXEN
      eth_txer_o     : out    std_logic;                       --#Bank=1, Pinname=IO_L38N_A4_M1CLKN, Schname=E-TXER
      eth_gtxclk_o   : out    std_logic;                       --#Bank=1, Pinname=IO_L40P_GCLK11_M1A5, Schname=E-GTXCLK
      eth_rxd_i      : in     std_logic_vector (7 downto 0);   --#Bank=1, Pinname=IO_L38P_A5_M1CLK, Schname=E-RXD0
      eth_rxdv_i     : in     std_logic;                       --#Bank=1, Pinname=IO_L35P_A11_M1A7, Schname=E-RXDV
      eth_rxer_i     : in     std_logic;                       --#Bank=1, Pinname=IO_L35N_A10_M1A2, Schname=E-RXER
      eth_rxclk_i    : in     std_logic;                       --#Bank=1, Pinname=IO_L41P_GCLK9_IRDY1_M1RASN, Schname=E-RXCLK
      eth_mdc_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L1N_A24_VREF, Schname=E-MDC
      eth_mdi_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L48P_HDC_M1DQ8, Schname=E-MDIO
      eth_int_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L42N_GCLK6_TRDY1_M1LDM, Schname=E-INT
      eth_col_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L42N_GCLK6_TRDY1_M1LDM, Schname=E-INT
      eth_crs_i      : in     std_logic;                       --#Bank=1, Pinname=IO_L42N_GCLK6_TRDY1_M1LDM, Schname=E-INT
      --#TEMACEthernetMAC
      eth_rst_no     : out    std_logic;                       --#Bank=1, Pinname=IO_L32N_A16_M1A9, Schname=E-RESET
      led_status_o   : out    std_logic                        --LED_FPGA_STATUS
   );

-- Declarations

end itsdaq_top ;

-- VHDL from Block Diagram 
-- Generated by Mentor Graphics HDL Designer(TM) 2013.1 (Build 6) 
--
-- atlys.itsdaq_top.struct
--
-- Created by Matt Warren 2014
--

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library utils;
use utils.pkg_types.all;

library atlys;
use atlys.pkg_atlys_itsdaq.all;

library hsio;
use hsio.pkg_core_globals.all;

library unisim;
use unisim.VCOMPONENTS.all;


architecture struct of itsdaq_top is

   -- Architecture declarations

   -- Internal signal declarations
   --#PMODConnector
   signal pmod_ja_io     : std_logic_vector(7 downto 0);             --#Bank=2, Pinname=IO_L62N_D6, Schname=JA-D0_N
   --#onBoardLeds
   signal fw_version     : std_logic_vector(7 downto 0);             --#Bank=1, Pinname=IO_L52N_M1DQ15, Schname=LD0
   -- Client Receiver Interface - EMAC0
   signal led            : std_logic_vector(7 downto 0);
   signal HI             : std_logic;
   signal LO             : std_logic;
   signal rst            : std_logic;
   signal clk40          : std_logic;
   signal clk80          : std_logic;
   signal vmod_d         : std_logic_vector(15 downto 0);
   signal clk160         : std_logic;
   signal com            : std_logic;
   signal l0             : std_logic;
   signal l1             : std_logic;
   signal r3s            : std_logic;
   -- Client Receiver Interface - EMAC0
   signal led0           : std_logic_vector(7 downto 0);
   signal tick           : std_logic_vector(MAX_TICTOG downto 0);
   signal tog            : std_logic_vector(MAX_TICTOG downto 0);
   signal tog40          : std_logic_vector(MAX_TICTOG downto 0);
   signal rst_n          : std_logic;
   signal ZERO2          : std_logic_vector(1 downto 0);
   signal ZERO4          : std_logic_vector(3 downto 0);
   signal ZERO8          : std_logic_vector(7 downto 0);
   signal ZERO13         : std_logic_vector(12 downto 0);
   signal ZERO16         : std_logic_vector(15 downto 0);
   signal ext_por_n      : std_logic;
   signal ZERO64         : std_logic_vector(63 downto 0);
   signal tx_fifo_rst    : std_logic;
   signal rx_fifo_rst    : std_logic;
   -- rx ll fifo interface
   signal rx_lls         : t_llsrc;
   signal tx_lld         : std_logic;
   signal tx_lls         : t_llsrc;
   signal rx_lld         : std_logic;
   signal rawsigs        : std_logic_vector(15 downto 0);
   signal outsigs        : std_logic_vector(15 downto 0);
   signal dbg_outsigs    : std_logic_vector(15 downto 0);
   signal clk_ext_on     : std_logic;
   signal rx_strm        : std_logic_vector(135 downto 0);
   --idelay_ce_o   : out    std_logic_vector (71 downto 0);
--idelay_inc_o  : out    std_logic;
--idelay_zero_o : out    std_logic_vector (71 downto 0);
   signal idelay_ctl     : t_idelay_ctl;
   signal rx_link_idly   : std_logic_vector(67 downto 0);
   signal strm           : std_logic_vector(135 downto 0);
   signal link_idly      : std_logic_vector(67 downto 0);
   signal rst_drv        : std_logic;
   signal sda_tx         : std_logic_vector(15 downto 0);
   signal sck_t          : std_logic_vector(15 downto 0);
   signal sck            : std_logic_vector(15 downto 0);
   signal sda_t          : std_logic_vector(15 downto 0);
   signal sda_rx         : std_logic_vector(15 downto 0);
   signal dbg_count      : std_logic_vector(7 downto 0);
   signal clocky_leds    : std_logic_vector(7 downto 0);
   signal stat_clks_top  : std_logic_vector(7 downto 0);
   -- registers
   signal reg            : t_reg_bus;
   signal clk160ps       : std_logic;
   signal db_wr          : std_logic_vector(31 downto 0);
   signal stat_clks_main : std_logic_vector(3 downto 0);
   signal s40            : std_logic;
   signal sf_stat_word   : slv64_array(1 downto 0);
   signal sf_mac_stat    : slv64_array(1 downto 0);
   signal stat_word_usb  : std_logic_vector(63 downto 0);
   signal stat_word_cu   : std_logic_vector(63 downto 0);
   signal clk125         : std_logic;
   signal clkn125        : std_logic;
   signal clk100_bufg    : std_ulogic;
   signal clk125_locked  : std_logic;
   signal clk_locked     : std_logic;
   signal macaddress     : std_logic_vector(47 downto 0);
   signal net_leds       : std_logic_vector(3 downto 0);


   -- Component Declarations
   component dio_itsdaq_drv
   generic (
      LINK_ID_MIN : integer := 0
   );
   port (
      clk            : in     std_logic ;
      coml0_i        : in     std_logic ;
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_i   : in     t_idelay_ctl ;
      l1r3_i         : in     std_logic ;
      noise_i        : in     std_logic ;
      rawsigs_i      : in     std_logic_vector (15 downto 0);
      -- registers
      reg            : in     t_reg_bus ;
      rst            : in     std_logic ;
      rst_drv_i      : in     std_logic ;
      strobe40_i     : in     std_logic ;
      --dbg_sig_o  : out    std_logic;
      dbg_coml0_o    : out    std_logic ;
      --dbg_sig_o  : out    std_logic;
      dbg_l1r3_o     : out    std_logic ;
      --dbg_sig_o  : out    std_logic;
      dbg_spare_o    : out    std_logic ;
      rx_link_idly_o : out    std_logic_vector (23 downto 0);
      rx_strm_o      : out    std_logic_vector (47 downto 0);
      vm_nio         : inout  std_logic_vector (20 downto 1);
      vm_pio         : inout  std_logic_vector (20 downto 1)
   );
   end component;
   component itsdaq_clk_rst
   port (
      --#clockpinforAtlysrevCboard
      clk100_i        : in     std_logic ;
      rst_o           : out    std_logic ;
      clk160_o        : out    std_logic ;
      clk80_o         : out    std_logic ;
      clk40_o         : out    std_logic ;
      ext_bco_i       : in     std_logic ;
      rst_btn_ni      : in     std_logic ;
      rst_no          : out    std_logic ;
      clk_ext_sel_i   : in     std_logic ;
      ext_por_no      : out    std_logic ;
      strobe40_o      : out    std_logic ;
      clk125_locked_o : out    std_logic ;
      clk125_o        : out    std_logic ;
      clk_locked_o    : out    std_logic 
   );
   end component;
   component net_top
   port (
      -- asynchronous reset
      glbl_rst          : in     std_logic ;
      -- 200MHz clock input from board
      --***clk_in_p                      : in  std_logic;
      --***clk_in_n                      : in  std_logic;
      clk125_i          : in     std_logic ;                  --***
      dcm_locked_i      : in     std_logic ;                  --***
      phy_resetn        : out    std_logic ;
      -- GMII Interface
      -----------------
      gmii_txd          : out    std_logic_vector (7 downto 0);
      gmii_tx_en        : out    std_logic ;
      gmii_tx_er        : out    std_logic ;
      gmii_tx_clk       : out    std_logic ;
      gmii_rxd          : in     std_logic_vector (7 downto 0);
      gmii_rx_dv        : in     std_logic ;
      gmii_rx_er        : in     std_logic ;
      gmii_rx_clk       : in     std_logic ;
      gmii_col          : in     std_logic ;
      gmii_crs          : in     std_logic ;
      -- Serialised statistics vectors
      --------------------------------
      tx_statistics_s   : out    std_logic ;
      rx_statistics_s   : out    std_logic ;
      -- Serialised Pause interface controls
      --------------------------------------
      pause_req_s       : in     std_logic ;
      fifo_clk_locked_i : in     std_logic ;
      fifo_clk_i        : in     std_logic ;                  -- clock to be sync'ed to
      monitor_o         : out    std_logic_vector (3 downto 0);
      rx_lld_i          : in     std_logic ;
      tx_lls_i          : in     t_llsrc ;
      tx_lld_o          : out    std_logic ;
      rx_lls_o          : out    t_llsrc ;
      macaddress_i      : in     std_logic_vector (47 downto 0)
   );
   end component;
   component main_top
   generic (
      SIM_MODE    : integer                       := 0;
      TOP_ID      : integer                       := 16#0C02#;
      ISHSIO      : integer                       := 1;
      TRIG_TLU_EN : integer                       := 1;
      TRIG_TDC_EN : integer                       := 1;
      BUILD_NO    : integer                       := 1;
      RO_MOD_PRES : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_RAW  : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_HST  : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_TYPE : std_logic_vector(35 downto 0) := x"000000000";
      RO_MOD_IDBG : std_logic_vector(35 downto 0) := x"000000000"
   );
   port (
      idc_p3_io        : inout  std_logic_vector (31 downto 0); --IDC_P3
      sim_dat_lvds_o   : out    std_logic_vector (31 downto 0);
      idc_p4_io        : inout  std_logic_vector (31 downto 0); --IDC_P4
      idc_p5_io        : out    std_logic_vector (31 downto 0); --IDC_P5
      led_status_o     : out    std_logic ;                     --LED_FPGA_STATUS
      -- DISPLAY
      disp_clk_o       : out    std_logic ;                     --DISP_CLK
      disp_dat_o       : out    std_logic ;                     --DISP_DAT
      disp_rst_no      : out    std_logic ;                     --DISP_RST_N
      disp_load_no     : out    std_logic_vector (1 downto 0);  --DISP_LOAD1_N
      tx_fifo_rst_o    : out    std_logic ;
      rx_fifo_rst_o    : out    std_logic ;
      sma_io           : inout  std_logic_vector (8 downto 1);  --IDC_P5
      sw_hex_ni        : in     std_logic_vector (3 downto 0);
      clk              : in     std_logic ;
      clk40            : in     std_logic ;
      spiser_clk_o     : out    std_logic ;
      -- payload output
      spiser_com_o     : out    std_logic ;
      sf_stat_word_i   : in     slv64_array (1 downto 0);
      tx_ok_i          : in     std_logic ;
      -- Client Receiver Interface - EMAC0
      rx_ok_i          : in     std_logic ;
      sf_mac_stat_i    : in     slv64_array (1 downto 0);
      sf_syncacq_i     : in     std_logic_vector (1 downto 0);
      stat_word_cu     : in     std_logic_vector (63 downto 0);
      stat_word_usb    : in     std_logic_vector (63 downto 0);
      ti2c_cvst_no     : out    std_logic_vector (2 downto 0);
      ti2c_cvstt_no    : out    std_logic_vector (2 downto 0);
      tx_lls_o         : out    t_llsrc ;
      sck_o            : out    slv16 ;
      sck_to           : out    slv16 ;
      sda_o            : out    slv16 ;
      sda_to           : out    slv16 ;
      sda_i            : in     slv16 ;
      rst_in           : in     std_logic ;
      tx_lld_i         : in     std_logic ;
      rx_lld_o         : out    std_logic ;
      -- rx ll fifo interface
      rx_lls_i         : in     t_llsrc ;
      rawsigs_o        : out    std_logic_vector (15 downto 0);
      -- registers
      reg              : out    t_reg_bus ;
      strobe40_i       : in     std_logic ;
      outsigs_o        : out    std_logic_vector (15 downto 0);
      dbg_outsigs_i    : in     std_logic_vector (15 downto 0);
      clk_ext_on_i     : in     std_logic ;
      strm_i           : in     std_logic_vector (135 downto 0);
      --idelay_ce_o   : out    std_logic_vector (71 downto 0);
      --idelay_inc_o  : out    std_logic;
      --idelay_zero_o : out    std_logic_vector (71 downto 0);
      idelay_ctl_o     : out    t_idelay_ctl ;
      link_idly_i      : in     std_logic_vector (67 downto 0);
      rst_drv_o        : out    std_logic ;
      dbg_count_o      : out    std_logic_vector (7 downto 0);
      clocky_leds_o    : out    std_logic_vector (7 downto 0);
      lemo_clk_o       : out    std_logic ;
      clk_p2_pll_i     : in     std_logic ;
      stat_clks_top_i  : in     std_logic_vector (7 downto 0);
      tlu_busy         : out    std_logic ;
      tlu_tclk         : out    std_logic ;
      tlu_trig         : in     std_logic ;
      db_wr            : out    std_logic_vector (31 downto 0);
      stat_clks_main_i : in     std_logic_vector (3 downto 0);
      clk160ps         : in     std_logic ;
      clk160           : in     std_logic 
   );
   end component;
   component BUFG
   port (
      I : in     std_ulogic;
      O : out    std_ulogic
   );
   end component;
   component ODDR2
   generic (
      DDR_ALIGNMENT : string := "NONE";
      INIT          : bit    := '0';
      SRTYPE        : string := "SYNC"
   );
   port (
      C0 : in     std_ulogic;
      C1 : in     std_ulogic;
      CE : in     std_ulogic  := 'H';
      D0 : in     std_ulogic;
      D1 : in     std_ulogic;
      R  : in     std_ulogic  := 'L';
      S  : in     std_ulogic  := 'L';
      Q  : out    std_ulogic
   );
   end component;
   component led_pulse
   port (
      clk    : in     std_logic ;
      i      : in     std_logic ;
      tick_i : in     std_logic ;
      rst    : in     std_logic ;
      o      : out    std_logic 
   );
   end component;
   component ticks_gen
   generic (
      SIM_MODE : integer := 0;
      CLK_MHZ  : integer := 80
   );
   port (
      clk      : in     std_logic;
      rst      : in     std_logic;
      tick_o   : out    std_logic_vector (MAX_TICTOG downto 0);
      toggle_o : out    std_logic_vector (MAX_TICTOG downto 0)
   );
   end component;


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 3 eb3
   -- CHANGELOG
   -------------------------------------------------
   -- 21/07/2014 v00 birthday!
   
   fw_version <= x"00";

   -- HDL Embedded Text Block 4 eb4
   -- eb3 3
   HI <= '1';
   LO <= '0';
   ZERO2 <=  "00";
   ZERO4 <=  "0000";
   ZERO8 <=  "00000000";
   ZERO13 <= "0000000000000";
   ZERO16 <= "0000000000000000";
   ZERO64 <= x"0000000000000000";

   -- HDL Embedded Text Block 6 eb6
   macaddress <= x"a0ddccbbaa00";

   -- HDL Embedded Text Block 7 eb7
   -- eb6 6 -- set non-build streams to zero
   gen_strms_filter  : for m in 0 to 33 generate
   
     gen_if_present : if (C_MOD_PRES(m) = '1') generate
       strm(m*4+0) <= rx_strm(m*4+0);
       strm(m*4+1) <= rx_strm(m*4+1);
       strm(m*4+2) <= rx_strm(m*4+2);
       strm(m*4+3) <= rx_strm(m*4+3);
       link_idly(m*2+0) <= rx_link_idly(m*2+0);
       link_idly(m*2+1) <= rx_link_idly(m*2+1);
     end generate;
   
     gen_if_not_present : if (C_MOD_PRES(m) = '0') generate
       strm(m*4+0) <= '0';
       strm(m*4+1) <= '0';
       strm(m*4+2) <= '0';
       strm(m*4+3) <= '0';
       link_idly(m*2+0) <= '0';
       link_idly(m*2+1) <= '0';
      end generate;
   
   end generate;


   -- ModuleWare code(v1.12) for instance 'U_19' of 'buff'
   led0(4) <= LO;

   -- ModuleWare code(v1.12) for instance 'U_20' of 'buff'
   led0(5) <= LO;

   -- ModuleWare code(v1.12) for instance 'U_22' of 'buff'
   led(7) <= tog(T_2Hz);

   -- ModuleWare code(v1.12) for instance 'U_23' of 'buff'
   usbuart_tx_o <= usbuart_rx_i;

   -- ModuleWare code(v1.12) for instance 'U_31' of 'buff'
   led0(0) <= net_leds(0);

   -- ModuleWare code(v1.12) for instance 'U_32' of 'buff'
   led0(1) <= net_leds(1);

   -- ModuleWare code(v1.12) for instance 'U_33' of 'buff'
   led0(2) <= net_leds(2);

   -- ModuleWare code(v1.12) for instance 'U_34' of 'buff'
   led0(3) <= net_leds(3);

   -- ModuleWare code(v1.12) for instance 'U_36' of 'buff'
   led0(6) <= LO;

   -- ModuleWare code(v1.12) for instance 'U_13' of 'inv'
   clkn125 <= not(clk125);

   -- ModuleWare code(v1.12) for instance 'U_1' of 'mux'
   prcu_1combo: process(led, fw_version, btn_i(5))
   begin
      case btn_i(5) is
      when '0'|'L' => led_o <= led;
      when '1'|'H' => led_o <= fw_version;
      when others => led_o <= (others => 'X');
      end case;
   end process prcu_1combo;

   -- Instance port mappings.
   Udio : dio_itsdaq_drv
      generic map (
         LINK_ID_MIN => 0
      )
      port map (
         clk            => clk80,
         coml0_i        => outsigs(OS_STT_COM),
         idelay_ctl_i   => idelay_ctl,
         l1r3_i         => outsigs(OS_STT_L1R),
         noise_i        => outsigs(OS_STT_NOS),
         rawsigs_i      => rawsigs,
         reg            => reg,
         rst            => rst,
         rst_drv_i      => rst_drv,
         strobe40_i     => s40,
         dbg_coml0_o    => dbg_outsigs(OS_STT_COM),
         dbg_l1r3_o     => dbg_outsigs(OS_STT_L1R),
         dbg_spare_o    => dbg_outsigs(OS_STT_NOS),
         rx_link_idly_o => rx_link_idly(23 downto 0),
         rx_strm_o      => rx_strm(47 downto 0),
         vm_nio         => vmod_exp_nio,
         vm_pio         => vmod_exp_pio
      );
   Uclkrstblk : itsdaq_clk_rst
      port map (
         clk100_i        => clk100_bufg,
         rst_o           => rst,
         clk160_o        => clk160,
         clk80_o         => clk80,
         clk40_o         => clk40,
         ext_bco_i       => LO,
         rst_btn_ni      => btn_i(0),
         rst_no          => rst_n,
         clk_ext_sel_i   => LO,
         ext_por_no      => ext_por_n,
         strobe40_o      => s40,
         clk125_locked_o => clk125_locked,
         clk125_o        => clk125,
         clk_locked_o    => clk_locked
      );
   --------------------------------------------------------------------------------
   -- The entity declaration for the example_design level wrapper.
   --------------------------------------------------------------------------------
   Ueth : net_top
      port map (
         glbl_rst          => rst,
         clk125_i          => clk125,
         dcm_locked_i      => clk125_locked,
         phy_resetn        => eth_rst_no,
         gmii_txd          => eth_txd_o,
         gmii_tx_en        => eth_txen_o,
         gmii_tx_er        => eth_txer_o,
         gmii_tx_clk       => eth_txclk_o,
         gmii_rxd          => eth_rxd_i,
         gmii_rx_dv        => eth_rxdv_i,
         gmii_rx_er        => eth_rxer_i,
         gmii_rx_clk       => eth_rxclk_i,
         gmii_col          => eth_col_i,
         gmii_crs          => eth_crs_i,
         tx_statistics_s   => open,
         rx_statistics_s   => open,
         pause_req_s       => LO,
         fifo_clk_locked_i => clk_locked,
         fifo_clk_i        => clk80,
         monitor_o         => net_leds,
         rx_lld_i          => rx_lld,
         tx_lls_i          => tx_lls,
         tx_lld_o          => tx_lld,
         rx_lls_o          => rx_lls,
         macaddress_i      => macaddress
      );
   Umain : main_top
      generic map (
         SIM_MODE    => SIM_MODE,
         TOP_ID      => 16#0B0B#,
         ISHSIO      => 0,
         TRIG_TLU_EN => C_TLU_EN,
         TRIG_TDC_EN => C_TDC_EN,
         BUILD_NO    => C_FW_BUILD_NO,
         RO_MOD_PRES => C_MOD_PRES,
         RO_MOD_RAW  => C_MOD_RAW,
         RO_MOD_HST  => C_MOD_HST,
         RO_MOD_TYPE => C_MOD_TYPE,
         RO_MOD_IDBG => C_MOD_IDBG
      )
      port map (
         idc_p3_io        => open,
         sim_dat_lvds_o   => open,
         idc_p4_io        => open,
         idc_p5_io        => open,
         led_status_o     => led_status_o,
         disp_clk_o       => open,
         disp_dat_o       => open,
         disp_rst_no      => open,
         disp_load_no     => open,
         tx_fifo_rst_o    => tx_fifo_rst,
         rx_fifo_rst_o    => rx_fifo_rst,
         sma_io           => open,
         sw_hex_ni        => ZERO4,
         clk              => clk80,
         clk40            => clk40,
         spiser_clk_o     => open,
         spiser_com_o     => open,
         sf_stat_word_i   => sf_stat_word,
         tx_ok_i          => LO,
         rx_ok_i          => LO,
         sf_mac_stat_i    => sf_mac_stat,
         sf_syncacq_i     => ZERO2,
         stat_word_cu     => stat_word_cu,
         stat_word_usb    => stat_word_usb,
         ti2c_cvst_no     => open,
         ti2c_cvstt_no    => open,
         tx_lls_o         => tx_lls,
         sck_o            => sck,
         sck_to           => sck_t,
         sda_o            => sda_tx,
         sda_to           => sda_t,
         sda_i            => sda_rx,
         rst_in           => rst,
         tx_lld_i         => tx_lld,
         rx_lld_o         => rx_lld,
         rx_lls_i         => rx_lls,
         rawsigs_o        => rawsigs,
         reg              => reg,
         strobe40_i       => s40,
         outsigs_o        => outsigs,
         dbg_outsigs_i    => dbg_outsigs,
         clk_ext_on_i     => clk_ext_on,
         strm_i           => strm,
         idelay_ctl_o     => idelay_ctl,
         link_idly_i      => link_idly,
         rst_drv_o        => rst_drv,
         dbg_count_o      => dbg_count,
         clocky_leds_o    => clocky_leds,
         lemo_clk_o       => open,
         clk_p2_pll_i     => LO,
         stat_clks_top_i  => stat_clks_top,
         tlu_busy         => open,
         tlu_tclk         => open,
         tlu_trig         => LO,
         db_wr            => db_wr,
         stat_clks_main_i => stat_clks_main,
         clk160ps         => clk160ps,
         clk160           => clk160
      );
   Ubufg100 : BUFG
      port map (
         O => clk100_bufg,
         I => clk100_i
      );
   Uddrcgtx : ODDR2
      generic map (
         DDR_ALIGNMENT => "NONE",
         INIT          => '0',
         SRTYPE        => "SYNC"
      )
      port map (
         Q  => eth_gtxclk_o,
         C0 => clk125,
         C1 => clkn125,
         CE => HI,
         D0 => HI,
         D1 => LO,
         R  => rst,
         S  => LO
      );
   Uticksgen : ticks_gen
      generic map (
         SIM_MODE => 0,
         CLK_MHZ  => 80
      )
      port map (
         tick_o   => tick,
         toggle_o => tog,
         clk      => clk80,
         rst      => rst
      );
   Uticksgen1 : ticks_gen
      generic map (
         SIM_MODE => 0,
         CLK_MHZ  => 40
      )
      port map (
         tick_o   => open,
         toggle_o => tog40,
         clk      => clk40,
         rst      => rst
      );

   g0: FOR i IN 0 TO 4 GENERATE
      U_47 : led_pulse
         port map (
            clk    => clk80,
            i      => led0(i),
            tick_i => tick(T_10Hz),
            rst    => rst,
            o      => led(i)
         );
   end generate g0;

   g1: IF 1=2 GENERATE

      -- ModuleWare code(v1.12) for instance 'U_15' of 'buff'
      pmod_ja_io(4) <= vmod_d(1);

      -- ModuleWare code(v1.12) for instance 'U_16' of 'buff'
      pmod_ja_io(5) <= vmod_d(7);

      -- ModuleWare code(v1.12) for instance 'U_27' of 'buff'
      pmod_ja_io(0) <= com;

      -- ModuleWare code(v1.12) for instance 'U_28' of 'buff'
      pmod_ja_io(1) <= l0;

      -- ModuleWare code(v1.12) for instance 'U_29' of 'buff'
      pmod_ja_io(2) <= l1;

      -- ModuleWare code(v1.12) for instance 'U_30' of 'buff'
      pmod_ja_io(3) <= r3s;

      -- ModuleWare code(v1.12) for instance 'U_17' of 'buff'
      pmod_ja_io(6) <= vmod_d(4);

      -- ModuleWare code(v1.12) for instance 'U_18' of 'buff'
      pmod_ja_io(7) <= vmod_d(10);
   end generate g1;

end struct;
